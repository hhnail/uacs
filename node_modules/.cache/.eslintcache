[{"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\index.js":"1","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\App.js":"2","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\router\\IndexRouter.js":"3","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\index.js":"4","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\Login\\index.js":"5","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\AssociationList\\index.js":"6","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\PermissionList\\index.js":"7","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\RoleList\\index.js":"8","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\Home\\index.js":"9","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\NoPermission\\index.js":"10","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\TopHeader\\index.js":"11","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\SideMenu\\index.js":"12","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\UserList\\index.jsx":"13","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\user-manage\\UserForm.js":"14","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\SysRouter\\index.jsx":"15","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\AddRecruitment\\index.js":"16","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationEditor\\index.jsx":"17","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\User\\index.jsx":"18","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserHeader\\index.jsx":"19","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationCard\\index.jsx":"20","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserInfo\\index.jsx":"21","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserManage\\index.jsx":"22"},{"size":151,"mtime":1629535454211,"results":"23","hashOfConfig":"24"},{"size":393,"mtime":1629632591559,"results":"25","hashOfConfig":"24"},{"size":1164,"mtime":1633174261646,"results":"26","hashOfConfig":"24"},{"size":1584,"mtime":1633137951104,"results":"27","hashOfConfig":"24"},{"size":6843,"mtime":1633184131240,"results":"28","hashOfConfig":"24"},{"size":229,"mtime":1629513807051,"results":"29","hashOfConfig":"24"},{"size":6950,"mtime":1631611226854,"results":"30","hashOfConfig":"24"},{"size":8358,"mtime":1632563513211,"results":"31","hashOfConfig":"24"},{"size":667,"mtime":1631686596390,"results":"32","hashOfConfig":"24"},{"size":238,"mtime":1629528970215,"results":"33","hashOfConfig":"24"},{"size":3285,"mtime":1633184174922,"results":"34","hashOfConfig":"24"},{"size":6168,"mtime":1633313704417,"results":"35","hashOfConfig":"24"},{"size":8516,"mtime":1633097072076,"results":"36","hashOfConfig":"24"},{"size":2790,"mtime":1632015282488,"results":"37","hashOfConfig":"24"},{"size":1488,"mtime":1633137881149,"results":"38","hashOfConfig":"24"},{"size":11363,"mtime":1633339496918,"results":"39","hashOfConfig":"24"},{"size":1187,"mtime":1633177185586,"results":"40","hashOfConfig":"24"},{"size":2557,"mtime":1633174774168,"results":"41","hashOfConfig":"24"},{"size":1472,"mtime":1629014002442,"results":"42","hashOfConfig":"24"},{"size":1151,"mtime":1629027725899,"results":"43","hashOfConfig":"24"},{"size":5025,"mtime":1633174102089,"results":"44","hashOfConfig":"24"},{"size":1866,"mtime":1629077512900,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"kh8qtk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\index.js",[],["101","102"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\App.js",["103"],"import './App.css';\n// import {useEffect} from 'react'\n// import axios from 'axios'\nimport IndexRouter from './router/IndexRouter'\nimport { Divider } from 'rc-menu';\n\nfunction App() {\n\n  // useEffect(() => {\n  //   axios.get(\"/association/getAllAssociationList\").then((res)=>{\n  //     console.log(res.data);\n  //   })\n  // }, [])\n\n  return (\n      <IndexRouter />\n  );\n}\n\nexport default App;\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\router\\IndexRouter.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\index.js",["104"],"// 第三方\r\nimport React, { Component } from 'react'\r\n// uacs\r\nimport SideMenu from '../../components/SideMenu'\r\nimport TopHeader from '../../components/TopHeader'\r\nimport SysRouter from './SysRouter'\r\n// css\r\nimport './index.css'\r\n// antd\r\nimport { Layout, Breadcrumb } from 'antd';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default class SandBox extends Component {\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                {/* 侧边栏 */}\r\n                <SideMenu />\r\n                {/* 内容布局 */}\r\n                <Layout>\r\n                    {/* 头部导航栏 */}\r\n                    <TopHeader />\r\n                    {/* TODO 面包屑-标记当前位置 */}\r\n                    {/*<Breadcrumb style={{ margin: '16px 19px' }}>*/}\r\n                    {/*    <Breadcrumb.Item>HOME</Breadcrumb.Item>*/}\r\n                    {/*    <Breadcrumb.Item>社团管理</Breadcrumb.Item>*/}\r\n                    {/*    <Breadcrumb.Item>社团列表</Breadcrumb.Item>*/}\r\n                    {/*</Breadcrumb>*/}\r\n                    {/* 前端路由 */}\r\n                    <Content\r\n                        className=\"site-layout-background\"\r\n                        style={{\r\n                            padding: 24,\r\n                            margin: 0,\r\n                            minHeight: 240,\r\n                            overflow: 'auto'\r\n                        }}\r\n                    >\r\n                        <SysRouter></SysRouter>\r\n                    </Content>\r\n\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\Login\\index.js",["105","106","107","108","109","110","111","112","113","114","115","116"],"import React, {useState} from 'react'\r\nimport {\r\n    Menu,\r\n    Layout,\r\n    Form,\r\n    Button,\r\n    Radio,\r\n    Select,\r\n    DatePicker,\r\n    InputNumber,\r\n    TreeSelect,\r\n    Switch,\r\n    Input,\r\n    Cascader,\r\n    message,\r\n} from 'antd';\r\n\r\nimport {\r\n    UnlockOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport axios from \"axios\";\r\nimport qs from 'qs'\r\n\r\nimport Particles from 'react-particles-js';\r\n\r\nimport './index.css'\r\n\r\nconst {Header, Content, Footer} = Layout;\r\n\r\nexport default function Login(props) {\r\n\r\n    const onFinish = (values) => {\r\n        // console.log(\"==1 values\", values)\r\n        // console.log(\"==1 values\", props)\r\n\r\n        // 验证后台数据\r\n        axios({\r\n            url: \"/user/login\",\r\n            method: 'post',\r\n            data: qs.stringify(values),\r\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n        }).then(res => {\r\n            console.log(res)\r\n            if (res.data.data) { // 如果data非空,说明验证成功\r\n                localStorage.setItem(\"token\", res.data.data.accessToken) // 将token保存到浏览器中\r\n                localStorage.setItem(\"userInfo\", JSON.stringify(res.data.data)) // 将token保存到浏览器中\r\n                props.history.push(\"/\") // 跳转到主页面\r\n                return\r\n            }\r\n            message.error(\"用户名或密码输入错误！\") // 验证失败，提示用户\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginBackGround\">\r\n            {/*粒子效果*/}\r\n            <Particles\r\n                // 粒子效果高度为当前元素高度\r\n                height={document.documentElement.clientHeight}\r\n                // 粒子效果参数\r\n                params={\r\n                    {\r\n                        \"background\": {\r\n                            \"color\": {\r\n                                \"value\": \"navajowhite\"\r\n                            },\r\n                            \"image\": \"url('/images/rainbow_cat.gif')\",\r\n                            \"position\": \"0 15%\",\r\n                            \"repeat\": \"no-repeat\",\r\n                            \"size\": \"60%\"\r\n                        },\r\n                        \"fullScreen\": {\r\n                            \"enable\": true,\r\n                            \"zIndex\": 1\r\n                        },\r\n                        \"interactivity\": {\r\n                            \"events\": {\r\n                                \"onClick\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"repulse\"\r\n                                },\r\n                                \"onHover\": {\r\n                                    \"mode\": \"grab\"\r\n                                }\r\n                            },\r\n                            \"modes\": {\r\n                                \"bubble\": {\r\n                                    \"distance\": 400,\r\n                                    \"duration\": 2,\r\n                                    \"opacity\": 8,\r\n                                    \"size\": 40\r\n                                },\r\n                                \"grab\": {\r\n                                    \"distance\": 200\r\n                                }\r\n                            }\r\n                        },\r\n                        \"particles\": {\r\n                            \"color\": {\r\n                                \"value\": \"#ffffff\"\r\n                            },\r\n                            \"links\": {\r\n                                \"color\": {\r\n                                    \"value\": \"#ffffff\"\r\n                                },\r\n                                \"distance\": 150,\r\n                                \"opacity\": 0.4\r\n                            },\r\n                            \"move\": {\r\n                                \"attract\": {\r\n                                    \"rotate\": {\r\n                                        \"x\": 600,\r\n                                        \"y\": 1200\r\n                                    }\r\n                                },\r\n                                \"direction\": \"left\",\r\n                                \"enable\": true,\r\n                                \"outModes\": {\r\n                                    \"bottom\": \"out\",\r\n                                    \"left\": \"out\",\r\n                                    \"right\": \"out\",\r\n                                    \"top\": \"out\"\r\n                                },\r\n                                \"speed\": 6,\r\n                                \"straight\": true\r\n                            },\r\n                            \"opacity\": {\r\n                                \"value\": 0.5,\r\n                                \"animation\": {\r\n                                    \"speed\": 1,\r\n                                    \"minimumValue\": 0.1\r\n                                }\r\n                            },\r\n                            \"shape\": {\r\n                                \"options\": {\r\n                                    \"star\": {\r\n                                        \"sides\": 5\r\n                                    }\r\n                                },\r\n                                \"type\": \"star\"\r\n                            },\r\n                            \"size\": {\r\n                                \"random\": {\r\n                                    \"enable\": true\r\n                                },\r\n                                \"value\": {\r\n                                    \"min\": 1,\r\n                                    \"max\": 4\r\n                                },\r\n                                \"animation\": {\r\n                                    \"speed\": 40,\r\n                                    \"minimumValue\": 0.1\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            />\r\n            <div className=\"userFormContainer\">\r\n                <div className=\"loginTitle\">UACS社团管理-橘集</div>\r\n                <Form labelCol={{span: 4,}}\r\n                      onFinish={onFinish}\r\n                >\r\n                    <Form.Item name=\"userId\">\r\n                        <Input placeholder=\"请输入学号/职工号\" id=\"userId\" prefix={<UserOutlined/>}/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password\">\r\n                        <Input.Password placeholder=\"请输入密码\" id=\"password\" prefix={<UnlockOutlined/>}/>\r\n                    </Form.Item>\r\n                    <Form.Item style={{paddingLeft: '50%',}}>\r\n                        <Button type={\"primary\"} htmlType={\"submit\"}>登录</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\AssociationList\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\PermissionList\\index.js",["117"],"import React, { Component } from 'react'\r\nimport { Table, Tag, Button, Modal, Popover, Switch } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\n\r\nconst { confirm } = Modal\r\n\r\nexport default class PermissonList extends Component {\r\n\r\n    state = {\r\n        dataSource: [],\r\n        columns: [\r\n            {\r\n                title: 'ID',\r\n                // 通过dataIndex映射VO字段\r\n                dataIndex: 'key',\r\n                // key: 'key',\r\n                render: (key) => {\r\n                    return <b>{key}</b>\r\n                }\r\n            },\r\n            {\r\n                title: '权限名称',\r\n                dataIndex: 'title',\r\n            },\r\n            {\r\n                title: '权限路径',\r\n                dataIndex: 'routePath',\r\n                render: (routePath) => {\r\n                    return <Tag color={\"orange\"}>{routePath}</Tag>\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (item) => {\r\n                    return <div>\r\n                        <Popover\r\n                            style={{}}\r\n                            content={\r\n                                <div>\r\n                                    <Switch checked={item.type === \"MENU_ELEMENT\"} onClick={() => this.changeMenuState(item)}></Switch>\r\n                                </div>}\r\n                            title=\"是否在左侧菜单栏展示\"\r\n                            trigger={\r\n                                item.type === \"MENU_ELEMENT\" || item.type === \"MENU_ELEMENT_CLOSE\" ?\r\n                                    \"click\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            {/* {item.type === \"MENU_ELEMENT\" &&} */}\r\n                            <Button\r\n                                shape={\"circle\"}\r\n                                icon={<EditOutlined />}\r\n                            // style={item.type === \"MENU_ELEMENT\" ? {\r\n                            //     border: \"1px solid rgb(165, 99, 13)\",\r\n                            //     color: \"rgb(165, 99, 13)\"\r\n                            // } : { border: \"1px\" }}\r\n                            // disabled={item.type === \"PAGE_ELEMENT\"}\r\n                            >\r\n                            </Button>\r\n                        </Popover>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<DeleteOutlined />}\r\n                            danger\r\n                            onClick={() => this.confirmDelete(item)}\r\n                        >\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            },\r\n        ],\r\n    }\r\n\r\n\r\n    confirmDelete = (item) => {\r\n        // const { dataSource } = this.state\r\n        // console.log(\"==11 dataSource\",this.state.dataSource);\r\n        const { dataSource } = this.state\r\n        const thisPoint = this\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined />,\r\n            onOk() {\r\n                // console.log(\"==10 item\", item);\r\n                // 同步页面\r\n                let ds = []\r\n                // let ds = Array.from(dataSource)\r\n                if (item.grade === 1) {\r\n                    // console.log(\"==11 \", ds);\r\n                    ds = dataSource.filter(data => data.key !== item.key)\r\n                } else if (item.grade === 2) {\r\n                    // console.log(\"==12 \", ds);\r\n                    dataSource.map((firstPermission) => {\r\n                        if (firstPermission.children !== \"\") {\r\n                            firstPermission.children = firstPermission.children.filter((child) => child.key !== item.key)\r\n                            if (firstPermission.children.length === 0) {\r\n                                firstPermission.children = \"\"\r\n                            }\r\n                            ds.push(firstPermission)\r\n                            // console.log(\"==14 after push:\", ds);\r\n                        } else {\r\n                            ds.push(firstPermission)\r\n                        }\r\n\r\n                    })\r\n                }\r\n                thisPoint.setState({ dataSource: ds })\r\n                // 调用后端接口，同步后台数据库\r\n                axios.get(`/association/deletePermissionById/${item.key}`)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 改变菜单项的状态。是否在左侧菜单栏展示\r\n    changeMenuState = (item) => {\r\n        console.log(\"==15 item\", item);\r\n        if (item.type === \"MENU_ELEMENT\") {\r\n            item.type = \"MENU_ELEMENT_CLOSE\"\r\n        } else if (item.type === \"MENU_ELEMENT_CLOSE\") {\r\n            item.type = \"MENU_ELEMENT\"\r\n        }\r\n        this.setState([...this.state.dataSource])\r\n\r\n        // 同步后端\r\n        axios({\r\n            url: \"/association/updatePermissionById\",\r\n            method: 'post',\r\n            data: {\r\n                permissionId: item.key,\r\n                type: item.type\r\n            },\r\n            headers: { 'Content-Type': 'application/json;charset=UTF-8' }\r\n        }).then(res => {\r\n            console.log(\"==27 res\", res);\r\n        }).catch(err => {\r\n            console.log(\"==26 err\", err);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // 获取菜单信息\r\n        axios.get(\"/association/getPermissionList\").then(res => {\r\n            const { data } = res.data // res.data还只是responseBody\r\n            // 用map\r\n            // data.map((item) => {\r\n            //     return item.children = (item.children.length === 0 ? '' : item.children)\r\n            // })\r\n            // 用foreach\r\n            data.forEach((item) => {\r\n                if (item.children.length === 0) {\r\n                    item.children = \"\"\r\n                } else {\r\n                    item.children.forEach((e) => {\r\n                        if (e.children.length === 0) {\r\n                            e.children = \"\"\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            // console.log(\"==1 \", data);\r\n            this.setState({ dataSource: data })\r\n            // console.log(\"==2 \", this.state.dataSource);\r\n        }).catch(err => {\r\n            console.log(\"获取菜单（权限）列表出错！\", err);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table\r\n                    dataSource={this.state.dataSource}\r\n                    columns={this.state.columns}\r\n                    pagination={{\r\n                        pageSize: 5\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\RoleList\\index.js",["118","119","120"],"import React, { Component } from 'react'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Tree\r\n} from 'antd'\r\nimport {\r\n    UnorderedListOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\nconst { confirm } = Modal\r\n\r\nexport default class RoleList extends Component {\r\n\r\n    state = {\r\n        roleList: [],// 角色列表\r\n        permissionList: [],// 树形权限列表\r\n        currentRolePermissionKeys: [],// 当前角色的权限\r\n        currentRoleId: 0,// 当前角色的roleId\r\n        // 角色列表表头 及 各列组件效果\r\n        columns: [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'roleId',\r\n                render: (roleId) => {\r\n                    return <b>{roleId}</b>\r\n                }\r\n            },\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'roleName',\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (item) => {\r\n                    return <div>\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<UnorderedListOutlined />}\r\n                            onClick={() => {\r\n                                this.setState({ isModalVisible: true })\r\n                                this.setState({ currentRolePermissionKeys: this.mapPermissions2Keys(item.permissions) })\r\n                                this.setState({ currentRoleId: item.roleId })\r\n                            }}\r\n                        >\r\n                        </Button>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<DeleteOutlined />}\r\n                            danger\r\n                            onClick={() => this.confirmDelete(item)}\r\n                        >\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            },\r\n        ],\r\n        isModalVisible: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 获取角色列表 并 同步到state中\r\n        this.getRoleList()\r\n        // 获取权限列表 并 同步到state中\r\n        this.getPermissionList()\r\n    }\r\n\r\n\r\n    // 获取角色列表\r\n    getRoleList = () => {\r\n        axios.get(\"/association/getRoleList\").then(res => {\r\n            const roleData = res.data.data\r\n            // console.log(\"==31 roleData\", roleData);\r\n            this.setState({ roleList: roleData })\r\n        }).catch(err => {\r\n            console.log(\"获取角色列表出错！\", err);\r\n        })\r\n    }\r\n\r\n    // 获取树形权限列表\r\n    getPermissionList = () => {\r\n        axios.get(\"/association/getPermissionList\").then(res => {\r\n            const permissionData = res.data.data\r\n            this.setState({ permissionList: permissionData })\r\n        }).catch(err => {\r\n            console.log(\"获取权限列表出错！\", err);\r\n        })\r\n    }\r\n\r\n    // TODO 删除后给个loading提示\r\n    confirmDelete = (item) => {\r\n        const { roleList } = this.state\r\n        const thisPoint = this\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined />,\r\n            onOk() {\r\n                // 同步页面\r\n                // console.log(\"==1 dataSource\", roleList);\r\n                const newList = roleList.filter(data => data.roleId !== item.roleId)\r\n                thisPoint.setState({ roleList: newList })\r\n                // 调用后端接口，同步后台数据库\r\n                // axios.get(`/association/deleteRoleById/${item.roleId}`)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 模态框 点击ok 重新为角色分配权限\r\n    handleOk = () => {\r\n        // 隐藏模态框\r\n        this.setState({ isModalVisible: false })\r\n\r\n        // 为同步后端做准备\r\n        let roleId\r\n        let permissionIds = []\r\n\r\n        // 同步前端dataSource\r\n        // console.log(\"==71 当前roleId\", this.state.currentRoleId);\r\n        // console.log(\"==71 完整的permissionList\", this.state.permissionList);\r\n        const secondPermissions = this.getSecondPermissions()\r\n        // console.log(\"==73 secondPermissions\", secondPermissions);\r\n        const dataSource = this.state.roleList\r\n        // console.log(\"==75 原先的roleList\", dataSource);\r\n        const newDataSource = dataSource.map((item) => {\r\n            // 拿到当前role（即需要修改的role）\r\n            if (item.roleId === this.state.currentRoleId) {\r\n                const currentPermissions = []\r\n                secondPermissions.map((secondPms) => {\r\n                    // 如果当前二级权限在 选中的权限 中存在，则加入数组（数组为新的权限列表）\r\n                    if (this.state.currentRolePermissionKeys.find((e) => { return e === secondPms.key })) {\r\n                        // console.log(\"==76 当前权限被选中：\", secondPms);\r\n                        permissionIds.push(secondPms.key) // 同步后端\r\n                        currentPermissions.push(secondPms)\r\n                    }\r\n                })\r\n                const newItem = { ...item, permissions: currentPermissions }\r\n                // console.log(\"==77 newItem\", newItem);\r\n\r\n                roleId = item.roleId // 同步后端\r\n\r\n                return newItem\r\n                // 若不是当前role，则原样返还\r\n            } else {\r\n                return item;\r\n            }\r\n        })\r\n        console.log(\"==75 new roleList\", newDataSource);\r\n        this.setState({ roleList: newDataSource })\r\n        // 同步后端数据库(今天先写到这里--20210829)\r\n        console.log(\"==81 roleId\", roleId);\r\n        console.log(\"==81 permissionIds\", permissionIds);\r\n        axios({\r\n            url: \"/association/reGrantPermissions2Role\",\r\n            method: 'post',\r\n            data: {\r\n                roleId: roleId,\r\n                permissionIds: permissionIds\r\n            },\r\n            headers: { 'Content-Type': 'application/json;charset=UTF-8' }\r\n        }).then(res => {\r\n            // console.log(\"==27 res\", res);\r\n        }).catch(err => {\r\n            // console.log(\"==26 err\", err);\r\n        })\r\n\r\n    }\r\n\r\n    // 模态框 点击cancel || 右上角x号 || 点击模态框以外的界面\r\n    handleCancel = () => {\r\n        this.setState({ isModalVisible: false })\r\n    }\r\n\r\n    mapPermissions2Keys = (permissions) => {\r\n        // console.log(\"==54 checkedKey\", permissions);\r\n        const checkedKeys = [];\r\n        permissions.map((permission) => {\r\n            checkedKeys.push(permission.key)\r\n        })\r\n        // console.log(\"==64 checkedKeys\",checkedKeys);\r\n        return checkedKeys\r\n    }\r\n\r\n    onCheck = (checkedKeys) => {\r\n        // console.log(\"==61 checkedKeys\", checkedKeys);\r\n        // console.log(\"==62 state.当前role的permission\", this.state.currentRolePermissionKeys);\r\n        this.setState({ currentRolePermissionKeys: checkedKeys })\r\n    }\r\n\r\n    getSecondPermissions = () => {\r\n        const secondPermissions = []\r\n\r\n        this.state.permissionList.map((firstPms) => {\r\n            // console.log(\"==74 当前一级菜单项：\",firstPms);\r\n            firstPms.children.map((secondPms) => {\r\n                return secondPermissions.push(secondPms)\r\n            })\r\n        })\r\n        return secondPermissions;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table\r\n                    dataSource={this.state.roleList}\r\n                    columns={this.state.columns}\r\n                    rowKey={(item) => item.roleId}\r\n                >\r\n                </Table>\r\n                <Modal title=\"分配权限\"\r\n                    visible={this.state.isModalVisible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}>\r\n                    <Tree\r\n                        treeData={this.state.permissionList}\r\n                        checkable={true}\r\n                        checkedKeys={this.state.currentRolePermissionKeys}\r\n                        onCheck={this.onCheck}\r\n                    // checkStrictly={true}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\Home\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\NoPermission\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\TopHeader\\index.js",["121","122"],"import React, {useEffect, useState} from 'react'\r\nimport {\r\n    Menu,\r\n    Layout,\r\n    Dropdown,\r\n    Avatar,\r\n    Switch, Space\r\n} from 'antd';\r\nimport {\r\n    MenuFoldOutlined,\r\n    MenuUnfoldOutlined,\r\n    DownOutlined,\r\n    UserOutlined,\r\n    CloseOutlined,\r\n    UserSwitchOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport {withRouter} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport qs from 'querystring'\r\n\r\nconst {Header} = Layout;\r\n\r\nfunction TopHeader(props) {\r\n\r\n    const [collapsed, setCollapsed] = useState(false)\r\n    const [userInfo, setserInfo] = useState()\r\n\r\n    // 通过token换取用户信息\r\n    useEffect(() => {\r\n        const accessToken = localStorage.getItem(\"token\")\r\n\r\n        axios({\r\n            url: \"/user/getUserInfo\",\r\n            method: 'post',\r\n            data: qs.stringify({accessToken: accessToken}),\r\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n        })\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"==51 userInfo\", data);\r\n                setserInfo(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"==TopHeader 获取用户信息出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n\r\n    const menu = ( // 顶部菜单结构\r\n        <Menu>\r\n            <Menu.Item key={1}>\r\n                <a>超级管理员</a>\r\n            </Menu.Item>\r\n            <Menu.Item key={3} danger onClick={() => {\r\n                localStorage.removeItem(\"token\") // 去除浏览器中的token\r\n                localStorage.removeItem(\"userInfo\") // 去除浏览器中的userInfo\r\n                props.history.replace(\"/login\") // 重定向到登录界面\r\n            }}>\r\n                退出系统<CloseOutlined/>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    const changeFoldState = () => {\r\n        setCollapsed(!collapsed)\r\n    }\r\n\r\n\r\n    return (\r\n        <Header className=\"site-layout-background\" style={{background: \"white\", padding: \"0px 12px\"}}>\r\n            {collapsed ?\r\n                <MenuFoldOutlined onClick={changeFoldState}/>\r\n                : <MenuUnfoldOutlined onClick={changeFoldState}/>}\r\n            &nbsp;&nbsp;&nbsp;\r\n            首页\r\n            <div style={{float: \"right\"}}>\r\n                <Space size={\"middle\"}>\r\n                    <UserSwitchOutlined/>\r\n                    <Switch\r\n                        checkedChildren=\"使用者\"\r\n                        unCheckedChildren=\"管理者\"\r\n                        defaultChecked={false}\r\n                        onClick={() => {\r\n                            props.history.replace(\"/user\") // 重定向到用户界面\r\n                        }}\r\n                    />\r\n                    <div>您好 <span style={{color: 'orange'}}>{userInfo?.name}</span></div>\r\n                    <Dropdown overlay={menu}>\r\n                        <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                            <Avatar size={28} icon={<UserOutlined/>}/>&nbsp;&nbsp;&nbsp;\r\n                            <DownOutlined/>\r\n                        </a>\r\n                    </Dropdown>\r\n                </Space>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default withRouter(TopHeader)\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\SideMenu\\index.js",["123","124"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\UserList\\index.jsx",["125"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Switch,\r\n} from 'antd'\r\n\r\nimport {\r\n    UnorderedListOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport axios from 'axios'\r\nimport UserForm from '../../../components/user-manage/UserForm';\r\n\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function UserList() {\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [isAddModalVisible, setIsAddModalVisible] = useState(false)\r\n\r\n    const [associationList, setAssciationList] = useState([])\r\n    const [roleList, setRoleList] = useState([])\r\n\r\n    const addFormRef = useRef(null)\r\n\r\n    // 获取社团列表\r\n    useEffect(() => {\r\n        axios.get(\"/association/getAllAssociationList\")\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"==52 roleList\", data);\r\n                setAssciationList(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"获取社团列表出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n    // 获取角色列表\r\n    useEffect(() => {\r\n        axios.get(\"/association/getRoleList\")\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"==52 roleList\", data);\r\n                setRoleList(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"获取角色列表出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n    // 获取用户列表\r\n    useEffect(() => {\r\n        axios.get(\"/association/getAllUsers\")\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"==51 userList\", data);\r\n                setDataSource(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"获取用户列表出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n    // 表的行列结构\r\n    const columns = [\r\n        {\r\n            title: '学号',\r\n            dataIndex: 'userId',\r\n            render: (userId) => {\r\n                return <b>{userId}</b>\r\n            }\r\n        },\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '角色',\r\n            dataIndex: 'roleList',\r\n            filters: [\r\n                ...roleList.map((role) => {\r\n                    return {\r\n                        text: role.roleName,\r\n                        value: role.roleName,\r\n                    }\r\n                })\r\n            ],\r\n            onFilter:(value,item)=>{\r\n                // console.log(\"onFilter item\",item)\r\n                let exist = false\r\n                item.roleList.map(role=>{\r\n                    // console.log(\"onFilter 中的 role\",role)\r\n                    if(role.roleName === value){\r\n                        exist = true\r\n                    }\r\n                })\r\n                return exist\r\n\r\n            },\r\n            render: (roleList, item) => {\r\n                return roleList.map((role) => {\r\n                    return (\r\n                        <div key={role.roleId}>\r\n                            {\r\n                                role.roleName === \"超级管理员\" ?\r\n                                    `${role.roleName}`\r\n                                    : `${role.roleName} OF ${role.associationName}`\r\n                            }\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        },\r\n        {\r\n            title: '成员状态',\r\n            dataIndex: 'state',\r\n            render: ((state) => {\r\n                return <Switch\r\n                    checked={state === \"OPEN\"}\r\n                >\r\n                </Switch>\r\n            })\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => {\r\n                return <div>\r\n                    <Button\r\n                        shape={\"circle\"}\r\n                        icon={<UnorderedListOutlined/>}\r\n                        disabled={item.canDel === 0}\r\n                    >\r\n                    </Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button\r\n                        shape={\"circle\"}\r\n                        icon={<DeleteOutlined/>}\r\n                        danger\r\n                        disabled={item.canDel === 0}\r\n                        onClick={() => confirmDelete(item)}\r\n                    >\r\n                    </Button>\r\n                </div>\r\n            }\r\n        },\r\n    ]\r\n\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        // console.log(\"delete item\", item)\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                // console.log(\"同步前端页面\")\r\n                const newList = dataSource.filter(data => data.id !== item.id)\r\n                setDataSource(newList)\r\n                // 调用后端接口，同步后台数据库\r\n                console.log(\"同步后台数据。。。\")\r\n                axios.delete(`/association/deleteUserById/${item.userId}`)\r\n                    .then((res) => {\r\n\r\n                    })\r\n                    .catch((err) => {\r\n\r\n                    })\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 弹出模态框\r\n    const showAddModal = () => {\r\n        // console.log(\"==1 弹出模态框\");\r\n        setIsAddModalVisible(true)\r\n    }\r\n\r\n\r\n    // 模态框 确认 添加成员\r\n    const handelUserAddModalOk = () => {\r\n        // console.log(\"====3 确定\");\r\n        addFormRef.current.validateFields().then(value => {\r\n            setIsAddModalVisible(false)// 关闭模态框\r\n            // console.log(\"==4 \", value);\r\n\r\n            // 封装表单信息\r\n            const userObj = {\r\n                userId: value.user_id,\r\n                name: value.name,\r\n                roleName: value.roleName,\r\n                associationName: value.associationName\r\n            }\r\n\r\n            // 清空表单信息\r\n            addFormRef.current.resetFields()\r\n\r\n            // 同步后端数据库\r\n            axios.post(`/association/addUser`, userObj).then((res) => {\r\n                // console.log(\"==10 addUser res\", res)\r\n                if (res.data.data) { //如果失败了，data是null（失败原因可能是：学号已经存在，数据库插入失败）\r\n                    // 同步前端  根据当前user_id获取user信息\r\n                    axios.get(`/association/getUserById/${userObj.userId}`).then(res => {\r\n                        // console.log(\"==11 getUserById res\", res)\r\n                        // console.log(\"==11 getUserById res.data.data\", res.data.data)\r\n                        setDataSource([...dataSource, res.data.data])\r\n                    }).catch(err => { // catch 获取用户信息失败\r\n                        console.log(\"==err3 getUserById err\", err)\r\n                    })\r\n                }\r\n            }).catch((err) => { // catch 同步后端数据失败\r\n                console.log(\"==err1 addUser err\", err)\r\n            })\r\n        }).catch(err => { // catch 表单验证失败\r\n            // setIsAddModalVisible(false)\r\n            console.log(\"==err2 \", err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{float: \"right\"}}>\r\n                <Button type=\"primary\" // shape=\"circle\"\r\n                    onClick={showAddModal}\r\n                >\r\n                    新增成员\r\n                </Button>\r\n            </div>\r\n            <Table\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 4\r\n                }}\r\n                rowKey={item => item.id}\r\n            />\r\n            <Modal\r\n                visible={isAddModalVisible}\r\n                title=\"创建新成员\"\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onCancel={() => {\r\n                    setIsAddModalVisible(false)\r\n                    console.log(\"==3 取消\");\r\n                }}\r\n                onOk={handelUserAddModalOk}\r\n            >\r\n                <UserForm\r\n                    associationList={associationList}\r\n                    roleList={roleList}\r\n                    ref={addFormRef}\r\n                ></UserForm>\r\n            </Modal>\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\user-manage\\UserForm.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\SysRouter\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\views\\SandBox\\AddRecruitment\\index.js",["126","127","128","129"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationEditor\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\User\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserHeader\\index.jsx",["130"],"import React, { Component } from 'react'\r\n\r\nimport { Menu, Layout } from 'antd';\r\nimport {\r\n    DashboardTwoTone,\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Header } = Layout;\r\n\r\n//空菜单\r\nconst nullArray = new Array(5).fill(null);\r\n//“广场”菜单\r\nconst partMenuArray = [\r\n    { id: 1, value: '纳新广场' },\r\n    { id: 2, value: '活动广场' },\r\n    { id: 3, value: '赛事广场' }\r\n];\r\n//用户菜单\r\nconst userMenuArray = [\r\n    { id: 1, value: '首页' },\r\n    { id: 2, value: '个人中心' }\r\n];\r\n\r\n\r\n\r\nexport default class UserHeader extends Component {\r\n\r\n    //状态\r\n    state = {\r\n        //是否是用户菜单\r\n        isUserMenu: this.props.isUserMenu,\r\n        //展示的菜单Array\r\n        menuArray: nullArray\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        //判断是否为用户菜单，展示props传递过来的相对应的菜单\r\n        this.state.isUserMenu ? this.setState({ menuArray: userMenuArray }) : this.setState({ menuArray: partMenuArray });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header>\r\n                {/* <DashboardTwoTone /> */}\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['0']}>\r\n                    {this.state.menuArray.map((item, id) => {\r\n                        return <Menu.Item key={id}>{item.value}</Menu.Item>;\r\n                    })}\r\n                </Menu>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationCard\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserInfo\\index.jsx",["131","132","133","134","135","136"],"import React, {Component, useState} from 'react'\r\nimport {\r\n    Descriptions,\r\n    Badge,\r\n    Cascader,\r\n    DatePicker,\r\n    Input, Form, Select, Switch, Radio\r\n} from 'antd';\r\n\r\nconst {TextArea} = Input;\r\n\r\n//模拟数据\r\nconst options = [\r\n    {\r\n        value: '工商管理学院',\r\n        label: '工商管理学院',\r\n        children: [\r\n            {\r\n                value: '电子商务',\r\n                label: '电子商务',\r\n                children: [\r\n                    {\r\n                        value: '商务1811',\r\n                        label: '商务1811',\r\n                    },\r\n                    {\r\n                        value: '商务1812',\r\n                        label: '商务1812',\r\n                    }\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        value: '计算机学院',\r\n        label: '计算机学院',\r\n        children: [\r\n            {\r\n                value: '软件工程',\r\n                label: '软件工程',\r\n                children: [\r\n                    {\r\n                        value: '软工1812',\r\n                        label: '软工1812',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n// const [formSize, setFormSize] = useState('default');\r\n//\r\n// const onFormLayoutChange = ({size}) => {\r\n//     setFormSize(size);\r\n// };\r\n\r\nexport default function UserInfo() {\r\n\r\n    const onChange = (value) => {\r\n        console.log(value);\r\n    }\r\n\r\n    const handleDateChange = (value) => {\r\n        console.log(value);\r\n    }\r\n    return (\r\n        <div>\r\n            <Descriptions title=\"\" bordered={true} column={2}>\r\n                <Descriptions.Item label=\"姓名\">\r\n                    <Input placeholder=\"请填写兴趣姓名\"/>\r\n                    {/* <TextArea rows={1} /> */}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"性别\">\r\n                    <Input placeholder=\"请填写兴趣性别\"/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"联系方式\">\r\n                    <Input placeholder=\"请填写兴趣联系方式\"/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"兴趣爱好\" span={2}>\r\n                    <Input placeholder=\"请填写兴趣爱好\"/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"学院/专业/班级\">\r\n                    <Cascader\r\n                        defaultValue={['学院', '专业', '班级']}\r\n                        options={options}\r\n                        onChange={onChange}/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"生日\">\r\n                    <DatePicker onChange={handleDateChange} bordered={false} placeholder=\"请选择生日\"/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"自我评价\" span={2}>\r\n                    <TextArea rows={4}/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"加入社团的期望\" span={2}>\r\n                    <TextArea rows={4}/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"面试结果评价\">\r\n                    <Input placeholder=\"请填写兴趣爱好\"/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"纳新审核结果\">\r\n                    <Badge status=\"processing\" text=\"审核中\"/>\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\n// 可以参考一下 用户信息的展示\r\n// <Form\r\n// labelCol={{span: 4,}}\r\n// wrapperCol={{span: 14,}}\r\n// onFinish={onFinish}\r\n// size={formSize}\r\n// onValuesChange={onFormLayoutChange}\r\n// >\r\n// <Form.Item label=\"表单尺寸调整\" name=\"size\">\r\n// <Radio.Group>\r\n// <Radio.Button value=\"small\">小</Radio.Button>\r\n// <Radio.Button value=\"default\">默认</Radio.Button>\r\n// <Radio.Button value=\"large\">大</Radio.Button>\r\n// </Radio.Group>\r\n// </Form.Item>\r\n// <Form.Item label=\"手机\" name=\"phone\">\r\n// <Input/>\r\n// </Form.Item>\r\n// <Form.Item label=\"性别\" name=\"gender\">\r\n//         <Select>\r\n//         <Select.Option value=\"M\">男生</Select.Option>\r\n// <Select.Option value=\"F\">女生</Select.Option>\r\n// <Select.Option value=\"U\">保密</Select.Option>\r\n// </Select>\r\n// </Form.Item>\r\n// <Form.Item label=\"专业班级\" name=\"className\">\r\n// <Cascader\r\n// options={[\r\n// {\r\n// value: 'gongshang',\r\n// label: '工商管理学院',\r\n// children: [\r\n// {\r\n// value: 'dianzishangwu',\r\n// label: '电子商务',\r\n// children: [\r\n// {\r\n// value: 'sw1811',\r\n// label: '商务1811',\r\n// },\r\n// ],\r\n// },\r\n// ],\r\n// },\r\n// ]}\r\n// />\r\n// </Form.Item>\r\n// <Form.Item label=\"生日\" name=\"birthday\">\r\n// <DatePicker/>\r\n// </Form.Item>\r\n// <Form.Item label=\"隐藏个人信息\" valuePropName=\"checked\" name=\"isHidden\">\r\n// <Switch/>\r\n// </Form.Item>\r\n// TODO Slider 拖动展示个人能力（沟通能力、表达能力、合作能力、抗压能力。。。）\r\n\r\n\r\n\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserManage\\index.jsx",["137","138","139"],"import React, { Component } from 'react'\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport UserInfo from '../UserInfo'\r\nimport UseHeader from '../UserHeader'\r\n\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <UseHeader isUserMenu={true} />\r\n                    <Layout>\r\n                        {/* 侧边栏 */}\r\n                        <Sider width={200} theme=\"light\">\r\n                            {/* 用户头像 */}\r\n                            <Avatar\r\n                                size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100, }}\r\n                                src='E:/image/uacs/user_headicon.jpg'\r\n                                icon={<UserOutlined />}\r\n                                alt='快来上传头像吧！'\r\n                                size='large'\r\n                                draggable={true}\r\n                                style={{marginLeft:'55px',marginTop:'30px',width:'100px',height:'100px'}}\r\n                            />\r\n                        </Sider>\r\n                        <Layout style={{ padding: '0 24px 24px' }}>\r\n                            {/* 面包屑 */}\r\n                            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                                <Breadcrumb.Item>个人中心</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>个人简历</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            {/* 用户信息 */}\r\n                            <UserInfo />\r\n                        </Layout>\r\n                    </Layout>\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":17},{"ruleId":"144","severity":1,"message":"148","line":10,"column":18,"nodeType":"146","messageId":"147","endLine":10,"endColumn":28},{"ruleId":"144","severity":1,"message":"149","line":1,"column":16,"nodeType":"146","messageId":"147","endLine":1,"endColumn":24},{"ruleId":"144","severity":1,"message":"150","line":3,"column":5,"nodeType":"146","messageId":"147","endLine":3,"endColumn":9},{"ruleId":"144","severity":1,"message":"151","line":7,"column":5,"nodeType":"146","messageId":"147","endLine":7,"endColumn":10},{"ruleId":"144","severity":1,"message":"152","line":8,"column":5,"nodeType":"146","messageId":"147","endLine":8,"endColumn":11},{"ruleId":"144","severity":1,"message":"153","line":9,"column":5,"nodeType":"146","messageId":"147","endLine":9,"endColumn":15},{"ruleId":"144","severity":1,"message":"154","line":10,"column":5,"nodeType":"146","messageId":"147","endLine":10,"endColumn":16},{"ruleId":"144","severity":1,"message":"155","line":11,"column":5,"nodeType":"146","messageId":"147","endLine":11,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":12,"endColumn":11},{"ruleId":"144","severity":1,"message":"157","line":14,"column":5,"nodeType":"146","messageId":"147","endLine":14,"endColumn":13},{"ruleId":"144","severity":1,"message":"158","line":30,"column":8,"nodeType":"146","messageId":"147","endLine":30,"endColumn":14},{"ruleId":"144","severity":1,"message":"159","line":30,"column":16,"nodeType":"146","messageId":"147","endLine":30,"endColumn":23},{"ruleId":"144","severity":1,"message":"160","line":30,"column":25,"nodeType":"146","messageId":"147","endLine":30,"endColumn":31},{"ruleId":"161","severity":1,"message":"162","line":100,"column":54,"nodeType":"163","messageId":"164","endLine":100,"endColumn":56},{"ruleId":"161","severity":1,"message":"162","line":136,"column":51,"nodeType":"163","messageId":"164","endLine":136,"endColumn":53},{"ruleId":"161","severity":1,"message":"162","line":184,"column":38,"nodeType":"163","messageId":"164","endLine":184,"endColumn":40},{"ruleId":"161","severity":1,"message":"162","line":200,"column":50,"nodeType":"163","messageId":"164","endLine":200,"endColumn":52},{"ruleId":"165","severity":1,"message":"166","line":53,"column":17,"nodeType":"167","endLine":53,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":91,"column":25,"nodeType":"167","endLine":91,"endColumn":92},{"ruleId":"144","severity":1,"message":"168","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":111,"column":45,"nodeType":"171","messageId":"172","endLine":111,"endColumn":46,"suggestions":"173"},{"ruleId":"161","severity":1,"message":"162","line":97,"column":39,"nodeType":"163","messageId":"164","endLine":97,"endColumn":41},{"ruleId":"144","severity":1,"message":"174","line":3,"column":45,"nodeType":"146","messageId":"147","endLine":3,"endColumn":53},{"ruleId":"144","severity":1,"message":"175","line":44,"column":12,"nodeType":"146","messageId":"147","endLine":44,"endColumn":26},{"ruleId":"144","severity":1,"message":"176","line":44,"column":28,"nodeType":"146","messageId":"147","endLine":44,"endColumn":45},{"ruleId":"177","severity":1,"message":"178","line":69,"column":8,"nodeType":"179","endLine":69,"endColumn":10,"suggestions":"180"},{"ruleId":"144","severity":1,"message":"181","line":5,"column":5,"nodeType":"146","messageId":"147","endLine":5,"endColumn":21},{"ruleId":"144","severity":1,"message":"182","line":1,"column":16,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"149","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":35},{"ruleId":"144","severity":1,"message":"183","line":7,"column":12,"nodeType":"146","messageId":"147","endLine":7,"endColumn":16},{"ruleId":"144","severity":1,"message":"152","line":7,"column":18,"nodeType":"146","messageId":"147","endLine":7,"endColumn":24},{"ruleId":"144","severity":1,"message":"156","line":7,"column":26,"nodeType":"146","messageId":"147","endLine":7,"endColumn":32},{"ruleId":"144","severity":1,"message":"151","line":7,"column":34,"nodeType":"146","messageId":"147","endLine":7,"endColumn":39},{"ruleId":"144","severity":1,"message":"159","line":9,"column":9,"nodeType":"146","messageId":"147","endLine":9,"endColumn":16},{"ruleId":"144","severity":1,"message":"160","line":9,"column":18,"nodeType":"146","messageId":"147","endLine":9,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":26,"column":33,"nodeType":"186","endLine":26,"endColumn":45},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'useState' is defined but never used.","'Menu' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","'DatePicker' is defined but never used.","'InputNumber' is defined but never used.","'TreeSelect' is defined but never used.","'Switch' is defined but never used.","'Cascader' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["189","190"],"'Checkbox' is defined but never used.","'newAssociation' is assigned a value but never used.","'setNewAssociation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo.userId'. Either include it or remove the dependency array.","ArrayExpression",["191"],"'DashboardTwoTone' is defined but never used.","'Component' is defined but never used.","'Form' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"messageId":"192","fix":"193","desc":"194"},{"messageId":"195","fix":"196","desc":"197"},{"desc":"198","fix":"199"},"removeEscape",{"range":"200","text":"201"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"202","text":"203"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [userInfo.userId]",{"range":"204","text":"205"},[3318,3319],"",[3318,3318],"\\",[2053,2055],"[userInfo.userId]"]