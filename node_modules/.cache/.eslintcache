[{"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\index.js":"1","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\App.js":"2","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\router\\IndexRouter.js":"3","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\TopHeader\\index.js":"4","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\SideMenu\\index.js":"5","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\user-manage\\UserForm.js":"6","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationEditor\\index.jsx":"7","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserHeader\\index.jsx":"8","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationCard\\index.jsx":"9","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserManage\\index.jsx":"10","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\BaseInfo.js":"11","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\baseInfo.js":"12","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\state.js":"13","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\index.js":"14","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\EditableCell.js":"15","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\hooks\\usePublish.js":"16","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\type.js":"17","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\db.js":"18","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\store.js":"19","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\CollapseReducer.js":"20","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\LoadingReducer.js":"21","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\redux.js":"22","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\util\\http.js":"23","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserSettings\\index.jsx":"24","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\UserBox\\index.jsx":"25","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AppRouter\\index.js":"26","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationSquare\\index.js":"27","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\index.js":"28","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Home\\index.js":"29","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Login\\index.js":"30","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\NoPermission\\index.js":"31","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\shareService.js":"32","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\userService.js":"33","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\index.js":"34","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\ShareDetail\\index.js":"35","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\SysRouter\\index.jsx":"36","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\index.js":"37","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\AddShare\\index.js":"38","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\PermissionList\\index.js":"39","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\ClassList\\index.js":"40","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\AddRecruitment\\index.js":"41","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\RoleList\\index.js":"42","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\UserTagList\\index.js":"43","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\Share\\index.js":"44","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\BigEvent\\index.js":"45","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\DataView\\index.js":"46","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\AddAssociation\\index.js":"47","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\JoinApplication\\index.js":"48","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\index.js":"49","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\RecruitmentDetail\\index.js":"50","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\applicationService.js":"51","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationDetail\\index.js":"52","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationList\\index.js":"53","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AccountManage\\Resume\\index.jsx":"54","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\PickTag\\index.js":"55","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ApplicationManage\\index.js":"56","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\icon.js":"57","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\Calendar\\index.js":"58","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\index.js":"59","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\treeService.js":"60","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\InterviewAddress\\index.js":"61","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\Contacter\\index.js":"62","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\departmentService.js":"63","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\UserList\\index.js":"64","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\ViewInterview\\index.js":"65","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\index.js":"66","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\imageService.js":"67","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\image.js":"68","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\index.jsx":"69","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\BatchImport\\index.js":"70","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\AddUser\\index.js":"71","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\BatchAddAssociation\\index.js":"72","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\BatchAddAssociation\\BatchImport\\index.js":"73","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\dataViewService.js":"74","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\recruitmentSerivce.js":"75","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\MemberResume\\index.js":"76"},{"size":151,"mtime":1629535454211,"results":"77","hashOfConfig":"78"},{"size":449,"mtime":1635161395737,"results":"79","hashOfConfig":"78"},{"size":1116,"mtime":1636186196730,"results":"80","hashOfConfig":"78"},{"size":1536,"mtime":1636248028854,"results":"81","hashOfConfig":"78"},{"size":5993,"mtime":1637678240123,"results":"82","hashOfConfig":"78"},{"size":2790,"mtime":1632015282488,"results":"83","hashOfConfig":"78"},{"size":1187,"mtime":1633177185586,"results":"84","hashOfConfig":"78"},{"size":2176,"mtime":1637401740788,"results":"85","hashOfConfig":"78"},{"size":1505,"mtime":1637292647624,"results":"86","hashOfConfig":"78"},{"size":1866,"mtime":1629077512900,"results":"87","hashOfConfig":"78"},{"size":2183,"mtime":1633570464347,"results":"88","hashOfConfig":"78"},{"size":9578,"mtime":1636858423341,"results":"89","hashOfConfig":"78"},{"size":5124,"mtime":1637677307241,"results":"90","hashOfConfig":"78"},{"size":4857,"mtime":1633836370146,"results":"91","hashOfConfig":"78"},{"size":5786,"mtime":1633861487172,"results":"92","hashOfConfig":"78"},{"size":2763,"mtime":1637677521591,"results":"93","hashOfConfig":"78"},{"size":1948,"mtime":1637326393884,"results":"94","hashOfConfig":"78"},{"size":3043,"mtime":1637591823678,"results":"95","hashOfConfig":"78"},{"size":839,"mtime":1635161599626,"results":"96","hashOfConfig":"78"},{"size":566,"mtime":1635549464935,"results":"97","hashOfConfig":"78"},{"size":487,"mtime":1635549464959,"results":"98","hashOfConfig":"78"},{"size":185,"mtime":1635087218971,"results":"99","hashOfConfig":"78"},{"size":895,"mtime":1636884256978,"results":"100","hashOfConfig":"78"},{"size":10894,"mtime":1637322319344,"results":"101","hashOfConfig":"78"},{"size":670,"mtime":1635597893881,"results":"102","hashOfConfig":"78"},{"size":833,"mtime":1635650279909,"results":"103","hashOfConfig":"78"},{"size":6716,"mtime":1637757184759,"results":"104","hashOfConfig":"78"},{"size":11981,"mtime":1637757366318,"results":"105","hashOfConfig":"78"},{"size":2054,"mtime":1637755685244,"results":"106","hashOfConfig":"78"},{"size":7792,"mtime":1637677808145,"results":"107","hashOfConfig":"78"},{"size":136,"mtime":1633826663776,"results":"108","hashOfConfig":"78"},{"size":374,"mtime":1637939431450,"results":"109","hashOfConfig":"78"},{"size":1622,"mtime":1637314103158,"results":"110","hashOfConfig":"78"},{"size":981,"mtime":1636248084432,"results":"111","hashOfConfig":"78"},{"size":3038,"mtime":1637945227767,"results":"112","hashOfConfig":"78"},{"size":5960,"mtime":1637944532238,"results":"113","hashOfConfig":"78"},{"size":3779,"mtime":1637939651467,"results":"114","hashOfConfig":"78"},{"size":7668,"mtime":1637944714105,"results":"115","hashOfConfig":"78"},{"size":6176,"mtime":1635650465873,"results":"116","hashOfConfig":"78"},{"size":10911,"mtime":1636937942131,"results":"117","hashOfConfig":"78"},{"size":11295,"mtime":1636185991287,"results":"118","hashOfConfig":"78"},{"size":8342,"mtime":1637677215121,"results":"119","hashOfConfig":"78"},{"size":2026,"mtime":1635080968786,"results":"120","hashOfConfig":"78"},{"size":3340,"mtime":1637590887878,"results":"121","hashOfConfig":"78"},{"size":5802,"mtime":1635681153188,"results":"122","hashOfConfig":"78"},{"size":7040,"mtime":1637486125772,"results":"123","hashOfConfig":"78"},{"size":123,"mtime":1635753943587,"results":"124","hashOfConfig":"78"},{"size":4218,"mtime":1635754501860,"results":"125","hashOfConfig":"78"},{"size":6464,"mtime":1637942437558,"results":"126","hashOfConfig":"78"},{"size":3107,"mtime":1637942248752,"results":"127","hashOfConfig":"78"},{"size":1482,"mtime":1637753392309,"results":"128","hashOfConfig":"78"},{"size":10872,"mtime":1637944039741,"results":"129","hashOfConfig":"78"},{"size":12479,"mtime":1637332165333,"results":"130","hashOfConfig":"78"},{"size":17075,"mtime":1637331865378,"results":"131","hashOfConfig":"78"},{"size":3224,"mtime":1636274538145,"results":"132","hashOfConfig":"78"},{"size":7658,"mtime":1637056375471,"results":"133","hashOfConfig":"78"},{"size":5947,"mtime":1637751792249,"results":"134","hashOfConfig":"78"},{"size":2065,"mtime":1636293803496,"results":"135","hashOfConfig":"78"},{"size":12808,"mtime":1637754970098,"results":"136","hashOfConfig":"78"},{"size":495,"mtime":1636895287812,"results":"137","hashOfConfig":"78"},{"size":1971,"mtime":1636860505145,"results":"138","hashOfConfig":"78"},{"size":908,"mtime":1636940466166,"results":"139","hashOfConfig":"78"},{"size":159,"mtime":1636948164523,"results":"140","hashOfConfig":"78"},{"size":3025,"mtime":1637944429759,"results":"141","hashOfConfig":"78"},{"size":2101,"mtime":1637051306341,"results":"142","hashOfConfig":"78"},{"size":7813,"mtime":1637755317747,"results":"143","hashOfConfig":"78"},{"size":280,"mtime":1637155685989,"results":"144","hashOfConfig":"78"},{"size":569,"mtime":1637590745014,"results":"145","hashOfConfig":"78"},{"size":5265,"mtime":1637416235318,"results":"146","hashOfConfig":"78"},{"size":1139,"mtime":1637413285134,"results":"147","hashOfConfig":"78"},{"size":4254,"mtime":1637412969953,"results":"148","hashOfConfig":"78"},{"size":4235,"mtime":1637229147899,"results":"149","hashOfConfig":"78"},{"size":1988,"mtime":1637221747054,"results":"150","hashOfConfig":"78"},{"size":322,"mtime":1637482815599,"results":"151","hashOfConfig":"78"},{"size":283,"mtime":1637643659642,"results":"152","hashOfConfig":"78"},{"size":2851,"mtime":1637944180344,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"kh8qtk",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"156"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"156"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"156"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"156"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"156"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"156"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"156"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"156"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"156"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"156"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"156"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"156"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"156"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"156"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"156"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"156"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"156"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"156"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"156"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"156"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"156"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"156"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"156"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"156"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"156"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"156"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"156"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"156"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"156"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"156"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\index.js",[],["343","344"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\App.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\router\\IndexRouter.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\TopHeader\\index.js",["345","346","347","348","349"],"import React, {useEffect} from 'react'\r\nimport {Layout, message} from 'antd';\r\nimport {MenuFoldOutlined, MenuUnfoldOutlined} from '@ant-design/icons'\r\n\r\nimport {useHistory, withRouter} from 'react-router-dom'\r\nimport {connect} from \"react-redux\";\r\nimport {REDUXSTATE} from \"../../constants/redux\";\r\nimport UserSettings from '../UserSettings/index'\r\nimport {getUserInfo} from \"../../services/userService\";\r\n\r\nconst {Header} = Layout;\r\n\r\n\r\nfunction TopHeader(props) {\r\n\r\n    const history = useHistory()\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n\r\n    // TODO 为什么改变折叠状态，也会发请求？？？？？？\r\n    const changeFoldState = () => {\r\n        props.changeCollapsed()\r\n    }\r\n\r\n    return (\r\n        <Header style={{background: \"white\", padding: \"0px 12px\"}}>\r\n            {/* ========== 折叠栏 ==========*/}\r\n            {props.isCollapsed ?\r\n                <MenuUnfoldOutlined onClick={changeFoldState}/>\r\n                : <MenuFoldOutlined onClick={changeFoldState}/>}\r\n            <UserSettings history={history}/>\r\n        </Header>\r\n    )\r\n}\r\n\r\n\r\n{/*   =============================   redux   =============================   */\r\n}\r\nconst mapState2Props = ({CollapseReducer: {isCollapsed}}) => {\r\n    return {\r\n        isCollapsed\r\n    }\r\n}\r\n\r\nconst mapDispatch2Props = {\r\n    changeCollapsed() {\r\n        return {\r\n            type: REDUXSTATE.CHANGE_COLLAPSED.type,\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapState2Props, mapDispatch2Props)(withRouter(TopHeader))\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\SideMenu\\index.js",["350"],"import React, {Component} from 'react'\r\nimport {Layout, Menu} from 'antd';\r\nimport {ReactComponent as OrangeIcon} from '../../icons/orange.svg';\r\n\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport './index.less'\r\nimport {connect} from \"react-redux\";\r\nimport {getPermissionListByUserId} from \"../../services/db\";\r\nimport {SIDE_MENU_ICON_LIST} from \"../../constants/icon\";\r\nimport {getUserInfoByToken} from \"../../services/userService\";\r\n\r\nconst {SubMenu} = Menu;\r\nconst {Sider} = Layout;\r\n\r\n\r\nclass SideMenu extends Component {\r\n\r\n    state = {\r\n        // 菜单列表\r\n        menuList: [],\r\n        // 选中菜单项的key，可以同时选中多个，因此是数组\r\n        selectKeys: [],\r\n        // 打开菜单项的key\r\n        openKeys: [],\r\n        // 用户信息\r\n        userInfo: {},\r\n    }\r\n\r\n    // 获取菜单信息\r\n    // 展开默认项。刷新后仍然有效\r\n    componentWillMount() {\r\n        // 通过token换取用户信息\r\n        this.getMenuListByToken()\r\n\r\n        // this.getMenuList(userId)\r\n\r\n        this.showSelected()\r\n    }\r\n\r\n    // 通过token换取用户信息 并 用userId获取权限列表\r\n    getMenuListByToken = () => {\r\n        const accessToken = localStorage.getItem(\"token\")\r\n        getUserInfoByToken(accessToken).then(res => {\r\n            const userInfo = res.data.data\r\n            // console.log(\"==1 用户信息 \", userInfo)\r\n            this.setState({userInfo: userInfo})\r\n            // 根据userId获取菜单列表\r\n            if (userInfo) {\r\n                this.getMenuList(userInfo.userId)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取菜单数据\r\n    getMenuList = (userId) => {\r\n        getPermissionListByUserId(userId).then(res => {\r\n            const {data} = res.data\r\n            // console.log('获取菜单数据')\r\n            // console.log(data)\r\n            this.setState({menuList: data})\r\n        })\r\n    }\r\n\r\n    // 展开选中项并高亮。刷新后仍然有效\r\n    showSelected = () => {\r\n        // ( 刷新后 )选择默认展开项、高亮项\r\n        // props.location.pathname 取出当前页面的路径\r\n        const path = this.props.location.pathname\r\n        // console.log(\"==3\", path);\r\n        const openIndex = path.lastIndexOf(\"\\/\")\r\n        const openKeys = [path.substring(0, openIndex)]\r\n        const selectKeys = Array(this.props.location.pathname)\r\n\r\n        this.setState({openKeys})\r\n        this.setState({selectKeys})\r\n    }\r\n\r\n    checkPageElement = (item) => {\r\n        return \"MENU_ELEMENT\" === item.type ? true : false\r\n    }\r\n\r\n    // 渲染侧边栏菜单\r\n    renderMenu = (menuList) => {\r\n        // console.log('待渲染的侧边菜单：', menuList)\r\n        return menuList.map((item) => {\r\n            // 当前item为父菜单，并且有下级菜单\r\n            if (item.children.length > 0 && this.checkPageElement(item)) {\r\n                return <SubMenu key={item.routePath} title={item.title} icon={SIDE_MENU_ICON_LIST[item.routePath]}\r\n                                style={{\r\n                                    backgroundColor: `rgba(208, 205, 0, 0.3)`,\r\n                                }}>\r\n                    {this.renderMenu(item.children)}{/* 递归 */}\r\n                </SubMenu>\r\n            }\r\n            // 当前item为叶子菜单\r\n            return this.checkPageElement(item) && item.grade === 2 &&\r\n                <Menu.Item key={item.routePath}\r\n                           onClick={() => {\r\n                               this.props.history.push(item.routePath)\r\n                           }}\r\n                >{SIDE_MENU_ICON_LIST[item.routePath]}&nbsp;&nbsp;{item.title}\r\n                </Menu.Item>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Sider width={200}\r\n                   style={{backgroundColor: \"orange\"}}\r\n                   collapsed={this.props.isCollapsed} // 侧边菜单是否折叠\r\n            >\r\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\r\n                    {/* ============ 系统图标 ========== */}\r\n                    <div className='logo'>\r\n                        <OrangeIcon style={{\r\n                            width: 26,\r\n                            height: 22,\r\n                            marginBottom: -3,\r\n                        }}/>\r\n                        {!this.props.isCollapsed && <>橘集<br/>高校社团管理系统</>}\r\n                    </div>\r\n\r\n                    {/* ============ 系统菜单 ========== */}\r\n                    <div style={{\r\n                        height: \"100%\",\r\n                        overflowY: 'scroll',\r\n                    }}>\r\n                        <Menu theme=\"light\" mode=\"inline\"\r\n                              defaultSelectedKeys={this.state.selectKeys}\r\n                              defaultOpenKeys={this.state.openKeys}\r\n                              style={{\r\n                                  height: '100%',\r\n                                  borderRight: 0,\r\n                              }}\r\n                        >\r\n\r\n                            <Menu.Item key={'systemHome'}\r\n                                       style={{\r\n                                           backgroundColor: `rgba(208, 205, 0, 0.3)`,\r\n                                       }}\r\n                                       onClick={() => {\r\n                                           this.props.history.push('/#/manage/home')\r\n                                       }}\r\n                            >{SIDE_MENU_ICON_LIST['/manage/home']}&nbsp;&nbsp;HOME\r\n                            </Menu.Item>\r\n                            {this.renderMenu(this.state.menuList)}\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n            </Sider>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState2Props = ({CollapseReducer: {isCollapsed}}) => {\r\n    return {\r\n        isCollapsed\r\n    }\r\n}\r\n\r\nexport default connect(mapState2Props)(withRouter(SideMenu))","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\user-manage\\UserForm.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationEditor\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserHeader\\index.jsx",["351","352"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {Menu} from 'antd';\r\nimport UserSettings from \"../UserSettings\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ReactComponent as OrangeIcon} from \"../../icons/orange.svg\";\r\n\r\n//空菜单\r\nconst nullArray = new Array(5).fill(null);\r\n\r\n//“广场”菜单\r\nconst partMenuArray = [\r\n    {id: 1, value: '纳新广场'},\r\n    // {id: 2, value: '社团风采'},\r\n    // {id: 3, value: '活动广场'}\r\n];\r\n//用户菜单\r\nconst userMenuArray = [\r\n    {id: 1, value: '首页'},\r\n    {id: 2, value: '个人中心'}\r\n];\r\n\r\n\r\nexport default function UserHeader(props) {\r\n\r\n    const history = useHistory()\r\n    const [isUserMenu, setIsUserMenu] = useState(props.isUserMenu)\r\n\r\n    const [menuArray, setMenuArray] = useState(nullArray)\r\n\r\n    useEffect(() => {\r\n        //判断是否为用户菜单，展示props传递过来的相对应的菜单\r\n        isUserMenu ? setMenuArray(userMenuArray) : setMenuArray(partMenuArray);\r\n    })\r\n\r\n    return (\r\n        <div style={{\r\n            display: 'flex'\r\n        }}>\r\n            {/* ================ 头部导航菜单  ================ */}\r\n            <div style={{width: '100%'}}>\r\n                <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['0']} key='userMenu'>\r\n                    {/* ================ 系统图标 ================*/}\r\n                    <Menu.Item key={'systemIcon'} disabled>\r\n                        <OrangeIcon style={{\r\n                            width: 30,\r\n                            height: 30,\r\n                            marginTop: 10,\r\n                        }}/></Menu.Item>\r\n                    {menuArray.map((item, id) => {\r\n                        return <Menu.Item key={id} style={{height: 55}}>{item?.value}</Menu.Item>\r\n                    })}\r\n                </Menu>\r\n            </div>\r\n            {/* ================ 个人账号设置  ================ */}\r\n            <div style={{\r\n                position: 'absolute',\r\n                right: '3%',\r\n                top: '3%',\r\n            }}>\r\n                <UserSettings history={history}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationCard\\index.jsx",["353","354"],"import React, {useEffect} from 'react'\r\nimport {Card, Tag, Col} from 'antd'\r\nimport {ReactComponent as AssociationIcon} from '../../icons/association-manage.svg'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card\r\n\r\nexport default function AssociationCard(props) {\r\n\r\n    const history = useHistory()\r\n\r\n    const currentAssociation = props.item\r\n\r\n    return (\r\n        <Card hoverable\r\n              key={currentAssociation.associationId}\r\n            // TODO 图片能不能用轮播的？\r\n              cover={<img alt=\"图片加载失败\"\r\n                          src={currentAssociation.imgUrl} style={{\r\n                  height: 200,\r\n                  width: 368,\r\n              }}/>}\r\n              onClick={() => {\r\n                  history.push(`/user/associationDetail/${currentAssociation.associationId}`)\r\n              }}\r\n        >\r\n            <Meta avatar={<AssociationIcon style={{\r\n                width: 50,\r\n                height: 50\r\n            }}/>}\r\n                  title={<div style={{\r\n                      fontSize:18,\r\n                      fontWeight:900,\r\n                  }}>{currentAssociation.associationName}</div>}\r\n            />\r\n            <div>\r\n                纳新状态：\r\n                {\r\n                    currentAssociation.state === '审核通过' ? <Tag color=\"success\">纳新中</Tag> :\r\n                        <Tag color=\"default\">暂未纳新</Tag>\r\n                }\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserManage\\index.jsx",["355","356","357"],"import React, { Component } from 'react'\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport UserInfo from '../UserInfo'\r\nimport UseHeader from '../UserHeader'\r\n\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <UseHeader isUserMenu={true} />\r\n                    <Layout>\r\n                        {/* 侧边栏 */}\r\n                        <Sider width={200} theme=\"light\">\r\n                            {/* 用户头像 */}\r\n                            <Avatar\r\n                                size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100, }}\r\n                                src='E:/image/uacs/user_headicon.jpg'\r\n                                icon={<UserOutlined />}\r\n                                alt='快来上传头像吧！'\r\n                                size='large'\r\n                                draggable={true}\r\n                                style={{marginLeft:'55px',marginTop:'30px',width:'100px',height:'100px'}}\r\n                            />\r\n                        </Sider>\r\n                        <Layout style={{ padding: '0 24px 24px' }}>\r\n                            {/* 面包屑 */}\r\n                            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                                <Breadcrumb.Item>个人中心</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>个人简历</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            {/* 用户信息 */}\r\n                            <UserInfo />\r\n                        </Layout>\r\n                    </Layout>\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",["358","359"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\BaseInfo.js",[],["360","361"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\baseInfo.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\state.js",["376","377"],"const USER_STATE = {\r\n    OPEN: {\r\n        value: 'OPEN',\r\n    },\r\n    CLOSE: {\r\n        value: 'CLOSE',\r\n    },\r\n}\r\n\r\n/**\r\n * 纳新通知 状态\r\n * map\r\n * 流转过程\r\n 未审核 - 审核中\r\n 审核中 - 审核通过\r\n 审核中 - 审核未通过\r\n 审核通过 - 未发布\r\n 审核通过 - 已发布\r\n 已发布 - 结束\r\n */\r\nconst RECRUITMENT_STATE_MAP = new Map([\r\n    ['UNEXAMINE', '未审核'],\r\n    ['EXAMINING', '审核中'],\r\n    ['EXAMINE_PASS', '审核通过'],\r\n    ['EXAMINE_REFUSE', '审核未通过'],\r\n    ['UNPUBLISH', '未发布'],\r\n    ['PUBLISHED', '已发布'],\r\n    ['OVER', '结束'],\r\n]);\r\n\r\n// 未提交-申请中（已提交）-申请通过（未发布）-已发布-下线（时间过了。手动/自动？）\r\nconst RECRUITMENT_STATE = {\r\n    UN_COMMIT: {\r\n        name: '未提交',\r\n        value: 'UN_COMMIT',\r\n    },\r\n    EXAMINING: {\r\n        name: '审核中',\r\n        value: 'EXAMINING',\r\n    },\r\n    EXAMINE_PASS: {\r\n        name: '审核通过',\r\n        value: 'EXAMINE_PASS',\r\n    },\r\n    EXAMINE_REFUSE: {\r\n        name: '审核被拒',\r\n        value: 'EXAMINE_REFUSE',\r\n    },\r\n    OFFLINE: {\r\n        name: '已下线',\r\n        value: 'OFFLINE',\r\n    },\r\n    PUBLISHED: {\r\n        name: '已发布',\r\n        value: 'PUBLISHED',\r\n    },\r\n    OVER: {\r\n        name: '流程结束',\r\n        value: 'OVER',\r\n    },\r\n}\r\n\r\n// 纳新通知 发布状态map。获取方式：RECRUITMENT_PUBLISH_STATE_MAP.get(key)\r\nconst RECRUITMENT_PUBLISH_STATE_MAP = new Map([\r\n    ['UNPUBLISH', '未发布'],\r\n    ['PUBLISHED', '已发布'],\r\n    ['OVER', '结束'],\r\n]);\r\n\r\n// 纳新通知 发布状态list。获取方式：RECRUITMENT_PUBLISH_STATE_MAP.xx.xx\r\nconst RECRUITMENT_PUBLISH_STATE_LIST = {\r\n    UNPUBLISH: {\r\n        name: '未发布',\r\n        value: 'UNPUBLISH',\r\n    },\r\n    PUBLISHED: {\r\n        name: '已发布',\r\n        value: 'PUBLISHED',\r\n    },\r\n    OVER: {\r\n        name: '结束',\r\n        value: 'OVER',\r\n    },\r\n}\r\n\r\n/**\r\n * 申请状态\r\n * @type\r\n * INTERVIEW_PASS:\r\n * UN_COMMIT:\r\n * UN_INTERVIEW:\r\n * CONFIRM:\r\n * INTERVIEW_INVITING:\r\n * APPLYING:\r\n * APPLY_REFUSE:\r\n * REFUSE_INVITING:\r\n * REGRET:\r\n */\r\nconst APPLICATION_STATE = {\r\n    UN_COMMIT: {\r\n        name: '未提交申请',\r\n        value: 'UN_COMMIT',\r\n    },\r\n    APPLYING: {\r\n        name: '申请待审核',\r\n        value: 'APPLYING',\r\n    },\r\n    APPLY_REFUSE: {\r\n        name: '申请已被拒',\r\n        value: 'APPLY_REFUSE',\r\n    },\r\n    INTERVIEW_INVITING: {\r\n        name: '邀请面试中',\r\n        value: 'INTERVIEW_INVITING',\r\n    },\r\n    REFUSE_INVITING: {\r\n        name: '拒绝面试邀请',\r\n        value: 'REFUSE_INVITING',\r\n    },\r\n    UN_INTERVIEW: {\r\n        name: '等待面试中',\r\n        value: 'UN_INTERVIEW',\r\n    },\r\n    INTERVIEW_PASS: {\r\n        name: '面试已通过',\r\n        value: 'INTERVIEW_PASS',\r\n    },\r\n    CONFIRM: {\r\n        name: '已正式加入',\r\n        value: 'CONFIRM',\r\n    },\r\n    REGRET: {\r\n        name: '流程已取消',\r\n        value: 'REGRET',\r\n    },\r\n}\r\n\r\n\r\n// 纳新通知 发布状态list。获取方式：RECRUITMENT_PUBLISH_STATE_MAP.xx.xx\r\nconst ASSOCIATION_STATE = {\r\n    APPROVED: {\r\n        key: 1,\r\n        label: '审核通过',\r\n        value: 'APPROVED',\r\n    },\r\n    APPROVING: {\r\n        key: 2,\r\n        label: '审核中',\r\n        value: 'APPROVING',\r\n    },\r\n    APPROVE_FAIL: {\r\n        key: 3,\r\n        label: '审核未通过',\r\n        value: 'APPROVE_FAIL',\r\n    },\r\n    LOCKED: {\r\n        key: 4,\r\n        label: '社团被锁定',\r\n        value: 'LOCKED',\r\n    },\r\n}\r\n\r\nconst ASSOCIATION_STATE_LIST = [\r\n    {\r\n        key: '1',\r\n        label: '审核通过',\r\n        value: 'APPROVED',\r\n    },\r\n    {\r\n        key: '2',\r\n        label: '审核中',\r\n        value: 'APPROVING',\r\n    },\r\n    {\r\n        key: '3',\r\n        label: '审核未通过',\r\n        value: 'APPROVE_FAIL',\r\n    },\r\n    {\r\n        key: '4',\r\n        label: '社团被锁定',\r\n        value: 'LOCKED',\r\n    },\r\n]\r\n\r\n\r\nconst getAssociationStateLabelByKey = (key) => {\r\n    let stateLabel = ''\r\n    ASSOCIATION_STATE_LIST.map(item => {\r\n        if (item.key === key) {\r\n            stateLabel = item.label\r\n        }\r\n    })\r\n    return stateLabel\r\n}\r\n\r\n\r\nconst ASSOCIATION_TYPE_LIST = [\r\n    {\r\n        label: '学术性社团',\r\n        value: 'ACADEMIC',\r\n    },\r\n    {\r\n        label: '文娱性社团',\r\n        value: 'RECREATIONAL',\r\n    },\r\n    {\r\n        label: '组织性社团',\r\n        value: 'ORGANIZED',\r\n    },\r\n    {\r\n        label: '体能性社团',\r\n        value: 'PHYSICAL',\r\n    },\r\n]\r\n\r\nconst getAssociationTypeLabel = (value) => {\r\n    let Label = '其他类型'\r\n    ASSOCIATION_TYPE_LIST.map(item => {\r\n        if (item.value === value) {\r\n            Label = item.label\r\n        }\r\n    })\r\n    return Label\r\n}\r\n\r\nexport {\r\n    USER_STATE,\r\n    RECRUITMENT_STATE_MAP,\r\n    RECRUITMENT_PUBLISH_STATE_MAP,\r\n    RECRUITMENT_PUBLISH_STATE_LIST,\r\n    RECRUITMENT_STATE,\r\n    APPLICATION_STATE,\r\n    ASSOCIATION_STATE,\r\n    getAssociationStateLabelByKey,\r\n    ASSOCIATION_TYPE_LIST,\r\n    getAssociationTypeLabel,\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\index.js",["378","379","380"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\EditableCell.js",["381","382"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\hooks\\usePublish.js",["383","384","385"],"import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {RECRUITMENT_STATE, RECRUITMENT_STATE_MAP} from \"../constants/state\";\r\nimport {listRecruitmentByUserId} from \"../services/db\";\r\nimport {message} from \"antd\";\r\nimport {updateRecruitmentState} from \"../services/recruitmentSerivce\";\r\n\r\nfunction usePublish() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n\r\n    const refreshRecruitment = () => {\r\n        listRecruitmentByUserId(userInfo.userId)\r\n            .then(res => {\r\n                // console.log(\"==27 resData\", res.data.data);\r\n                setDataSource(res.data.data)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        refreshRecruitment()\r\n    }, [])\r\n\r\n    const handleRollback = (recruitmentId) => {\r\n        updateRecruitmentState(recruitmentId, RECRUITMENT_STATE.UN_COMMIT.value).then(() => {\r\n            refreshRecruitment()\r\n            message.success(\"操作成功！\")\r\n        })\r\n    }\r\n\r\n    const handleCommit = (recruitmentId) => {\r\n        updateRecruitmentState(recruitmentId, RECRUITMENT_STATE.EXAMINING.value).then(() => {\r\n            refreshRecruitment()\r\n            message.success(\"操作成功！\")\r\n        })\r\n    }\r\n\r\n    const handlePublish = (recruitmentId) => {\r\n        updateRecruitmentState(recruitmentId, RECRUITMENT_STATE.PUBLISHED.value).then(() => {\r\n            refreshRecruitment()\r\n            message.success(\"操作成功！\")\r\n        })\r\n    }\r\n\r\n    const handleOffline = (recruitmentId) => {\r\n        updateRecruitmentState(recruitmentId, RECRUITMENT_STATE.OFFLINE.value).then(() => {\r\n            refreshRecruitment()\r\n            message.success(\"操作成功！\")\r\n        })\r\n    }\r\n\r\n    // const handleDelete = (recruitmentId) => {\r\n    //     updateRecruitmentState(recruitmentId, RECRUITMENT_STATE.EXAMINE_PASS.value).then(() => {\r\n    //         refreshRecruitment()\r\n    //         message.success(\"操作成功！\")\r\n    //     })\r\n    // }\r\n\r\n    const handlePass = (recruitmentId) => {\r\n        updateRecruitmentState(recruitmentId, RECRUITMENT_STATE.EXAMINE_PASS.value).then(() => {\r\n            refreshRecruitment()\r\n            message.success(\"操作成功！\")\r\n        })\r\n    }\r\n\r\n    const handleRefuse = (recruitmentId) => {\r\n        updateRecruitmentState(recruitmentId, RECRUITMENT_STATE.EXAMINE_REFUSE.value).then(() => {\r\n            refreshRecruitment()\r\n            message.success(\"操作成功！\")\r\n        })\r\n    }\r\n\r\n    return {\r\n        dataSource,\r\n        handleRollback,\r\n        // handleDelete,\r\n        handleOffline,\r\n        handleCommit,\r\n        handlePublish,\r\n        handlePass,\r\n        handleRefuse\r\n    }\r\n}\r\n\r\nexport default usePublish","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\type.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\db.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\store.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\CollapseReducer.js",["386"],"import {REDUXSTATE} from \"../../constants/redux\";\r\n\r\nexport const CollapseReducer = (preState = {\r\n    isCollapsed: false\r\n}, action) => {\r\n    let {type} = action\r\n    switch (type) {\r\n        case REDUXSTATE.CHANGE_COLLAPSED.type:\r\n            let newState = {...preState}\r\n            newState.isCollapsed = !newState.isCollapsed\r\n            console.log(newState.isCollapsed ? '折叠' : '展开')\r\n            return newState\r\n        default:\r\n            // console.log(\"未找到对应的action\")\r\n            return preState\r\n    }\r\n    return preState\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\LoadingReducer.js",["387"],"import {REDUXSTATE} from \"../../constants/redux\";\r\n\r\nexport const LoadingReducer = (preState = {\r\n    isLoading: false\r\n}, action) => {\r\n    let {type, payload} = action\r\n    switch (type) {\r\n        case REDUXSTATE.CHANGE_ISLOADING.type:\r\n            let newState = {...preState}\r\n            newState.isLoading = payload\r\n            return newState\r\n        default:\r\n            // console.log(\"未找到对应的action\")\r\n            return preState\r\n    }\r\n    return preState\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\redux.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\util\\http.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserSettings\\index.jsx",["388","389"],"import React, {useEffect, useState} from \"react\";\r\nimport {Avatar, Col, Dropdown, Form, Input, Menu, message, Modal, Row, Space, Switch} from \"antd\";\r\nimport Icon, {DownOutlined, UserOutlined, UserSwitchOutlined} from \"@ant-design/icons\";\r\nimport {ReactComponent as UserSettingsIcon} from \"../../icons/user-settings.svg\";\r\nimport {ReactComponent as LogoutIcon} from \"../../icons/logout.svg\";\r\nimport {getUserInfo, updateUserSettings} from \"../../services/userService\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport default function UserSettings(props) {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const history = useHistory()\r\n\r\n    // 个人设置\r\n    const [userForm] = Form.useForm()\r\n    const [settingsModalVisible, setSettingsModalVisible] = useState(false)\r\n    const [confirmLoading, setConfirmLoading] = useState(false)\r\n    const [passwordReseting, setPasswordReseting] = useState(false)\r\n\r\n    // 通过token换取用户信息\r\n    useEffect(() => {\r\n        getUserInfo(userInfo.accessToken).then(res => {\r\n            const {data} = res.data\r\n            if (!data) {\r\n                message.error(\"会话超时，请重新登录！\")\r\n                setTimeout(() => {\r\n                    history.push(\"/login\")\r\n                }, 1500)\r\n            }\r\n        })\r\n    }, [userInfo])\r\n\r\n    const menu = ( // 顶部菜单结构\r\n        <Menu key='systemOptions'>\r\n            {/* ====== 个人设置 ====== */}\r\n            <Menu.Item key='userSettings' onClick={() => {\r\n                getUserInfo(userInfo.accessToken).then(res => {\r\n                    const {data} = res.data\r\n                    userForm.setFieldsValue({\r\n                        name: data.name,\r\n                        userId: data.userId,\r\n                        phone: data.phone,\r\n                        email: data.email,\r\n                    })\r\n                    setSettingsModalVisible(true)\r\n                })\r\n            }}>\r\n                <Icon component={UserSettingsIcon}/> 个人设置\r\n            </Menu.Item>\r\n            {/* ====== 注销系统 ====== */}\r\n            <Menu.Item key='logout' danger onClick={() => {\r\n                localStorage.removeItem(\"token\") // 去除浏览器中的token\r\n                localStorage.removeItem(\"userInfo\") // 去除浏览器中的userInfo\r\n                message.success(\"注销成功！\")\r\n                setTimeout(() => {\r\n                    props.history.replace(\"/login\") // 重定向到登录界面\r\n                }, 500)\r\n            }}>\r\n                <Icon component={LogoutIcon}/> 退出系统\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const cleanPasswordForm = () => {\r\n        userForm.setFieldsValue({\r\n            password: '',\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n        })\r\n    }\r\n\r\n    const handleOk = () => {\r\n        setConfirmLoading(true);\r\n        userForm.validateFields()\r\n            .then(() => {\r\n                console.log(\"表达信息：\")\r\n                console.log(userForm.getFieldsValue())\r\n                updateUserSettings(userForm.getFieldsValue())\r\n                    .then((res) => {\r\n                        message.success(\"更新成功！\")\r\n                        setSettingsModalVisible(false)\r\n                        setConfirmLoading(false)\r\n                        setPasswordReseting(false)\r\n                        // 更新成功，清空密码部分表单信息\r\n                        cleanPasswordForm()\r\n                    })\r\n                    .catch(() => { // 异步更新用户信息失败\r\n                        setConfirmLoading(false)\r\n                    })\r\n            })\r\n            .catch(() => { // 表单校验失败\r\n                setConfirmLoading(false)\r\n            })\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setSettingsModalVisible(false)\r\n        setPasswordReseting(false)\r\n        cleanPasswordForm()\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{float: \"right\"}}>\r\n            <Space size={\"middle\"}>\r\n                <UserSwitchOutlined/>\r\n                {/* ========== 切换使用者身份开关 ========== */}\r\n                <Switch\r\n                    checkedChildren=\"USER\"\r\n                    unCheckedChildren=\"MANAGER\"\r\n                    defaultChecked={props.history.location.pathname.substring(0, 5) === '/user'}\r\n                    onClick={() => {\r\n                        if (props.history.location.pathname.substring(0, 5) === '/user') {\r\n                            props.history.replace(\"/manage\") // 重定向到管理页面\r\n                            return\r\n                        }\r\n                        props.history.replace(\"/user\") // 重定向到用户界面\r\n                    }}\r\n                />\r\n                {/* ========== 欢迎信息 ========== */}\r\n                {userInfo &&\r\n                <div>您好 <span style={{color: 'orange'}}>{userInfo.name}</span></div>\r\n                }\r\n                {/* ========== 下拉菜单 ========== */}\r\n                <Dropdown overlay={menu}>\r\n                    <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                        <Avatar size={28} icon={<UserOutlined/>}/>&nbsp;&nbsp;&nbsp;\r\n                        <DownOutlined/>\r\n                    </a>\r\n                </Dropdown>\r\n            </Space>\r\n            {/*   =============================   个人设置模态框   =============================   */}\r\n            <Modal visible={settingsModalVisible} title=\"账号设置\" width={680}\r\n                   confirmLoading={confirmLoading}\r\n                   onOk={handleOk}\r\n                   onCancel={handleCancel}\r\n            >\r\n                <Form form={userForm}\r\n                      name=\"settings\"\r\n                      layout={\"horizontal\"}\r\n                      labelCol={{span: 8,}}\r\n                      wrapperCol={{span: 16,}}\r\n                >\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <Form.Item label=\"名字\" name=\"name\"\r\n                                       rules={[{required: true, message: '该项不得为空！'}]}\r\n                            ><Input allowClear/></Form.Item>\r\n                        </Col>\r\n                        <Col span={10} push={2}>\r\n                            <Form.Item label=\"学号\" name=\"userId\"\r\n                                       rules={[{required: true, message: '该项不得为空！'}]}>\r\n                                <Input disabled={true}/>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <Form.Item label=\"手机号\" name=\"phone\"\r\n                                       rules={[{\r\n                                           pattern: /^((\\+)?86|((\\+)?86)?)0?1[3458]\\d{9}$/,\r\n                                           message: '手机号格式错误'\r\n                                       }]}\r\n                            ><Input allowClear/></Form.Item>\r\n                        </Col>\r\n                        <Col span={10} push={2}>\r\n                            <Form.Item label=\"邮箱\" name=\"email\"><Input allowClear/></Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <Form.Item label=\"原密码\" name=\"password\"\r\n                                       rules={[{required: true, message: '该项不得为空！'}]}\r\n                            ><Input.Password/></Form.Item>\r\n                        </Col>\r\n                        {/*重置密码开关*/}\r\n                        <Col span={10} push={2}>\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                marginTop: 5\r\n                            }}>\r\n                                <div style={{marginLeft: 18}}>修改密码？</div>\r\n                                <div style={{marginLeft: 8}}>\r\n                                    <Switch checked={passwordReseting} onChange={() => {\r\n                                        setPasswordReseting(!passwordReseting)\r\n                                    }}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <div style={passwordReseting ? {} : {display: 'none'}}>\r\n                        <Row>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"新密码\" name=\"newPassword\"\r\n                                           rules={passwordReseting\r\n                                               ? [\r\n                                                   {required: true, message: '该项不得为空！'},\r\n                                                   {\r\n                                                       pattern: /^[a-zA-Z]\\w{5,17}$/,\r\n                                                       message: '密码必须为字母开头、长度[6,18]、仅含字母、数字和下划线的字符'\r\n                                                   }\r\n                                               ]\r\n                                               : []}\r\n                                ><Input.Password/></Form.Item>\r\n                            </Col>\r\n                            <Col span={10} push={2}>\r\n                                <Form.Item label=\"确认密码\" name=\"confirmPassword\"\r\n                                           rules={passwordReseting\r\n                                               ? [\r\n                                                   {required: true, message: '该项不得为空！'},\r\n                                                   ({getFieldValue}) => ({\r\n                                                       validator(_, value) {\r\n                                                           if (!value || getFieldValue('newPassword') === value) {\r\n                                                               return Promise.resolve();\r\n                                                           }\r\n                                                           return Promise.reject(new Error('两次输入密码必须保持一致！'));\r\n                                                       },\r\n                                                   }),\r\n                                               ]\r\n                                               : []}\r\n                                ><Input.Password/></Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\UserBox\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AppRouter\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationSquare\\index.js",["390","391","392","393","394","395"],"import {Card, Carousel, Col, List, Row} from \"antd\";\r\nimport AssociationCard from \"../../../components/AssociationCard\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {countAssociationTypeAndNum, getAllAssociationList, getRecruitmentListCard} from \"../../../services/db\";\r\nimport * as echarts from \"echarts\";\r\nimport {getAssociationTypeLabel} from \"../../../constants/state\";\r\n\r\n\r\nexport default function AssciationSquare() {\r\n\r\n    const [associationList, setAssociationList] = useState([])\r\n    const associationTypeContainer = useRef()\r\n    const [recruitmentList, setRecruitmentList] = useState([])\r\n\r\n    useEffect(() => {\r\n        // 获取最近的纳新通知\r\n        getRecruitmentListCard(5).then(res => {\r\n            const {data} = res.data\r\n            console.log('纳新通知list')\r\n            console.log(data)\r\n            setRecruitmentList(data)\r\n        })\r\n\r\n        // 获取社团列表\r\n        getAllAssociationList().then(res => {\r\n            // console.log('首页社团列表：')\r\n            // console.log(res.data.data)\r\n            setAssociationList(res.data.data)\r\n        })\r\n        // 获取社团类型图表\r\n        countAssociationTypeAndNum().then(res => {\r\n            const {data} = res.data\r\n            // console.log(\"类型data：\")\r\n            // console.log(data)\r\n            const dataKey = []\r\n            const dataValue = []\r\n            data.map(item => {\r\n                dataKey.push(getAssociationTypeLabel(item.type))\r\n                dataValue.push(item.value)\r\n            })\r\n            // console.log(dataKey)\r\n            // console.log(dataValue)\r\n            drawAssociationTypeBar(dataKey, dataValue)\r\n\r\n        })\r\n    }, [])\r\n\r\n    const drawAssociationTypeBar = (dataKey, dataValue) => {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        const myChart = echarts.init(associationTypeContainer.current);\r\n\r\n        // 指定图表的配置项和数据\r\n        const option = {\r\n            title: {\r\n                text: '社团类别分布'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['社团类别']\r\n                // data: ['社团类别','总人数']\r\n            },\r\n            xAxis: {\r\n                data: dataKey,\r\n\r\n            },\r\n            yAxis: {\r\n                minInterval: 1,\r\n            },\r\n            series: [\r\n                {\r\n                    name: '社团类别',\r\n                    type: 'bar',\r\n                    data: dataValue,\r\n                },\r\n                // {\r\n                //     name: '总人数',\r\n                //     type: 'bar',\r\n                //     data: [15, 4, 13, 33]\r\n                // }\r\n            ]\r\n        };\r\n        myChart.setOption(option);\r\n    }\r\n\r\n\r\n    return <>\r\n        {/* === 前台系统背景图 === */}\r\n        <img src={\"http://localhost:7100/association/getImageById/517ca4baf3674937a105982906d11e44\"}\r\n             style={{\r\n                 position: 'absolute',\r\n                 zIndex: 0,\r\n                 margin: '-23px -23px -23px -23px',\r\n                 height: '100%',\r\n                 width: '100%',\r\n             }}\r\n             key={\"Carousel1\"}\r\n        />\r\n\r\n        <div style={{\r\n            position: 'relative',\r\n            zIndex: 1,\r\n        }}>\r\n            <div style={{\r\n                display: 'flex',\r\n            }}>\r\n                {/* ======================== 轮播图 ========================  */}\r\n                <Carousel autoplay={true} dotPosition={\"bottom\"} style={{\r\n                    width: 500,\r\n                    height: 280,\r\n                }}>\r\n                    <img src={\"http://localhost:7100/association/getImageById/2be18f8af3ff4bd8b9ffb8791ff68d11\"}\r\n                         style={{\r\n                             height: 215,\r\n                             width: 300,\r\n                         }}\r\n                         key={\"Carousel1\"}\r\n                    />\r\n                    <img src={\"http://localhost:7100/association/getImageById/0e8ed76bc616496f9bdbaa65c1dc215c\"}\r\n                         style={{\r\n                             height: 215,\r\n                             width: 300,\r\n                         }}\r\n                         key={\"Carousel2\"}\r\n                    />\r\n                    <img src={\"http://localhost:7100/association/getImageById/548f1deea8e545f5b7cef9041645d6da\"}\r\n                         style={{\r\n                             height: 215,\r\n                             width: 300,\r\n                         }}\r\n                         key={\"Carousel3\"}\r\n                    />\r\n                    <img src={\"http://localhost:7100/association/getImageById/4b704926a1c74d28942b21221032c62a\"}\r\n                         style={{\r\n                             height: 215,\r\n                             width: 300,\r\n                         }}\r\n                         key={\"Carousel4\"}\r\n                    />\r\n                </Carousel>\r\n                <div ref={associationTypeContainer}\r\n                     style={{\r\n                         display: \"inline-block\",\r\n                         width: 700,\r\n                         height: 400,\r\n                         marginLeft: 50,\r\n                     }}/>\r\n                <div style={{\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    <Card bordered={false} style={{width: 300,height:398}}>\r\n                        <List\r\n                            size=\"small\"\r\n                            header={<div style={{\r\n                                fontWeight: 800,\r\n                            }}>纳新通知快报</div>}\r\n                            bordered\r\n                            dataSource={recruitmentList}\r\n                            renderItem={item =>\r\n                                <List.Item>\r\n                                    <a href={`/#/user/associationDetail/${item.associationId}`}>{item.title}</a>\r\n                                </List.Item>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            {/* ======================== 社团展示栏-卡片组 ======================== */}\r\n            <div style={{marginTop: 36,}}>\r\n                <Row gutter={[24, 24]}>\r\n                    {\r\n                        associationList.map(item => {\r\n                            return <Col span={6}>\r\n                                <AssociationCard item={item}/>\r\n                            </Col>\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    </>\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\index.js",["396"],"import React, {useEffect, useState} from \"react\"\r\nimport {Button, Col, Descriptions, Form, Image, Modal, notification, PageHeader, Row, Select, Tabs} from 'antd'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getAssociationDetail, getRecentRecruitment, getUserById} from \"../../../services/db\";\r\nimport Share from \"./Share\";\r\nimport BigEvent from \"./BigEvent\";\r\nimport DataView from \"./DataView\";\r\nimport {useForm} from \"antd/es/form/Form\";\r\nimport styles from './index.less'\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport {checkCanRecruitment, saveApplication} from \"../../../services/applicationService\";\r\n\r\nconst {Option} = Select;\r\nconst {TabPane} = Tabs;\r\n\r\nexport default function AssociationDetail(props) {\r\n\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const history = useHistory()\r\n    const {associationId} = props.match.params\r\n    const [userResume, setUserResume] = useState()\r\n    const [associationDetail, setAssociationDetail] = useState()\r\n    const [recentRecruitment, setRecentRecruitment] = useState([])\r\n    // 入团申请表 Modal\r\n    const [joinModalVisible, setJoinModalVisible] = useState(false);\r\n    // 入团申请表 Form\r\n    const [joinForm] = useForm()\r\n\r\n    useEffect(() => {\r\n        getAssociationDetail(associationId).then(res => {\r\n            const {data} = res.data\r\n            // console.log('社团详情')\r\n            // console.log(data)\r\n            setAssociationDetail(data)\r\n        })\r\n        getRecentRecruitment(associationId).then(res => {\r\n            const {data} = res.data\r\n            // console.log('最近的纳新通知：')\r\n            // console.log(data)\r\n            if (data && data.length > 0) {\r\n                setRecentRecruitment(data[0])\r\n            }\r\n        })\r\n        getUserById(userInfo.userId).then(res => {\r\n            // console.log('用户简历信息：')\r\n            // console.log(res.data.data)\r\n            setUserResume(res.data.data)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleJoinOk = () => {\r\n        joinForm.validateFields().then((values) => {\r\n            console.log(values)\r\n            const data = {\r\n                ...values,\r\n                userId: userResume.userId,\r\n                recruitmentId: recentRecruitment.recruitmentId,\r\n            }\r\n            // console.log('表单数据：')\r\n            // console.log(data)\r\n            saveApplication(data).then(() => {\r\n                // console.log(\"申请表提交结果\", res.data.data)\r\n                setJoinModalVisible(false)\r\n                notification['success']({\r\n                    message: '操作成功！',\r\n                    description:\r\n                        '您可以到【管理界面——我的申请】中跟进流程~',\r\n                });\r\n            }).catch(() => {\r\n                setJoinModalVisible(false)\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* ============================ 页面体 头部 ============================*/}\r\n            <PageHeader\r\n                onBack={() => history.goBack()}\r\n                title={associationDetail?.associationName}\r\n                subTitle={associationDetail?.info}\r\n            >\r\n                {/* ======== 头部 描述信息 ==========*/}\r\n                <div>\r\n                    <Descriptions size=\"small\" column={3}>\r\n                        <Descriptions.Item label=\"社团序列号\"><b>{associationDetail?.associationId}</b></Descriptions.Item>\r\n                        <Descriptions.Item label=\"隶属单位\">{associationDetail?.adminUnit}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"创建时间\">{associationDetail?.createTime}</Descriptions.Item>\r\n                    </Descriptions>\r\n                </div>\r\n            </PageHeader>\r\n\r\n\r\n            {/* ============================ 页面体 内容 ============================*/}\r\n            <Tabs defaultActiveKey=\"recruitment\">\r\n                {/* ================================= 纳新通知  =================================  */}\r\n                <TabPane tab=\"社团纳新\" key=\"recruitment\">\r\n                    <div style={{\r\n                        float: 'right',\r\n                        margin: '20px 20px 0px 0px',\r\n                    }}>\r\n                        <Button key=\"saveApplication\" type=\"primary\"\r\n                                style={{\r\n                                    width: 150,\r\n                                    height: 50,\r\n                                }}\r\n                                onClick={() => {\r\n                                    checkCanRecruitment(userInfo.userId, recentRecruitment.recruitmentId).then(res => {\r\n                                        const canApplication = res.data.data\r\n                                        // console.log('查询结果')\r\n                                        if (canApplication) {\r\n                                            setJoinModalVisible(true)\r\n                                        } else {\r\n                                            notification['error']({\r\n                                                message: '操作失败！',\r\n                                                description:\r\n                                                    '您已经申请过本次社团纳新了,无法重复申请~',\r\n                                            });\r\n                                        }\r\n                                    })\r\n                                }}>\r\n                            申请加入\r\n                        </Button>\r\n                    </div>\r\n                    <div style={{\r\n                        padding: '16px 16px 16px 16px',\r\n                        margin: '24px 24px',\r\n                        border: '1px solid gray',\r\n                    }}>\r\n                        <div dangerouslySetInnerHTML={{\r\n                            __html: recentRecruitment?.content\r\n                        }}/>\r\n                    </div>\r\n                </TabPane>\r\n\r\n                {/* ================= 社团经历分享  ====================-  */}\r\n                <TabPane tab=\"成员分享\" key=\"associationShare\">\r\n                    <Share associationId={associationId}/>\r\n                </TabPane>\r\n\r\n\r\n\r\n                {/* ================================= echarts数据可视化部分  =================================  */\r\n                }\r\n                <TabPane tab=\"了解我们\" key=\"dataView\">\r\n                    <DataView associationId={associationDetail?.associationId}\r\n                              recruitmentId={recentRecruitment?.recruitmentId}/>\r\n                </TabPane>\r\n                {/* ================= 社团大事记  ====================-  */\r\n                }\r\n                <TabPane tab=\"社团大事记\" key=\"bigEvent\">\r\n                    <BigEvent/>\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n\r\n            {/* ================== 申请加入社团 Modal =============== */\r\n            }\r\n            <Modal title=\"入团申请表\" visible={joinModalVisible} width={1200}\r\n                   onOk={handleJoinOk}\r\n                   onCancel={() => {\r\n                       setJoinModalVisible(false)\r\n                   }}\r\n            >\r\n                <Form form={joinForm} className={styles.joinForm}>\r\n                    <Row>\r\n                        <Col span={20}>\r\n                            <Descriptions column={6} bordered={true} size={'small'} className={styles.joinForm}>\r\n                                <Descriptions.Item label=\"姓名\" span={2}>{userResume?.name}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"学号\" span={2}>{userResume?.userId}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"性别\" span={2}>{userResume?.gender}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"院系专业班级\"\r\n                                                   span={6}>{userResume?.collegeMajorClass}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"联系方式\" span={3}>{userResume?.phone}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"电子邮箱\" span={3}>{userResume?.email}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"意向部门\" span={4}>\r\n                                    <Form.Item name={'departmentId'}\r\n                                               rules={[{required: true, message: '请选择意向部门！'}]}\r\n                                               initialValue={associationDetail?.departments.length > 0 ? associationDetail?.departments[0].departmentId : ''}\r\n                                    >\r\n                                        <Select style={{width: 180}}>\r\n                                            {associationDetail?.departments.map(dpt => {\r\n                                                return <Option value={dpt.departmentId}>{dpt.departmentName}</Option>\r\n                                            })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"是否接受调剂\" span={2}>\r\n                                    <Form.Item name={'canAdjust'}\r\n                                               rules={[{required: true, message: '请确认是否接受调剂！'}]}\r\n                                               initialValue={0}\r\n                                    >\r\n                                        <Select style={{width: 180}}>\r\n                                            <Option value={1}>是</Option>\r\n                                            <Option value={0}>否</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Descriptions.Item>\r\n                            </Descriptions>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Image width={180} height={180}\r\n                                   src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* ====== 描述信息 ======  */}\r\n                    <Descriptions bordered={true} column={6} size={'small'}>\r\n                        <Descriptions.Item label=\"兴趣爱好\" span={6} labelStyle={{width: 135}} style={{height: 95}}>\r\n                            <Form.Item name={'like'} style={{height: 95}}>\r\n                                <TextArea rows={5}/>\r\n                            </Form.Item>\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"自我评价\" span={6} style={{height: 95}}>\r\n                            <Form.Item name={'selfProfile'} style={{height: 95}}>\r\n                                <TextArea rows={5}/>\r\n                            </Form.Item>\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"对社团的看法\" span={6} style={{height: 95}}>\r\n                            <Form.Item name={'viewOfAssociation'} style={{height: 95}}>\r\n                                <TextArea rows={5}/>\r\n                            </Form.Item>\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"加入社团的目标\" span={6} style={{height: 95}}>\r\n                            <Form.Item name={'joinPurpose'} style={{height: 95}}>\r\n                                <TextArea rows={5}/>\r\n                            </Form.Item>\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Home\\index.js",["397"],"import React, {useEffect, useRef} from 'react'\r\nimport * as echarts from 'echarts'\r\nimport {countAssociationTypeAndNum} from \"../../../services/db\";\r\nimport {getAssociationTypeLabel} from \"../../../constants/state\";\r\n\r\nexport default function Home() {\r\n\r\n    const associationTypeContainer = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        // 获取社团类型图表\r\n        countAssociationTypeAndNum().then(res => {\r\n            const {data} = res.data\r\n            // console.log(\"类型data：\")\r\n            // console.log(data)\r\n            const dataKey = []\r\n            const dataValue = []\r\n            data.map(item => {\r\n                dataKey.push(getAssociationTypeLabel(item.type))\r\n                dataValue.push(item.value)\r\n            })\r\n            // console.log(dataKey)\r\n            // console.log(dataValue)\r\n            drawAssociationTypeBar(dataKey, dataValue)\r\n\r\n        })\r\n    }, [])\r\n\r\n\r\n    const drawAssociationTypeBar = (dataKey, dataValue) => {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        const myChart = echarts.init(associationTypeContainer.current);\r\n\r\n        // 指定图表的配置项和数据\r\n        const option = {\r\n            title: {\r\n                text: '社团类别分布'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['社团类别']\r\n                // data: ['社团类别','总人数']\r\n            },\r\n            xAxis: {\r\n                data: dataKey,\r\n\r\n            },\r\n            yAxis: {\r\n                minInterval: 1,\r\n            },\r\n            series: [\r\n                {\r\n                    name: '社团类别',\r\n                    type: 'bar',\r\n                    data: dataValue,\r\n                },\r\n            ]\r\n        };\r\n        myChart.setOption(option);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div ref={associationTypeContainer}\r\n                 style={{\r\n                     width: '100%',\r\n                     height: 650,\r\n                 }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Login\\index.js",["398","399"],"import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Button, Form, Input, message,} from 'antd';\r\nimport {UnlockOutlined, UserOutlined,} from '@ant-design/icons';\r\nimport Particles from 'react-particles-js';\r\nimport './index.css'\r\nimport {login} from \"../../../services/userService\";\r\nimport {ReactComponent as OrangeIcon} from \"../../../icons/orange.svg\";\r\nimport {ROLE_TYPE} from \"../../../constants/type\";\r\n\r\nexport default function Login(props) {\r\n\r\n    const history = useHistory()\r\n\r\n    const formatUserInfo = (userInfo) => {\r\n        const manageAssociationKeys = []\r\n        let isSuperAdmin = false\r\n        userInfo.roleList.map(role => {\r\n            if (role.roleId == ROLE_TYPE.ASSOCIATION_ADMIN.key) {\r\n                manageAssociationKeys.push(role.associationId)\r\n            }\r\n            if (role.roleId === ROLE_TYPE.SUPER_ADMIN.key) {\r\n                isSuperAdmin = true\r\n            }\r\n        })\r\n        return {...userInfo, isSuperAdmin, manageAssociationKeys}\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        localStorage.removeItem(\"token\") // 将原有的token移除\r\n        localStorage.removeItem(\"userInfo\") // 将原有的userInfo移除\r\n        login(values).then(res => {\r\n            if (res.data.msg === \"用户为关闭状态\") {\r\n                message.error(\"用户被锁定，无法登录！！\") // 验证失败，提示用户\r\n                return\r\n            }\r\n            const userInfo = res.data.data\r\n            if (!userInfo) {\r\n                message.error(\"用户名或密码输入错误！\") // 验证失败，提示用户\r\n                return\r\n            }\r\n            // 如果data非空,说明验证成功\r\n            localStorage.setItem(\"token\", res.data.data.accessToken) // 将token保存到浏览器中\r\n            const formattedUserInfo = formatUserInfo(userInfo) // 为便于权限控制，对用户信息进行二次处理\r\n            localStorage.setItem(\"userInfo\", JSON.stringify(formattedUserInfo)) // 将userLoginInfo保存到浏览器中\r\n            message.success(\"登录成功，跳转中...\")\r\n            setTimeout(() => {\r\n                history.push(\"/\") // 跳转到主页面\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginBackGround\">\r\n            {/*粒子效果*/}\r\n            <Particles\r\n                // 粒子效果高度为当前元素高度\r\n                height={document.documentElement.clientHeight}\r\n                // 粒子效果参数\r\n                params={\r\n                    {\r\n                        \"background\": {\r\n                            \"color\": {\r\n                                \"value\": \"navajowhite\"\r\n                            },\r\n                            \"image\": \"url('/images/rainbow_cat.gif')\",\r\n                            \"position\": \"0 15%\",\r\n                            \"repeat\": \"no-repeat\",\r\n                            \"size\": \"60%\"\r\n                        },\r\n                        \"fullScreen\": {\r\n                            \"enable\": true,\r\n                            \"zIndex\": 1\r\n                        },\r\n                        \"interactivity\": {\r\n                            \"events\": {\r\n                                \"onClick\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"repulse\"\r\n                                },\r\n                                \"onHover\": {\r\n                                    \"mode\": \"grab\"\r\n                                }\r\n                            },\r\n                            \"modes\": {\r\n                                \"bubble\": {\r\n                                    \"distance\": 400,\r\n                                    \"duration\": 2,\r\n                                    \"opacity\": 8,\r\n                                    \"size\": 40\r\n                                },\r\n                                \"grab\": {\r\n                                    \"distance\": 200\r\n                                }\r\n                            }\r\n                        },\r\n                        \"particles\": {\r\n                            \"color\": {\r\n                                \"value\": \"#ffffff\"\r\n                            },\r\n                            \"links\": {\r\n                                \"color\": {\r\n                                    \"value\": \"#ffffff\"\r\n                                },\r\n                                \"distance\": 150,\r\n                                \"opacity\": 0.4\r\n                            },\r\n                            \"move\": {\r\n                                \"attract\": {\r\n                                    \"rotate\": {\r\n                                        \"x\": 600,\r\n                                        \"y\": 1200\r\n                                    }\r\n                                },\r\n                                \"direction\": \"left\",\r\n                                \"enable\": true,\r\n                                \"outModes\": {\r\n                                    \"bottom\": \"out\",\r\n                                    \"left\": \"out\",\r\n                                    \"right\": \"out\",\r\n                                    \"top\": \"out\"\r\n                                },\r\n                                \"speed\": 6,\r\n                                \"straight\": true\r\n                            },\r\n                            \"opacity\": {\r\n                                \"value\": 0.5,\r\n                                \"animation\": {\r\n                                    \"speed\": 1,\r\n                                    \"minimumValue\": 0.1\r\n                                }\r\n                            },\r\n                            \"shape\": {\r\n                                \"options\": {\r\n                                    \"star\": {\r\n                                        \"sides\": 5\r\n                                    }\r\n                                },\r\n                                \"type\": \"star\"\r\n                            },\r\n                            \"size\": {\r\n                                \"random\": {\r\n                                    \"enable\": true\r\n                                },\r\n                                \"value\": {\r\n                                    \"min\": 1,\r\n                                    \"max\": 4\r\n                                },\r\n                                \"animation\": {\r\n                                    \"speed\": 40,\r\n                                    \"minimumValue\": 0.1\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            />\r\n            <div className=\"userFormContainer\">\r\n                <div className=\"loginTitle\">\r\n                    高校社团管理系统-橘集@UACS\r\n                    <OrangeIcon style={{\r\n                        width: 40,\r\n                        height: 40,\r\n                        marginTop: 10,\r\n                    }}/></div>\r\n                <Form labelCol={{span: 4,}}\r\n                      onFinish={onFinish}\r\n                >\r\n                    <Form.Item name=\"userId\">\r\n                        <Input placeholder=\"请输入学号/职工号\" id=\"userId\" prefix={<UserOutlined/>}/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password\">\r\n                        <Input.Password placeholder=\"请输入密码\" id=\"password\" prefix={<UnlockOutlined/>}/>\r\n                    </Form.Item>\r\n                    <Form.Item style={{paddingLeft: '50%',}}>\r\n                        <Button type={\"primary\"} htmlType={\"submit\"}>登录</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\NoPermission\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\shareService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\userService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\index.js",["400","401","402"],"// 第三方\r\nimport React, {useEffect} from 'react'\r\n// uacs\r\nimport SideMenu from '../../../components/SideMenu'\r\nimport TopHeader from '../../../components/TopHeader'\r\nimport SysRouter from './SysRouter'\r\n// css\r\nimport './index.css'\r\n// antd\r\nimport {Layout, message} from 'antd';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst {Content} = Layout;\r\n\r\n\r\nexport default function SandBox() {\r\n\r\n    return (\r\n        <Layout>\r\n            {/* 侧边栏 */}\r\n            <SideMenu/>\r\n            {/* 内容布局 */}\r\n            <Layout>\r\n                {/* 头部导航栏 */}\r\n                <TopHeader/>\r\n                {/* 前端路由 */}\r\n                <Content style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 240,\r\n                    overflow: 'auto'\r\n                }}>\r\n                    <SysRouter></SysRouter>\r\n                </Content>\r\n\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\ShareDetail\\index.js",["403","404","405","406","407","408","409"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\SysRouter\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\index.js",["410","411","412"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\AddShare\\index.js",["413"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\PermissionList\\index.js",["414"],"import React, {Component} from 'react'\r\nimport {Button, Modal, Popover, Switch, Table, Tag} from 'antd'\r\nimport {DeleteOutlined, EditOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport {getPermissionList, updatePermissionById} from \"../../../../../services/db\";\r\n\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default class PermissonList extends Component {\r\n\r\n    state = {\r\n        dataSource: [],\r\n        columns: [\r\n            {\r\n                title: 'ID',\r\n                // 通过dataIndex映射VO字段\r\n                dataIndex: 'key',\r\n                // key: 'key',\r\n                render: (key) => {\r\n                    return <b>{key}</b>\r\n                }\r\n            },\r\n            {\r\n                title: '权限名称',\r\n                dataIndex: 'title',\r\n            },\r\n            {\r\n                title: '权限路径',\r\n                dataIndex: 'routePath',\r\n                render: (routePath) => {\r\n                    return <Tag color={\"orange\"}>{routePath}</Tag>\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (item) => {\r\n                    return <div>\r\n                        <Popover\r\n                            style={{}}\r\n                            content={\r\n                                <div>\r\n                                    <Switch checked={item.type === \"MENU_ELEMENT\"}\r\n                                            onClick={() => this.changeMenuState(item)}></Switch>\r\n                                </div>}\r\n                            title=\"是否在左侧菜单栏展示\"\r\n                            trigger={\r\n                                item.type === \"MENU_ELEMENT\" || item.type === \"MENU_ELEMENT_CLOSE\" ?\r\n                                    \"click\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            {/* {item.type === \"MENU_ELEMENT\" &&} */}\r\n                            <Button\r\n                                shape={\"circle\"}\r\n                                icon={<EditOutlined/>}\r\n                                // style={item.type === \"MENU_ELEMENT\" ? {\r\n                                //     border: \"1px solid rgb(165, 99, 13)\",\r\n                                //     color: \"rgb(165, 99, 13)\"\r\n                                // } : { border: \"1px\" }}\r\n                                // disabled={item.type === \"PAGE_ELEMENT\"}\r\n                            >\r\n                            </Button>\r\n                        </Popover>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<DeleteOutlined/>}\r\n                            danger\r\n                            onClick={() => this.confirmDelete(item)}\r\n                        >\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            },\r\n        ],\r\n    }\r\n\r\n\r\n    confirmDelete = (item) => {\r\n        // const { dataSource } = this.state\r\n        // console.log(\"==11 dataSource\",this.state.dataSource);\r\n        const {dataSource} = this.state\r\n        const thisPoint = this\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                let ds = []\r\n                if (item.grade === 1) {\r\n                    ds = dataSource.filter(data => data.key !== item.key)\r\n                } else if (item.grade === 2) {\r\n                    dataSource.map((firstPermission) => {\r\n                        if (firstPermission.children !== \"\") {\r\n                            firstPermission.children = firstPermission.children.filter((child) => child.key !== item.key)\r\n                            if (firstPermission.children.length === 0) {\r\n                                firstPermission.children = \"\"\r\n                            }\r\n                            ds.push(firstPermission)\r\n                            // console.log(\"==14 after push:\", ds);\r\n                        } else {\r\n                            ds.push(firstPermission)\r\n                        }\r\n\r\n                    })\r\n                }\r\n                thisPoint.setState({dataSource: ds})\r\n                // 调用后端接口，同步后台数据库\r\n                axios.get(`/association/deletePermissionById/${item.key}`)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 改变菜单项的状态。是否在左侧菜单栏展示\r\n    changeMenuState = (item) => {\r\n        console.log(\"==15 item\", item);\r\n        if (item.type === \"MENU_ELEMENT\") {\r\n            item.type = \"MENU_ELEMENT_CLOSE\"\r\n        } else if (item.type === \"MENU_ELEMENT_CLOSE\") {\r\n            item.type = \"MENU_ELEMENT\"\r\n        }\r\n        this.setState([...this.state.dataSource])\r\n\r\n        const data = {\r\n            permissionId: item.key,\r\n            type: item.type\r\n        }\r\n        updatePermissionById(data)// 同步后端\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // 获取菜单信息\r\n        getPermissionList().then(res => {\r\n            console.log(\"权限列表\",res.data.data)\r\n            const {data} = res.data // res.data还只是responseBody\r\n            data.forEach((item) => {\r\n                if (item.children.length === 0) {\r\n                    item.children = \"\"\r\n                } else {\r\n                    item.children.forEach((e) => {\r\n                        if (e.children.length === 0) {\r\n                            e.children = \"\"\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            this.setState({dataSource: data})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table\r\n                    dataSource={this.state.dataSource}\r\n                    columns={this.state.columns}\r\n                    pagination={{\r\n                        pageSize: 5\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\ClassList\\index.js",["415","416","417","418","419","420","421","422"],"import {Button, Form, Input, message, Modal, Space, Table, Tag} from 'antd';\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport {addTreeNode, deleteTreeNode, getClassTree} from \"../../../../../services/treeService\";\r\nimport {ICON, OPTION_ICONS} from \"../../../../../constants/icon\";\r\nimport {TREE_NODE_TYPE} from \"../../../../../constants/type\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ClassList() {\r\n\r\n    const [classTreeData, setClassTreeData] = useState([])\r\n    const [addingCollegeName, setAddingCollegeName] = useState('')\r\n    const [addCollegeForm] = Form.useForm()\r\n    const addCollegeRef = useRef()\r\n\r\n    const refreshTree = () => {\r\n        getClassTree()\r\n            .then(res => {\r\n                const {data} = res.data\r\n                const formattedData = formatDataSource(data)\r\n                setClassTreeData(formattedData)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshTree()\r\n    }, [])\r\n\r\n\r\n    const formatDataSource = (respData) => {\r\n        respData.map(item1 => {\r\n            if (item1.children.length === 0) {\r\n                item1.children = ''\r\n            } else {\r\n                item1.children.map(item2 => {\r\n                    if (item2.children.length === 0) {\r\n                        item2.children = ''\r\n                    } else {\r\n                        item2.children.map(item3 => {\r\n                            if (item3.children.length === 0) {\r\n                                item3.children = ''\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return respData\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '序号',\r\n            dataIndex: 'treeId',\r\n        },\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'label',\r\n            render: (label, item) => {\r\n                return (\r\n                    <Space>\r\n                        {label}\r\n\r\n                        {item.type === TREE_NODE_TYPE.COLLEGE.value\r\n                        && <Tag icon={ICON.college} color={'#cd201f'}>学院</Tag>}\r\n\r\n                        {item.type === TREE_NODE_TYPE.MAJOR.value\r\n                        && <Tag icon={ICON.major} color={'#55acee'}>专业</Tag>}\r\n\r\n                        {item.type === TREE_NODE_TYPE.CLASS.value\r\n                        && <Tag icon={ICON.class} color={'#3b5999'}>班级</Tag>}\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '学院官网',\r\n            dataIndex: 'description',\r\n            render: (description) => {\r\n                return <a>{description}</a>\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (_, item) => {\r\n                let nodeName = ''\r\n                if (item.type === TREE_NODE_TYPE.COLLEGE.value) {\r\n                    nodeName = '专业'\r\n                } else if (item.type === TREE_NODE_TYPE.MAJOR.value) {\r\n                    nodeName = '班级'\r\n                }\r\n                const type = item.type === TREE_NODE_TYPE.COLLEGE.value ? TREE_NODE_TYPE.MAJOR.value : TREE_NODE_TYPE.CLASS.value\r\n                const pid = item.treeId\r\n                return (\r\n                    <Space>\r\n                        {item.level < 3\r\n                        && <Button size={\"small\"} icon={OPTION_ICONS.ADD}\r\n                                   onClick={() => {\r\n                                       console.log('当前item：')\r\n                                       console.log(item)\r\n                                       Modal.confirm({\r\n                                           title: `新增${nodeName}`,\r\n                                           width: 498,\r\n                                           icon: ICON.college,\r\n                                           content: <Form name={`add${nodeName}`} form={addCollegeForm}\r\n                                                          ref={addCollegeRef}\r\n                                                          labelCol={{span: 6,}} wrapperCol={{span: 18,}}\r\n                                                          autoComplete=\"off\"\r\n                                                          style={{\r\n                                                              margin: '30px 0px 30px 0px'\r\n                                                          }}\r\n                                           >\r\n                                               <Form.Item\r\n                                                   label={`${nodeName}名称`}\r\n                                                   name='treeNodeName'\r\n                                                   rules={[\r\n                                                       {\r\n                                                           required: true,\r\n                                                           message: `请输入${nodeName}名称`,\r\n                                                       },\r\n                                                   ]}\r\n                                               >\r\n                                                   <Input placeholder={`请输入${nodeName}名称`}/>\r\n                                               </Form.Item>\r\n                                           </Form>,\r\n                                           onOk: () => {\r\n                                               addCollegeForm.validateFields()\r\n                                                   .then(values => {\r\n                                                       const data = {label: values.treeNodeName, type, pid,}\r\n                                                       addTreeNode(data)\r\n                                                           .then(() => {\r\n                                                               message.success(\"新增成功！\")\r\n                                                               refreshTree()\r\n                                                           })\r\n                                                   }).finally(() => {\r\n                                                   addCollegeRef.current.resetFields()\r\n                                               })\r\n                                           }\r\n                                       })\r\n                                   }}\r\n                        >新增{nodeName}</Button>}\r\n\r\n                        <Button size={\"small\"} icon={OPTION_ICONS.EDIT}\r\n                                onClick={() => {\r\n\r\n                                }}\r\n                        >重命名</Button>\r\n\r\n                        {item.children.length < 1 &&\r\n                        <Button size={\"small\"} danger icon={OPTION_ICONS.DELETE}\r\n                                onClick={() => {\r\n                                    Modal.confirm({\r\n                                        title: `确认删除【${item.label}】吗？`,\r\n                                        icon: ICON.college,\r\n                                        onOk: () => {\r\n                                            deleteTreeNode(item.treeId)\r\n                                                .then(() => {\r\n                                                    message.success(\"删除成功！\")\r\n                                                    refreshTree()\r\n                                                })\r\n                                        }\r\n                                    })\r\n                                }}\r\n                        >删除</Button>}\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Button type='primary' style={{marginBottom: 20}}\r\n                    onClick={() => {\r\n                        Modal.confirm({\r\n                            title: '新增学院',\r\n                            width: 498,\r\n                            icon: ICON.college,\r\n                            content: <Form name=\"addCollege\" form={addCollegeForm} ref={addCollegeRef}\r\n                                           labelCol={{span: 6,}} wrapperCol={{span: 18,}} autoComplete=\"off\"\r\n                                           style={{\r\n                                               margin: '30px 0px 30px 0px'\r\n                                           }}\r\n                            >\r\n                                <Form.Item\r\n                                    label=\"学院名称\"\r\n                                    name=\"collegeName\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入学院名称！',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder={'请输入学院名称'}/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"学院官网\" name=\"url\">\r\n                                    <Input placeholder={'请输入学院官网'}/>\r\n                                </Form.Item>\r\n                            </Form>,\r\n                            onOk: () => {\r\n                                addCollegeForm.validateFields()\r\n                                    .then(values => {\r\n                                        const data = {\r\n                                            label: values.collegeName,\r\n                                            type: TREE_NODE_TYPE.COLLEGE.value,\r\n                                            pid: 0,\r\n                                            description: values.url,\r\n                                        }\r\n                                        addTreeNode(data)\r\n                                            .then(() => {\r\n                                                refreshTree()\r\n                                            })\r\n                                    }).finally(() => {\r\n                                    addCollegeRef.current.resetFields()\r\n                                })\r\n                            }\r\n                        })\r\n                    }}\r\n            >\r\n                新增学院\r\n            </Button>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={classTreeData}\r\n                rowKey={item => item.treeId}\r\n                pagination={{\r\n                    pageSize: 7\r\n                }}\r\n                rowSelection={{\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n\r\n                    },\r\n                    onSelectAll: (selected, selectedRows, changeRows) => {\r\n\r\n                    },\r\n                }}\r\n\r\n            />\r\n        </>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\AddRecruitment\\index.js",["423","424","425","426"],"import {useEffect, useRef, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    DatePicker,\r\n    Form,\r\n    Input,\r\n    InputNumber,\r\n    message,\r\n    notification,\r\n    PageHeader,\r\n    Select,\r\n    Space,\r\n    Steps\r\n} from 'antd'\r\n\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\nimport axios from \"axios\";\r\nimport qs from 'querystring'\r\n\r\nimport moment from 'moment'\r\n\r\nimport AssociationEditor from \"../../../../../components/AssociationEditor\";\r\nimport style from './index.css'\r\nimport {getAssociationByUserId} from \"../../../../../services/db\";\r\n\r\n\r\nconst {Step} = Steps;\r\n\r\nconst {RangePicker} = DatePicker;\r\n\r\nconst {TextArea} = Input\r\n\r\nconst {Option} = Select;\r\n\r\n// 点击“仅保存“或”提交审核“的key和btn\r\nconst key = `open${Date.now()}`;\r\nconst btn = (\r\n    <Button type=\"primary\" size=\"small\" onClick={() => notification.close(key)}>\r\n        我知道了\r\n    </Button>\r\n);\r\n\r\nexport default function AddRecruitment(props) {\r\n\r\n    // 展示\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [associationList, setAssociationList] = useState([])\r\n\r\n    // 交互逻辑\r\n    const [currentStep, setCurrentStep] = useState(0) // 撰写纳新展示信息 步骤 位置\r\n    const baseInfoFormRef = useRef(null)\r\n\r\n    // step1 : baseInfo\r\n    const [newAssociation, setNewAssociation] = useState(0) // 纳新的社团组织\r\n    const [newNum, setNewNum] = useState(30);// 社团纳新人数\r\n    const [newStartTime, setNewStartTime] = useState(\"\") //纳新开始时间\r\n    const [newEndTime, setNewEndTime] = useState(\"\") //纳新结束时间\r\n    const [baseInfoForm, setBaseInfoForm] = useState({})\r\n    // step2 : content for show\r\n    const [content4Show, setContent4Show] = useState(\"\")\r\n\r\n\r\n    // 获取本用户管理的社团（才能撰写纳新信息/通知/展示）\r\n    useEffect(() => {\r\n        const data = {\r\n            userId: userInfo.userId,\r\n            roleIds: [2],\r\n        }\r\n        getAssociationByUserId(data)\r\n            .then(res => {\r\n                const associationList = res.data.data\r\n                setAssociationList(associationList)\r\n            })\r\n    }, [])\r\n\r\n    const toPrevious = () => {\r\n        setCurrentStep(currentStep - 1)\r\n    }\r\n\r\n    const toNext = () => {\r\n        // 校验第一步：基本信息\r\n        if (currentStep === 0) {\r\n            baseInfoFormRef.current.validateFields().then(res => {\r\n                console.log(\"==1 AddRecrutment 校验结果：\", res)\r\n                setBaseInfoForm(res)\r\n                setCurrentStep(currentStep + 1)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            if (content4Show === \"\" || content4Show.trim() === \"<p></p>\") {\r\n                message.error(\"社团纳新展示内容不得为空\")\r\n                return\r\n            }\r\n            console.log(\"收集的信息：\", baseInfoForm, content4Show)\r\n            setCurrentStep(currentStep + 1)\r\n        }\r\n    }\r\n\r\n\r\n    const onChange = (dates, dateStrings) => {\r\n        console.log('From: ', dates[0], ', to: ', dates[1]);\r\n        console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\r\n        setNewStartTime(dateStrings[0])\r\n        setNewEndTime(dateStrings[1])\r\n    }\r\n\r\n    const handleCommit = (state) => {\r\n        const postData = {\r\n            userId: userInfo.userId, // 申请人ID\r\n            ...baseInfoForm, // 基本信息\r\n            newNum: newNum, // 纳新人数\r\n            content: content4Show, // 展示的信息\r\n            state: state, // 默认初始状态为未审核\r\n            startTime: newStartTime,\r\n            endTime: newEndTime,\r\n        }\r\n\r\n        axios({\r\n            url: '/association/addRecruitment',\r\n            method: 'post',\r\n            data: postData,\r\n            headers: {'Content-Type': 'application/json;charset=UTF-8'}\r\n        }).then(res => {\r\n            console.log(\"==27 res\", res);\r\n            // props.history.push('/') // TODO 提交后是否需要跳转页面？\r\n            notification.open({\r\n                message: state === 'UNEXAMINE' ? '保存成功' : '审核提交成功',\r\n                description: `您可以到 纳新信息列表 查看${state === 'UNEXAMINE' ? '保存' : '审核'}结果`,\r\n                btn,\r\n                key,\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"==26 err\", err);\r\n            notification.open({\r\n                message: state === 'UNEXAMINE' ? '保存成功' : '审核提交成功',\r\n                description: `您可以到 纳新信息列表 查看${state === 'UNEXAMINE' ? '保存' : '审核'}结果`,\r\n                btn,\r\n                key,\r\n            });\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleOptionChange = (value) => {\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    const renderAssociationListToSelectOptions = () => {\r\n        let options = []\r\n        associationList.forEach(association => {\r\n            options.push(<Option\r\n                key={association.associationId}\r\n                value={association.associationId}>\r\n                {association.associationName}\r\n            </Option>)\r\n        })\r\n        return (\r\n            <Select\r\n                // defaultOpen={true} // 是否默认展开\r\n                defaultActiveFirstOption={true} // 首项高亮\r\n                style={{width: 240}}\r\n                onChange={handleOptionChange}>\r\n                {options}\r\n            </Select>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader className=\"site-page-header\" title=\"撰写纳新展示\" subTitle=\"发挥你的文笔，吸引同学们的加入吧~\"/>\r\n            <Steps current={currentStep}>\r\n                <Step title=\"基本信息\" description=\"纳新人数，起始时间等\"/>\r\n                <Step title=\"展示内容\" subTitle=\"二级标题\" description=\"纳新通知的信息内容等\"/>\r\n                <Step title=\"保存/提交\" description=\"仅保存或提交等待审核\"/>\r\n            </Steps>\r\n            {/*内容组*/}\r\n            <div className={style.contentGroup} style={{marginTop: '50px',}}>\r\n                {/*step1 基本信息 =====================================*/}\r\n                <div style={currentStep === 0 ? {} : {display: 'none',}}>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{span: 4,}}\r\n                        wrapperCol={{span: 20,}}\r\n                        ref={baseInfoFormRef}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"纳新标题\"\r\n                            name=\"title\"\r\n                            rules={\r\n                                [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请输入纳新标题',\r\n                                    },\r\n                                ]\r\n                            }\r\n                        >\r\n                            <Input type=\"text\"/>\r\n                        </Form.Item>\r\n                        {/* name相同的话，他们受控行为就相同 */}\r\n                        <Form.Item label=\"纳新社团\" name=\"associationId\">\r\n                            {renderAssociationListToSelectOptions()}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"纳新人数\">\r\n                            <Space>\r\n                                <InputNumber\r\n                                    min={1}\r\n                                    max={30}\r\n                                    value={newNum}\r\n                                    onChange={setNewNum}/>\r\n                                <Button\r\n                                    type=\"ghost\"\r\n                                    onClick={() => {\r\n                                        setNewNum(30);\r\n                                    }}\r\n                                >重置</Button>\r\n                            </Space>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"纳新起始时间\">\r\n                            <Space direction=\"vertical\" size={12}>\r\n                                <RangePicker\r\n                                    locale={locale} // 采用本地语言 即中文\r\n                                    // 不同选项快捷时间范围\r\n                                    ranges={{\r\n                                        '今天': [moment(), moment()],\r\n                                        '本月': [moment().startOf('month'), moment().endOf('month')],\r\n                                    }}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Space>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\" name=\"description\">\r\n                            <TextArea rows={4} placeholder={\"若需求请填写备注信息\"}/>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n\r\n\r\n                {/* step2 社团纳新展示信息 =====================================*/\r\n                }\r\n                <div style={currentStep === 1 ? {} : {display: 'none',}}>\r\n                    <AssociationEditor\r\n                        // 子传父 获取 富文本编辑器内容\r\n                        getContent={(value) => {\r\n                            console.log(value)\r\n                            setContent4Show(value)\r\n                        }}/>\r\n                </div>\r\n\r\n\r\n                {/*step3 保存或提交审核 =====================================*/\r\n                }\r\n                <div style={currentStep === 2 ? {} : {display: 'none',}}>\r\n                </div>\r\n            </div>\r\n\r\n            {/*按钮组*/\r\n            }\r\n            <div style={{\r\n                marginTop: '50px',\r\n                // padding:'10px',\r\n                // border:'10px',\r\n                // paddingRight:'10px',\r\n                // paddingLeft:'10px',\r\n            }}>\r\n                {\r\n                    currentStep > 0 && <Button\r\n                        type=\"ghost\"\r\n                        onClick={toPrevious}\r\n                    >上一步</Button>\r\n                }\r\n                {\r\n                    currentStep < 2 && <Button\r\n                        type=\"primary\"\r\n                        onClick={toNext}\r\n                    >下一步</Button>\r\n                }\r\n\r\n                {/*最后一步 保存或提交 ================*/}\r\n                {\r\n                    currentStep === 2 && <span>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => handleCommit(\"UNEXAMINE\")}\r\n                        >\r\n                            仅保存\r\n                        </Button>\r\n                        <Button danger={true}\r\n                                onClick={() => handleCommit(\"EXAMINING\")}\r\n                        >\r\n                            提交审核\r\n                        </Button>\r\n                    </span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\RoleList\\index.js",["427","428","429","430"],"import React, {Component} from 'react'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Tree, message\r\n} from 'antd'\r\nimport {\r\n    UnorderedListOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport {reGrantPermissions2Role} from \"../../../../../services/db\";\r\nimport {ROLE_TYPE} from \"../../../../../constants/type\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default class RoleList extends Component {\r\n\r\n    state = {\r\n        roleList: [],// 角色列表\r\n        permissionList: [],// 树形权限列表\r\n        currentRolePermissionKeys: [],// 当前角色的权限\r\n        currentRoleId: 0,// 当前角色的roleId\r\n        // 角色列表表头 及 各列组件效果\r\n        columns: [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'roleId',\r\n                render: (roleId) => {\r\n                    return <b>{roleId}</b>\r\n                }\r\n            },\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'roleName',\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (item) => {\r\n                    return <div>\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<UnorderedListOutlined/>}\r\n                            onClick={() => {\r\n                                this.setState({isModalVisible: true})\r\n                                this.setState({currentRolePermissionKeys: this.mapPermissions2Keys(item.permissions)})\r\n                                this.setState({currentRoleId: item.roleId})\r\n                            }}\r\n                        >\r\n                        </Button>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<DeleteOutlined/>}\r\n                            danger\r\n                            onClick={() => this.confirmDelete(item)}\r\n                        >\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            },\r\n        ],\r\n        isModalVisible: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 获取角色列表 并 同步到state中\r\n        this.getRoleList()\r\n        // 获取权限列表 并 同步到state中\r\n        this.getPermissionList()\r\n    }\r\n\r\n\r\n    // 获取角色列表\r\n    getRoleList = () => {\r\n        axios.get(\"/association/getRoleList\").then(res => {\r\n            const roleData = res.data.data\r\n            // console.log(\"==31 roleData\", roleData);\r\n            this.setState({roleList: roleData})\r\n        }).catch(err => {\r\n            console.log(\"获取角色列表出错！\", err);\r\n        })\r\n    }\r\n\r\n    // 获取树形权限列表\r\n    getPermissionList = () => {\r\n        axios.get(\"/association/getPermissionList\").then(res => {\r\n            const permissionData = res.data.data\r\n            this.setState({permissionList: permissionData})\r\n        }).catch(err => {\r\n            console.log(\"获取权限列表出错！\", err);\r\n        })\r\n    }\r\n\r\n    // TODO 删除后给个loading提示   。。。。等等 真的能删吗？\r\n    confirmDelete = (item) => {\r\n        const {roleList} = this.state\r\n        const thisPoint = this\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                // console.log(\"==1 dataSource\", roleList);\r\n                const newList = roleList.filter(data => data.roleId !== item.roleId)\r\n                thisPoint.setState({roleList: newList})\r\n                // 调用后端接口，同步后台数据库\r\n                // axios.get(`/association/deleteRoleById/${item.roleId}`)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 模态框 点击ok 重新为角色分配权限\r\n    handleOk = () => {\r\n        // 隐藏模态框\r\n        this.setState({isModalVisible: false})\r\n\r\n        // 为同步后端做准备\r\n        let roleId\r\n        let permissionIds = []\r\n        const secondPermissions = this.getSecondPermissions()\r\n        const dataSource = this.state.roleList\r\n        const newDataSource = dataSource.map((item) => {\r\n            // 拿到当前role（即需要修改的role）\r\n            if (item.roleId === this.state.currentRoleId) {\r\n                const currentPermissions = []\r\n                secondPermissions.map((secondPms) => {\r\n                    // 如果当前二级权限在 选中的权限 中存在，则加入数组（数组为新的权限列表）\r\n                    if (this.state.currentRolePermissionKeys.find((e) => {\r\n                        return e === secondPms.key\r\n                    })) {\r\n                        // console.log(\"==76 当前权限被选中：\", secondPms);\r\n                        permissionIds.push(secondPms.key) // 同步后端\r\n                        currentPermissions.push(secondPms)\r\n                    }\r\n                })\r\n                const newItem = {...item, permissions: currentPermissions}\r\n                // console.log(\"==77 newItem\", newItem);\r\n\r\n                roleId = item.roleId // 同步后端\r\n\r\n                return newItem\r\n                // 若不是当前role，则原样返还\r\n            } else {\r\n                return item;\r\n            }\r\n        })\r\n\r\n        reGrantPermissions2Role(roleId, permissionIds).then((res) => {\r\n            if(roleId === ROLE_TYPE.SUPER_ADMIN.key){\r\n                let errorFlag = true\r\n                permissionIds.map(itemKey => {\r\n                    if (itemKey === 13) {\r\n                        errorFlag = false\r\n                    }\r\n                })\r\n                if (errorFlag) {\r\n                    message.error(\"操作非法，超级管理员不得排除管理权限！\")\r\n                    return\r\n                }\r\n            }\r\n            if (res.data.msg === 'ILLEGAL_ACTION') {\r\n                message.error(\"操作非法！\")\r\n                return\r\n            }\r\n            message.success(\"操作成功！\")\r\n\r\n            // 操作成功，同步前端\r\n            this.setState({roleList: newDataSource})\r\n        })\r\n    }\r\n\r\n    // 模态框 点击cancel || 右上角x号 || 点击模态框以外的界面\r\n    handleCancel = () => {\r\n        this.setState({isModalVisible: false})\r\n    }\r\n\r\n    mapPermissions2Keys = (permissions) => {\r\n        // console.log(\"==54 checkedKey\", permissions);\r\n        const checkedKeys = [];\r\n        permissions.map((permission) => {\r\n            checkedKeys.push(permission.key)\r\n        })\r\n        // console.log(\"==64 checkedKeys\",checkedKeys);\r\n        return checkedKeys\r\n    }\r\n\r\n    onCheck = (checkedKeys) => {\r\n        // console.log(\"==61 checkedKeys\", checkedKeys);\r\n        // console.log(\"==62 state.当前role的permission\", this.state.currentRolePermissionKeys);\r\n        this.setState({currentRolePermissionKeys: checkedKeys})\r\n    }\r\n\r\n    getSecondPermissions = () => {\r\n        const secondPermissions = []\r\n\r\n        this.state.permissionList.map((firstPms) => {\r\n            // console.log(\"==74 当前一级菜单项：\",firstPms);\r\n            firstPms.children.map((secondPms) => {\r\n                return secondPermissions.push(secondPms)\r\n            })\r\n        })\r\n        return secondPermissions;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table\r\n                    dataSource={this.state.roleList}\r\n                    columns={this.state.columns}\r\n                    rowKey={(item) => item.roleId}\r\n                >\r\n                </Table>\r\n                <Modal title=\"分配权限\"\r\n                       visible={this.state.isModalVisible}\r\n                       onOk={this.handleOk}\r\n                       onCancel={this.handleCancel}>\r\n                    <Tree\r\n                        treeData={this.state.permissionList}\r\n                        checkable={true}\r\n                        checkedKeys={this.state.currentRolePermissionKeys}\r\n                        onCheck={this.onCheck}\r\n                        // checkStrictly={true}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\UserTagList\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\Share\\index.js",["431","432"],"import {Avatar, List, Space} from \"antd\";\r\nimport {EyeOutlined, LikeOutlined, MessageOutlined} from \"@ant-design/icons\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getShareByAssociation} from \"../../../../services/shareService\";\r\nimport {getAssociationImageUrl} from \"../../../../services/imageService\";\r\nimport {IMAGE_TYPE} from \"../../../../constants/type\";\r\nimport {USER_IMAGE_URL} from \"../../../../constants/image\";\r\n\r\nconst sharePageSize = 5\r\nexport default function Share(props) {\r\n\r\n    const [shareList, setShareList] = useState([])\r\n\r\n    useEffect(() => {\r\n        getShareByAssociation(props.associationId)\r\n            .then(res => {\r\n                const {data} = res.data\r\n                console.log(\"社团分享：\", data)\r\n                // 调整展示方式\r\n                const newData = data.map(item => {\r\n                    return {\r\n                        ...item,\r\n                        title: item.title,\r\n                        avatar: 'https://joeschmoe.io/api/v1/random',\r\n                        description: `来自 ${item.roleName} - ${item.name}, 发布时间： ${item.shareTime || '--/--'}`,\r\n                        content: item.shortDescription,\r\n                    }\r\n                })\r\n                setShareList(newData)\r\n            })\r\n    }, [])\r\n\r\n    const IconText = ({icon, text}) => (\r\n        <Space>\r\n            {React.createElement(icon)}\r\n            {text}\r\n        </Space>\r\n    );\r\n\r\n    // TODO 查头像\r\n    const getAvatarUrl = async (userId) => {\r\n        let image\r\n        await getAssociationImageUrl(IMAGE_TYPE.USER_AVATAR.value, userId).then(res => {\r\n            image = res.data.data\r\n        })\r\n        return image.url\r\n    }\r\n\r\n    return (\r\n        <List size=\"large\" itemLayout=\"vertical\"\r\n              dataSource={shareList}\r\n              pagination={{\r\n                  pageSize: sharePageSize,\r\n                  onChange: page => {\r\n                      console.log(page);\r\n                  },\r\n              }}\r\n              footer={\r\n                  <div>\r\n                      <b>高校社团管理系统-橘集</b> @2021\r\n                  </div>\r\n              }\r\n              renderItem={item => (\r\n                  <List.Item\r\n                      key={item.shareId}\r\n                      actions={[\r\n                          <IconText icon={EyeOutlined} text={item.view} key=\"viewNum\"/>,\r\n                          <IconText icon={LikeOutlined} text={item.thumbs} key=\"thumbsNum\"/>,\r\n                          <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\"/>,\r\n                      ]}\r\n                      extra={\r\n                          <img width={272} alt=\"logo\" src={USER_IMAGE_URL.SHARE_HEAD_PHOTO.url}/>\r\n                      }\r\n                  >\r\n                      <List.Item.Meta\r\n                          // avatar={<Avatar src={getAvatarUrl(item.userId)}/>}\r\n                          avatar={<Avatar src={USER_IMAGE_URL.DEFAULT.url}/>}\r\n                          title={\r\n                              <a href={`#/user/share/list/${item.shareId}`}>{item.title}</a>}\r\n                          description={item.description}\r\n                      />\r\n                      {item.content}\r\n                  </List.Item>\r\n              )}\r\n        />\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\BigEvent\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\DataView\\index.js",["433","434"],"import {Card, Statistic} from \"antd\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport * as echarts from \"echarts\";\r\nimport axios from \"axios\";\r\nimport {countAssociationGender, countAssociationRecruitment} from \"../../../../services/dataViewService\";\r\n\r\nexport default function DataView(props) {\r\n\r\n    const echartsContainerRef = useRef()\r\n    const echartsContainerRef2 = useRef()\r\n\r\n    useEffect(() => {\r\n        if (props.associationId) {\r\n            countAssociationGender(props.associationId).then(res => {\r\n                const countGenderResult = res.data.data\r\n                const genderColor = ['#ee6666', '#5470c6', '#fac858']\r\n                const setColorData = countGenderResult.map((item, index) => {\r\n                    return {\r\n                        ...item,\r\n                        itemStyle: {\r\n                            color: genderColor[index]\r\n                        }\r\n                    }\r\n                })\r\n                drawGenderPie(setColorData)\r\n            })\r\n        }\r\n        if (props.recruitmentId) {\r\n            countAssociationRecruitment(props.recruitmentId).then(res => {\r\n                // console.log('纳新情况统计：')\r\n                // console.log(res.data)\r\n                const countRecruitmentMap = res.data.data\r\n                drawRecruitmentRing(countRecruitmentMap)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const drawGenderPie = (countGenderResult) => {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        const myChart = echarts.init(echartsContainerRef.current);\r\n\r\n        const option = {\r\n            title: {\r\n                text: '男女生比例',\r\n                left: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Access From',\r\n                    type: 'pie',\r\n                    radius: '50%',\r\n                    data: countGenderResult,\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        option && myChart.setOption(option);\r\n    }\r\n\r\n    const drawRecruitmentRing = (countRecruitmentMap) => {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        const myChart2 = echarts.init(echartsContainerRef2.current);\r\n        const gaugeData = [\r\n            {\r\n                value: countRecruitmentMap.投递人数 * 100,\r\n                name: '投递占比',\r\n                title: {\r\n                    offsetCenter: ['0%', '-30%']\r\n                },\r\n                detail: {\r\n                    valueAnimation: true,\r\n                    offsetCenter: ['0%', '-15%']\r\n                }\r\n            },\r\n            {\r\n                value: countRecruitmentMap.录用人数 * 100,\r\n                name: '已录占比',\r\n                title: {\r\n                    offsetCenter: ['0%', '0%']\r\n                },\r\n                detail: {\r\n                    valueAnimation: true,\r\n                    offsetCenter: ['0%', '15%']\r\n                }\r\n            },\r\n            {\r\n                value: countRecruitmentMap.被拒人数 * 100,\r\n                name: '被拒占比',\r\n                title: {\r\n                    offsetCenter: ['0%', '30%']\r\n                },\r\n                detail: {\r\n                    valueAnimation: true,\r\n                    offsetCenter: ['0%', '45%']\r\n                }\r\n            }\r\n        ];\r\n\r\n        const option = {\r\n            title: {\r\n                text: '本次纳新情况',\r\n                left: 'center'\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'gauge',\r\n                    startAngle: 90,\r\n                    endAngle: -270,\r\n                    pointer: {\r\n                        show: false\r\n                    },\r\n                    progress: {\r\n                        show: true,\r\n                        overlap: false,\r\n                        roundCap: true,\r\n                        clip: false,\r\n                        itemStyle: {\r\n                            borderWidth: 1,\r\n                            borderColor: '#464646'\r\n                        }\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            width: 40\r\n                        }\r\n                    },\r\n                    splitLine: {\r\n                        show: false,\r\n                        distance: 0,\r\n                        length: 10\r\n                    },\r\n                    axisTick: {\r\n                        show: false\r\n                    },\r\n                    axisLabel: {\r\n                        show: false,\r\n                        distance: 50\r\n                    },\r\n                    data: gaugeData,\r\n                    title: {\r\n                        fontSize: 14\r\n                    },\r\n                    detail: {\r\n                        width: 50,\r\n                        height: 14,\r\n                        fontSize: 14,\r\n                        color: 'auto',\r\n                        borderColor: 'auto',\r\n                        borderRadius: 20,\r\n                        borderWidth: 1,\r\n                        formatter: '{value}%'\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n\r\n        option && myChart2.setOption(option);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                position: 'absolute',\r\n            }}>\r\n                <Card style={{width: 300}} hoverable>\r\n                    <Statistic\r\n                        title=\"社团总人数\"\r\n                        value=\"32\"\r\n                        style={{\r\n                            marginRight: 32,\r\n                            color: 'red',\r\n                        }}\r\n                    />\r\n                    <Statistic\r\n                        title=\"本次录用人数\"\r\n                        value=\"10\"\r\n                        style={{\r\n                            marginRight: 32,\r\n                            color: 'red'\r\n                        }}\r\n                    />\r\n                </Card>\r\n            </div>\r\n            <div ref={echartsContainerRef} style={{\r\n                width: '30%',\r\n                height: 400,\r\n                marginTop: 30,\r\n                marginLeft: 400,\r\n                display: 'inline-block',\r\n            }}></div>\r\n            <div ref={echartsContainerRef2} style={{\r\n                width: '30%',\r\n                height: 400,\r\n                marginTop: 30,\r\n                display: 'inline-block',\r\n            }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\AddAssociation\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\JoinApplication\\index.js",["435","436","437","438","439","440"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, Modal, Space, Table, Tooltip} from 'antd'\r\nimport {\r\n    CheckOutlined,\r\n    CloseOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined,\r\n    RollbackOutlined\r\n} from '@ant-design/icons';\r\nimport usePublish from \"../../../../../hooks/usePublish\";\r\nimport {ROLE_TYPE} from \"../../../../../constants/type\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function JoinAssociation() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [recruitmentList, setRecruitmentList] = useState()\r\n    const [applicationList,setApplicationList] = useState([])\r\n\r\n    useEffect(() => {\r\n        setApplicationList([])\r\n    })\r\n\r\n    const handleUpdateApplicationState = (applicationId)=>{\r\n\r\n    }\r\n\r\n    const renderOptions = (item) => {\r\n        let isSuperAdmin = false\r\n        const hasRoleList = userInfo.roleList\r\n        hasRoleList.map(role => {\r\n            if (role.roleName === ROLE_TYPE.SUPER_ADMIN.name) {\r\n                isSuperAdmin = true\r\n                return\r\n            }\r\n        })\r\n        return <Space>\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>撤销</Button>}\r\n\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<DeleteOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>删除</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" icon={<CheckOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>通过</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<CloseOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>拒绝</Button>}\r\n        </Space>\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '序号',\r\n            dataIndex: 'recruitmentId',\r\n            render(recruitmentId) {\r\n                return <b>{recruitmentId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '标题',\r\n            dataIndex: 'title',\r\n            render(title, item) {\r\n                return <Tooltip title=\"点击查看详情\">\r\n                    <a href={`#/manage/recruitment/list/${item.recruitmentId}`}\r\n                    >{title}</a>\r\n                </Tooltip>;\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case \"UNEXAMINE\":\r\n                        return <Badge status=\"warning\" text=\"未提交\"/>\r\n                    case \"EXAMINING\":\r\n                        return <Badge status=\"processing\" text=\"审核中\"/>\r\n                    case \"EXAMINE_PASS\":\r\n                        return <Badge status=\"success\" text=\"审核通过\"/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '纳新社团组织',\r\n            dataIndex: 'associationName',\r\n        },\r\n        {\r\n            title: '申请人',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        console.log(\"delete item\", item)\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                const newList = recruitmentList.filter(data => data.id !== item.id)\r\n                setRecruitmentList(newList)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={recruitmentList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 4\r\n                }}\r\n                rowKey={item => item.recruitmentId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n",["441","442"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\index.js",["443","444","445","446"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\RecruitmentDetail\\index.js",["447","448"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\applicationService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationDetail\\index.js",["449","450","451"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationList\\index.js",["452","453","454"],"import React, {useEffect, useRef, useState} from 'react'\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Cascader,\r\n    DatePicker,\r\n    Form,\r\n    Input,\r\n    message,\r\n    Modal,\r\n    Select,\r\n    Space,\r\n    Table,\r\n    TimePicker,\r\n    Tooltip\r\n} from 'antd'\r\nimport {RollbackOutlined} from '@ant-design/icons';\r\nimport {\r\n    getApplicationList,\r\n    updateApplicationInterview,\r\n    updateApplicationState\r\n} from \"../../../../../services/applicationService\";\r\nimport {ICON, OPTION_ICONS} from \"../../../../../constants/icon\";\r\nimport {APPLICATION_STATE} from \"../../../../../constants/state\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport qs from \"querystring\";\r\nimport ApplicationCalendar from \"../../../../components/Calendar\";\r\nimport {getInterviewAddress} from \"../../../../../services/treeService\";\r\nimport {getUserByAssociationId} from \"../../../../../services/userService\";\r\n\r\nconst {confirm} = Modal\r\nconst {Option} = Select\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 20,\r\n    },\r\n};\r\nexport default function ApplicationList() {\r\n\r\n    // localStorage\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    // hooks\r\n    const history = useHistory()\r\n    const [applicationList, setApplicationList] = useState([])\r\n    const arrangeInterviewFormRef = useRef(null)\r\n    const [arrangeInterviewModalVisible, setArrangeInterviewModalVisible] = useState(false)\r\n    // 当前安排面试的申请项\r\n    const [arrangingItem, setArrangingItem] = useState({})\r\n    // 当前选中的面试联系人\r\n    const [arrangingContacterId, setArrangingContacterId] = useState('')\r\n    const [interviewAddress, setInterviewAddress] = useState([])\r\n    const [memberList, setMemberList] = useState([])\r\n\r\n    // constans\r\n\r\n    // life cycle\r\n    useEffect(() => {\r\n        getInterviewAddress().then(res => {\r\n            const {data} = res.data\r\n            // console.log('面试地点data')\r\n            // console.log(data)\r\n            setInterviewAddress(data)\r\n        })\r\n        refresh()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('当前操作项:')\r\n        console.log(arrangingItem)\r\n        if (arrangingItem.associationId) {\r\n            getUserByAssociationId(arrangingItem.associationId).then(res => {\r\n                setMemberList(res.data.data)\r\n            })\r\n        }\r\n\r\n    }, [arrangingItem])\r\n\r\n    // 刷新申请列表\r\n    const refresh = () => {\r\n        getApplicationList(userInfo.manageAssociationKeys).then(res => {\r\n            const {data} = res.data\r\n            console.log('申请list')\r\n            console.log(data)\r\n            setApplicationList(data)\r\n        })\r\n    }\r\n\r\n    const handleApplicationUpdate = (applicationId, state) => {\r\n        updateApplicationState(qs.stringify({applicationId, state})).then(() => {\r\n            refresh()\r\n            message.success('操作成功！')\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '编号',\r\n            dataIndex: 'applicationId',\r\n            render(applicationId) {\r\n                return <b>{applicationId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '申请人',\r\n            dataIndex: 'name',\r\n            render(name, item) {\r\n                return <Tooltip title=\"点击查看详情\">\r\n                    <a href={`#/manage/review/joinAssociation/${item.applicationId}/1`}\r\n                    >{name}</a>\r\n                </Tooltip>;\r\n            }\r\n        },\r\n        {\r\n            title: '意向部门',\r\n            dataIndex: 'departmentName',\r\n            render(departmentName, item) {\r\n                return (item.associationName + ' - ' + departmentName)\r\n            }\r\n        },\r\n        {\r\n            title: '申请时间',\r\n            dataIndex: 'applicationTime',\r\n            render(applicationTime) {\r\n                return (applicationTime)\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case APPLICATION_STATE.UN_COMMIT.value:\r\n                        return <Badge status=\"warning\" text={APPLICATION_STATE.UN_COMMIT.name}/>\r\n                    case APPLICATION_STATE.APPLYING.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.APPLYING.name}/>\r\n                    case APPLICATION_STATE.INTERVIEW_INVITING.value:\r\n                        return <Badge status=\"success\" text={APPLICATION_STATE.INTERVIEW_INVITING.name}/>\r\n                    case APPLICATION_STATE.UN_INTERVIEW.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.UN_INTERVIEW.name}/>\r\n                    case APPLICATION_STATE.INTERVIEW_PASS.value:\r\n                        return <Badge status=\"success\" text={APPLICATION_STATE.INTERVIEW_PASS.name}/>\r\n                    case APPLICATION_STATE.APPLY_REFUSE.value:\r\n                        return <Badge status=\"error\" text={APPLICATION_STATE.APPLY_REFUSE.name}/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => {\r\n                return <Space>\r\n                    {(item.state === APPLICATION_STATE.APPLYING.value) &&\r\n                    <Button size=\"small\" icon={OPTION_ICONS.ARRANGE}\r\n                            onClick={() => {\r\n                                setArrangingItem({...item})\r\n                                setArrangeInterviewModalVisible(true)\r\n                            }}>面试</Button>\r\n                    }\r\n                    {(item.state === APPLICATION_STATE.UN_INTERVIEW.value) &&\r\n                    <Button size=\"small\" type='primary' icon={OPTION_ICONS.ARRANGE}\r\n                            onClick={() => {\r\n                                Modal.confirm({\r\n                                    title: `您确认要录用【${item.name}】为【${item.departmentName}】的一员吗？`,\r\n                                    onOk: () => {\r\n                                        handleApplicationUpdate(item.applicationId, APPLICATION_STATE.INTERVIEW_PASS.value)\r\n                                    }\r\n                                })\r\n                            }}>录用</Button>\r\n                    }\r\n                    {(item.state === APPLICATION_STATE.UN_INTERVIEW.value || item.state === APPLICATION_STATE.APPLYING.value) &&\r\n                    <Button size=\"small\" danger icon={OPTION_ICONS.REFUSE}\r\n                            onClick={() => {\r\n                                Modal.confirm({\r\n                                    title: `您确认要拒绝【${item.name}】的入团申请吗？`,\r\n                                    onOk: () => {\r\n                                        // TODO 回复拒绝申请的理由\r\n                                        handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLY_REFUSE.value)\r\n                                    }\r\n                                })\r\n                            }}>拒绝</Button>\r\n                    }\r\n                    {item.state === APPLICATION_STATE.INTERVIEW_INVITING.value &&\r\n                    <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                            onClick={() => {\r\n                                Modal.confirm({\r\n                                    title: '确认撤销面试邀请吗？',\r\n                                    onOk: () => {\r\n                                        handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLYING.value)\r\n                                    }\r\n                                })\r\n                            }}>撤销</Button>\r\n                    }\r\n                </Space>\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Button type='primary'\r\n                    onClick={() => {\r\n                        Modal.info({\r\n                            title: '面试安排日历',\r\n                            width: 1500,\r\n                            icon: ICON.calendar,\r\n                            content: <ApplicationCalendar/>\r\n                        })\r\n                    }}\r\n            >查看面试安排日历</Button>\r\n            <Table\r\n                dataSource={applicationList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 6\r\n                }}\r\n                rowKey={item => item.applicationId}\r\n            />\r\n\r\n\r\n            {/* === 面试安排模态框 === */}\r\n            {arrangeInterviewModalVisible\r\n            && <Modal title=\"面试安排\" height={350}\r\n                      visible={arrangeInterviewModalVisible}\r\n                      onCancel={() => {\r\n                          setArrangingItem({})\r\n                          setArrangeInterviewModalVisible(false)\r\n                      }}\r\n                      onOk={() => {\r\n                          arrangeInterviewFormRef.current.validateFields()\r\n                              .then(value => {\r\n                                  console.log('面试表单信息：')\r\n                                  const data = {\r\n                                      ...value,\r\n                                      applicationId: arrangingItem.applicationId,\r\n                                      departmentId: arrangingItem.departmentId,\r\n                                      contacterId: arrangingContacterId,\r\n                                      interviewAddress: value.interviewAddress.join('-'),\r\n                                  }\r\n                                  updateApplicationInterview(data).then(() => {\r\n                                      refresh()\r\n                                      setArrangeInterviewModalVisible(false)\r\n                                  })\r\n                              })\r\n                      }}>\r\n                <Form {...layout} name=\"arrangeInterviewModal\" ref={arrangeInterviewFormRef}>\r\n                    <Form.Item name='interviewDate' label=\"面试日期\"\r\n                               rules={[{required: true, message: '请选择面试日期！'}]}\r\n                    >\r\n                        <DatePicker/>\r\n                    </Form.Item>\r\n                    <Form.Item name='interviewTime' label=\"面试时间\"\r\n                               rules={[{required: true, message: '请选择面试时间！'}]}>\r\n                        <TimePicker minuteStep={15} secondStep={10}/>\r\n                    </Form.Item>\r\n                    <Form.Item name='interviewAddress' label=\"面试地点\"\r\n                               rules={[{required: true, message: '请选择面试地点'}]}\r\n                               initialValue={['集大本部', '美岭楼', '美岭201']}\r\n                    >\r\n                        {\r\n                            interviewAddress.length > 0\r\n                            && <Cascader options={interviewAddress}/>\r\n                        }\r\n                    </Form.Item>\r\n                    <Form.Item name='intentionDepartment' label=\"意向部门\"\r\n                               initialValue={arrangingItem.departmentName}>\r\n                        <Input disabled={true}/>\r\n                    </Form.Item>\r\n                    <Form.Item name='contacterName' label=\"联系人\"\r\n                               rules={[{required: true, message: '请选择联系人'}]}>\r\n                        <Select onChange={(value) => {\r\n                            console.log('联系人ID：')\r\n                            console.log(value)\r\n                            setArrangingContacterId(value)\r\n                        }}>\r\n                            {memberList.map(user => {\r\n                                return <Option value={user.userId}>{user.name}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item name='contacterPhone' label=\"联系方式\">\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item name='description' label=\"备注\">\r\n                        <Input.TextArea/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AccountManage\\Resume\\index.jsx",["455","456","457","458","459","460"],"import React, {useEffect, useState} from 'react'\r\nimport {\r\n    Anchor,\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    Cascader,\r\n    Col,\r\n    DatePicker,\r\n    Descriptions,\r\n    Form,\r\n    Image,\r\n    Input, message, Modal,\r\n    Row,\r\n    Select,\r\n    Switch,\r\n    Tooltip, Upload\r\n} from 'antd';\r\nimport {EditOutlined, PlusOutlined, SettingOutlined} from '@ant-design/icons';\r\nimport {getUserById} from \"../../../../../services/db\";\r\nimport {getClassTree} from \"../../../../../services/treeService\";\r\nimport {USER_IMAGE_URL} from \"../../../../../constants/image\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {updateResume} from \"../../../../../services/userService\";\r\nimport {IMAGE_TYPE} from \"../../../../../constants/type\";\r\nimport {deleteImage, getAssociationImageUrl} from \"../../../../../services/imageService\";\r\nimport {OPTION_ICONS} from \"../../../../../constants/icon\";\r\n\r\n// antd组件结构\r\nconst {TextArea} = Input;\r\nconst {Link} = Anchor;\r\nconst {Meta} = Card;\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nexport default function Resume() {\r\n\r\n    const userSession = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [userInfo, setUserInfo] = useState()\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [classTreeData, setClassTreeData] = useState([])\r\n    const [collegeMajorClass, setCollegeMajorClass] = useState([])\r\n    const [userForm] = Form.useForm()\r\n\r\n    // 图片上传\r\n    const [previewVisible, setPreviewVisible] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState('')\r\n    const [previewTitle, setPreviewTitle] = useState('')\r\n    const [fileList, setFileList] = useState([])\r\n\r\n    const refreshResume = () => {\r\n        const {userId} = userSession\r\n        if (userId) {\r\n            getUserById(userId).then(res => {\r\n                const {data} = res.data\r\n                // console.log('用户信息：')\r\n                // console.log(data)\r\n                setUserInfo(data)\r\n            })\r\n            getAssociationImageUrl(IMAGE_TYPE.USER_ID_PHOTO.value, userId).then(res => {\r\n                const images = res.data.data\r\n                // console.log(\"images:\")\r\n                // console.log(images)\r\n                setFileList(images)\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshResume()\r\n        getClassTree().then(res => {\r\n            setClassTreeData(res.data.data)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const format2Array = (cascaderClass) => {\r\n        const fomattedArr = []\r\n        cascaderClass.split(\"/\").map(item => {\r\n            fomattedArr.push(item)\r\n        })\r\n        // console.log('fomattedArr')\r\n        // console.log(fomattedArr)\r\n        return fomattedArr\r\n    }\r\n\r\n    // 预览图片\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview)\r\n        setPreviewVisible(true)\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n    };\r\n\r\n    // 控制上传change\r\n    const handleChange = ({file, fileList}) => {\r\n        const changeAction = file.status\r\n        setFileList(fileList)\r\n        switch (changeAction) {\r\n            case 'done':\r\n                message.success(\"上传成功！\")\r\n                break\r\n            case 'removed':\r\n                // TODO 删除首页图片\r\n                deleteImage(file.uid).then(() => {\r\n                    message.success(\"删除成功！\")\r\n                })\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Row>\r\n            {/* ============== 简历展示区 ==================== */}\r\n            <Col span={18} style={{\r\n                borderRight: '1px solid #bfbfbf'\r\n            }}>\r\n                {userInfo &&\r\n                <Form form={userForm}>\r\n                    <Row>\r\n                        <Col span={18}>\r\n                            <Descriptions column={7} bordered={true} size={'small'}>\r\n                                <Descriptions.Item label=\"姓名\" span={3}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name='name' rules={[{required: true, message: '请输入姓名！'}]}>\r\n                                            <Input defaultValue={userInfo.name}/>\r\n                                        </Form.Item>\r\n                                        : userInfo.name}\r\n                                </Descriptions.Item>\r\n                                {/*学号不可修改*/}\r\n                                <Descriptions.Item label=\"学号\" span={4}>\r\n                                    {userInfo.userId}\r\n                                </Descriptions.Item>\r\n                                {/*树形选择器。学院、专业、班级*/}\r\n                                <Descriptions.Item label=\"专业班级\" span={7}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name='collegeMajorClass' rules={[{required: true}]}\r\n                                                     initialValue={format2Array(userInfo.collegeMajorClass)}>\r\n                                            <Cascader options={classTreeData} placeholder={\"请选择专业班级\"}\r\n                                                      style={{\r\n                                                          width: '100%',\r\n                                                      }}\r\n                                                      onChange={(value) => {\r\n                                                          // console.log('级联value')\r\n                                                          // console.log(value)\r\n                                                          setCollegeMajorClass(value)\r\n                                                      }}\r\n                                            />\r\n                                        </Form.Item>\r\n                                        : `${userInfo.collegeMajorClass}`\r\n                                    }\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"联系方式\" span={3}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name={'phone'}\r\n                                                     rules={[{required: true}]}>\r\n                                            <Input defaultValue={userInfo?.phone}/>\r\n                                        </Form.Item>\r\n                                        : userInfo?.phone\r\n                                    }\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"邮箱\" span={4}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name={'email'}\r\n                                                     rules={[{required: true}]}>\r\n                                            <Input defaultValue={userInfo?.email}/>\r\n                                        </Form.Item>\r\n                                        : userInfo.email\r\n                                    }\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"微信\" span={3}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name={'wechat'} rules={[{required: true}]}>\r\n                                            <Input defaultValue={userInfo?.wechat}/>\r\n                                        </Form.Item>\r\n                                        : userInfo.wechat}\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"QQ\" span={3}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name={'qq'}>\r\n                                            <Input defaultValue={userInfo?.qq}/>\r\n                                        </Form.Item>\r\n                                        : userInfo.qq}\r\n                                </Descriptions.Item>\r\n                            </Descriptions>\r\n                        </Col>\r\n                        {/* == 证件照 == */}\r\n                        <Col span={6}>\r\n                            {(isEdit || !fileList[0] || !fileList[0].url)\r\n                                ? <Upload listType=\"picture-card\"\r\n                                          action={`/association/uploadImage/${IMAGE_TYPE.USER_ID_PHOTO.value}/${userInfo.userId}`}\r\n                                          name='image'\r\n                                          fileList={fileList}\r\n                                          onPreview={handlePreview}\r\n                                          onChange={handleChange}\r\n                                >\r\n                                    {/* === 只允许上传5张图片 === */}\r\n                                    {fileList.length < 1\r\n                                    && <div>\r\n                                        <PlusOutlined/>\r\n                                        <div style={{marginTop: 8}}>上传图片</div>\r\n                                    </div>}\r\n                                </Upload>\r\n                                : <Image width={145} height={153} src={fileList[0].url}/>}\r\n                        </Col>\r\n                    </Row>\r\n                    {/* ====== 描述信息 ======  */}\r\n                    <Descriptions bordered={true} column={24} size={'small'}>\r\n                        <Descriptions.Item label=\"生日\" span={8}>\r\n                            {isEdit\r\n                                ?\r\n                                <Form.Item name='birthday' initialValue={moment(`${userInfo.birthday}`, 'YYYY-MM-DD')}>\r\n                                    <DatePicker locale bordered={false} placeholder=\"请选择生日\"/>\r\n                                </Form.Item>\r\n                                : `${userInfo.birthday}`}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"民族\" span={8}>\r\n                            {isEdit\r\n                                ? <Form.Item name='nation'>\r\n                                    <Input defaultValue={userInfo.nation}/>\r\n                                </Form.Item>\r\n                                : userInfo.nation}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"性别\" span={8}>\r\n                            {isEdit\r\n                                ? <Form.Item name={'gender'}>\r\n                                    <Input defaultValue={userInfo.gender}/>\r\n                                </Form.Item>\r\n                                : userInfo.gender}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"兴趣爱好\" span={24}>\r\n                            <Form.Item name={'like'} initialValue={userInfo.selfLike}>\r\n                                <TextArea rows={6} disabled={!isEdit} maxLength={150}/>\r\n                            </Form.Item>\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"自我评价\" span={24}>\r\n                            <Form.Item name={'selfProfile'} initialValue={userInfo.selfProfile}>\r\n                                <TextArea rows={6} disabled={!isEdit} maxLength={150}/>\r\n                            </Form.Item>\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </Form>\r\n                }\r\n            </Col>\r\n\r\n            {/* ============================ 右侧区域 ============================*/}\r\n            <Col span={5} style={{\r\n                marginLeft: 10,\r\n            }}>\r\n                <Row>\r\n                    <Card style={{width: 298}}\r\n                          actions={[\r\n                              <Tooltip placement=\"bottom\" title='点击上传头像'>\r\n                                  {OPTION_ICONS.AVATAR}\r\n                              </Tooltip>,\r\n                              <Tooltip placement=\"bottom\" title='点击修改个签'>\r\n                                  <EditOutlined key=\"edit\"/>\r\n                              </Tooltip>,\r\n                          ]}\r\n                    >\r\n                        <Meta avatar={<Avatar src={USER_IMAGE_URL.DEFAULT.url}/>}\r\n                              title={userSession.name}\r\n                              description={userSession.personalSignature || '该用户很懒，没有个性签名~'}\r\n                        />\r\n                    </Card>\r\n                </Row>\r\n                {/* == TODO 锚点效果 === */}\r\n                <Row style={{\r\n                    marginTop: 20,\r\n                }}>\r\n                    <Anchor>\r\n                        <b>简历目录</b>\r\n                        <Link href=\"#components-anchor-demo-basic\" title=\"个人信息\"/>\r\n                        <Link href=\"#components-anchor-demo-static\" title=\"自我评价\">\r\n                            {/*<Link href=\"#Anchor-Props\" title=\"沟通能力\"/>*/}\r\n                            {/*<Link href=\"#Link-Props\" title=\"协作能力\"/>*/}\r\n                            {/*<Link href=\"#Link-Props\" title=\"表达能力\"/>*/}\r\n                            {/*<Link href=\"#Link-Props\" title=\"抗压能力\"/>*/}\r\n                        </Link>\r\n                        <Link href=\"#components-anchor-demo-static\" title=\"个性签名\"/>\r\n                    </Anchor>\r\n                </Row>\r\n                {/* ======= 简历编辑 ======= */}\r\n                <Row align={24} gutter={[0, 15]} style={{marginTop: 30}}>\r\n                    <b>简历编辑</b>\r\n                    {userInfo\r\n                    && <Col span={24}>\r\n                        <Switch defaultChecked={userInfo.canView === 0}\r\n                                unCheckedChildren={'对他人可见'}\r\n                                checkedChildren={'对他人隐藏'}\r\n                                onChange={(value) => {\r\n                                    updateResume({canView: value ? 0 : 1, userId: userInfo.userId}).then(() => {\r\n                                        refreshResume()\r\n                                        message.success(\"操作成功！\")\r\n                                    })\r\n                                }}\r\n                        />\r\n                    </Col>\r\n                    }\r\n                    <Col span={24}>\r\n                        <Switch checked={isEdit}\r\n                                unCheckedChildren={'浏览简历'}\r\n                                checkedChildren={'编辑简历'}\r\n                                onChange={() => {\r\n                                    setIsEdit(!isEdit)\r\n                                }}\r\n                        />\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        {isEdit\r\n                            ? <Button size='small' type='primary'\r\n                                      onClick={() => {\r\n                                          setIsEdit(false)\r\n                                          userForm.validateFields().then(value => {\r\n                                              const formattedData = {\r\n                                                  ...value,\r\n                                                  userId: userInfo.userId,\r\n                                                  className: collegeMajorClass.join(\"/\")\r\n                                              }\r\n                                              // console.log('formattedData：')\r\n                                              // console.log(formattedData)\r\n                                              updateResume(formattedData).then(() => {\r\n                                                  refreshResume()\r\n                                                  message.success(\"更新成功！\")\r\n                                              })\r\n                                          })\r\n                                      }}>\r\n                                确认修改\r\n                            </Button>\r\n                            : <Button size='small'/>}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n        {/* ====== 图片预览 Modal ====== */}\r\n        <Modal title={previewTitle} visible={previewVisible}\r\n               footer={null}\r\n               onCancel={() => {\r\n                   setPreviewVisible(false)\r\n               }}\r\n        >\r\n            <img alt=\"example\" style={{width: '100%'}} src={previewImage}/>\r\n        </Modal>\r\n    </>\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\PickTag\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ApplicationManage\\index.js",["461","462"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, message, Modal, Space, Table} from 'antd'\r\nimport {RollbackOutlined} from '@ant-design/icons';\r\nimport {getApplicationByUserId, updateApplicationState} from \"../../../../services/applicationService\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {APPLICATION_STATE} from '../../../../constants/state'\r\nimport qs from \"querystring\";\r\nimport {OPTION_ICONS} from \"../../../../constants/icon\";\r\nimport ViewInterview from \"../../../components/ViewInterview\";\r\n\r\nexport default function ApplicationManage() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const history = useHistory()\r\n    const [applicationList, setApplicationList] = useState([])\r\n\r\n    const refreshApplication = () => {\r\n        getApplicationByUserId(userInfo.userId).then(res => {\r\n            const {data} = res.data\r\n            setApplicationList(data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshApplication()\r\n    }, [])\r\n\r\n    const handleApplicationUpdate = (applicationId, state) => {\r\n        updateApplicationState(qs.stringify({applicationId, state}))\r\n            .then(() => {\r\n                refreshApplication()\r\n                message.success('操作成功！')\r\n            })\r\n    }\r\n\r\n    const renderOptions = (item) => {\r\n        return <Space>\r\n            <Button size=\"small\" icon={OPTION_ICONS.VIEW}\r\n                    onClick={() => {\r\n                        history.push(`/manage/review/joinAssociation/${item.applicationId}/0`)\r\n                    }}\r\n            >\r\n                查看\r\n            </Button>\r\n            {item.state === APPLICATION_STATE.INTERVIEW_PASS.value &&\r\n            <Button size=\"small\" type='primary' icon={OPTION_ICONS.ACCEPT}\r\n                    onClick={() =>\r\n                        Modal.confirm({\r\n                            title: `您确认加入【${item.associationName}-${item.departmentName}】吗？`,\r\n                            onOk: () => {\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.CONFIRM.value)\r\n                            }\r\n                        })\r\n                    }>确认加入</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.APPLYING.value &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => {\r\n                        Modal.confirm({\r\n                            title: '您确认要撤销申请吗？',\r\n                            onOk: () => {\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.UN_COMMIT.value)\r\n                            }\r\n                        })\r\n                    }}>撤销</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.UN_COMMIT.value &&\r\n            <Button size=\"small\" icon={OPTION_ICONS.COMMIT}\r\n                    onClick={() => handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLYING.value)}>提交</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.INTERVIEW_INVITING.value &&\r\n            <Button size=\"small\" type='primary' icon={OPTION_ICONS.ACCEPT}\r\n                    onClick={() => {\r\n                        Modal.confirm({\r\n                            title: '接受面试',\r\n                            width: 698,\r\n                            content: <ViewInterview application={item}/>,\r\n                            onOk: () => {\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.UN_INTERVIEW.value)\r\n                            },\r\n                            okText: '确认接受',\r\n                            cancelText: '取消操作',\r\n                        })\r\n                    }}>接受</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.INTERVIEW_INVITING.value &&\r\n            <Button size=\"small\" danger icon={OPTION_ICONS.REFUSE}\r\n                    onClick={() =>\r\n                        Modal.confirm({\r\n                            title: '拒绝面试邀请无法撤销，确认拒绝吗？',\r\n                            onOk: () => {\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.REFUSE_INVITING.value)\r\n                            }\r\n                        })\r\n                    }>拒绝</Button>\r\n            }\r\n            {!item.state &&\r\n            <Button size=\"small\" danger icon={OPTION_ICONS.DELETE}\r\n                    onClick={() => handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLYING.value)}>删除</Button>\r\n            }\r\n        </Space>\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '编号',\r\n            dataIndex: 'applicationId',\r\n            render(applicationId) {\r\n                return <b>{applicationId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '社团及意向部门',\r\n            dataIndex: 'departmentName',\r\n            render(departmentName, item) {\r\n                return (\r\n                    <>\r\n                        <a onClick={() => {\r\n                            history.push(`/user/associationDetail/${item.associationId}`)\r\n                        }}>{item.associationName}</a> —— {departmentName || '未选择部门'}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '申请时间',\r\n            dataIndex: 'applicationTime',\r\n            render(applicationTime) {\r\n                return (applicationTime)\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case APPLICATION_STATE.UN_COMMIT.value:\r\n                        return <Badge status=\"warning\" text={APPLICATION_STATE.UN_COMMIT.name}/>\r\n                    case APPLICATION_STATE.APPLYING.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.APPLYING.name}/>\r\n                    case APPLICATION_STATE.INTERVIEW_INVITING.value:\r\n                        return <Badge status=\"success\" text={APPLICATION_STATE.INTERVIEW_INVITING.name}/>\r\n                    case APPLICATION_STATE.REFUSE_INVITING.value:\r\n                        return <Badge status=\"warning\" text={APPLICATION_STATE.REFUSE_INVITING.name}/>\r\n                    case APPLICATION_STATE.UN_INTERVIEW.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.UN_INTERVIEW.name}/>\r\n                    case APPLICATION_STATE.INTERVIEW_PASS.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.INTERVIEW_PASS.name}/>\r\n                    case APPLICATION_STATE.CONFIRM.value:\r\n                        return <Badge status=\"success\" text={APPLICATION_STATE.CONFIRM.name}/>\r\n                    case APPLICATION_STATE.APPLY_REFUSE.value:\r\n                        return <Badge status=\"error\" text={APPLICATION_STATE.APPLY_REFUSE.name}/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={applicationList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 6\r\n                }}\r\n                rowKey={item => item.shareId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\icon.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\Calendar\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\index.js",["463","464","465","466","467","468","469","470","471"],"import React, {useEffect, useState} from 'react'\r\nimport {\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Descriptions,\r\n    Form,\r\n    Input,\r\n    message,\r\n    Modal,\r\n    PageHeader,\r\n    Row,\r\n    Select,\r\n    Tabs,\r\n    Upload\r\n} from 'antd';\r\nimport Icon, {EditOutlined, PlusCircleOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {checkAssociationExist, getAssociationDetail, getUserById} from \"../../../../../services/db\";\r\nimport {ICON, OPTION_ICONS} from \"../../../../../constants/icon\";\r\nimport {ReactComponent as DeleteIcon} from \"../../../../../icons/delete.svg\";\r\nimport {deleteDepartment} from \"../../../../../services/departmentService\";\r\nimport UserList from \"./UserList\";\r\nimport {IMAGE_TYPE} from \"../../../../../constants/type\";\r\nimport {deleteImage, getAssociationImageUrl} from \"../../../../../services/imageService\";\r\nimport {JS} from \"json-server/lib/cli/utils/is\";\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nexport default function AssociationDetail(props) {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n    const history = useHistory()\r\n    const [association, setAssociation] = useState()\r\n\r\n    // 预览图片 Modal、图片、标题\r\n    const [previewVisible, setPreviewVisible] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState('')\r\n    const [previewTitle, setPreviewTitle] = useState('')\r\n    const [fileList, setFileList] = useState([])\r\n\r\n    const refreshAssociationData = () => {\r\n        getAssociationDetail(props.match.params.associationId).then(res => {\r\n            // console.log(\"社团详情：\")\r\n            // console.log(res.data.data)\r\n            setAssociation(res.data.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshAssociationData()\r\n        if (association) {\r\n            const type = IMAGE_TYPE.ASSOCIATION_HOMEPAGE.value\r\n            const ownerId = association.associationId + ''\r\n            getAssociationImageUrl(type, ownerId).then(res => {\r\n                const images = res.data.data\r\n                // console.log('images')\r\n                // console.log(images)\r\n                setFileList(images)\r\n            })\r\n        }\r\n    }, [association?.associationId])\r\n\r\n\r\n    // 预览图片\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview)\r\n        setPreviewVisible(true)\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n    };\r\n\r\n    // 控制上传change\r\n    const handleChange = ({file, fileList}) => {\r\n        const changeAction = file.status\r\n        setFileList(fileList)\r\n        switch (changeAction) {\r\n            case 'done':\r\n                message.success(\"上传成功！\")\r\n                break\r\n            case 'removed':\r\n                // TODO 删除首页图片\r\n                deleteImage(file.uid).then(() => {\r\n                    message.success(\"删除成功！\")\r\n                })\r\n        }\r\n    };\r\n\r\n    const checkAssociationManager = ()=>{\r\n        return userInfo.manageAssociationKeys.includes(association.associationId)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* === 页头 === */}\r\n            {association &&\r\n            <Row>\r\n                <PageHeader ghost={false}\r\n                            title=\"社团详情\"\r\n                            subTitle=\"对社团基本信息进行管理\"\r\n                            onBack={() => history.goBack()}>\r\n                    <Descriptions size=\"small\" column={3}>\r\n                        <Descriptions.Item label=\"社团名称\">{association.associationName}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"隶属单位\">{association.adminUnit}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"创建时间\">{association.createTime}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"社团个签\">{association.info}</Descriptions.Item>\r\n                    </Descriptions>\r\n                </PageHeader>\r\n            </Row>\r\n            }\r\n            <Tabs defaultActiveKey=\"structure\">\r\n                {/* ================= 社团经历分享  ====================-  */}\r\n                <TabPane tab=\"社团组织\" key=\"structure\">\r\n                    <Row gutter={[24, 24]} style={{marginTop: 10}}>\r\n                        {/* =============== 左侧部门列表 =============== */}\r\n                        <Col span={6}>\r\n                            <Row gutter={[0, 24]}>\r\n                                <Col span={24}>\r\n                                    <Card bordered hoverable style={{height: 195}}\r\n                                          onClick={() => {\r\n                                              if (!checkAssociationManager()) {\r\n                                                  message.error('抱歉，您没有对应权限！')\r\n                                                  return\r\n                                              }\r\n                                              Modal.info({\r\n                                                  title: '新增部门',\r\n                                                  content: <Form name=\"addAssociationForm\"\r\n                                                                 labelCol={{\r\n                                                                     span: 6,\r\n                                                                 }}\r\n                                                                 wrapperCol={{\r\n                                                                     span: 16,\r\n                                                                 }}\r\n                                                                 autoComplete=\"off\"\r\n                                                                 style={{\r\n                                                                     marginTop: 20\r\n                                                                 }}\r\n                                                  >\r\n                                                      <Form.Item label=\"部门名称\" name=\"departmentName\"\r\n                                                                 rules={[{required: true, message: '请输入部门名称！',},]}>\r\n                                                          <Input/>\r\n                                                      </Form.Item>\r\n                                                  </Form>,\r\n                                                  onOk: () => {\r\n                                                      message.success('操作成功！')\r\n                                                  }\r\n                                              })\r\n                                          }}\r\n                                    >\r\n                                        <div style={{\r\n                                            height: '50%',\r\n                                            marginTop: '20%',\r\n                                            marginLeft: '25%',\r\n                                            fontSize: 20,\r\n                                            color: 'rgb(176,177,185)'\r\n                                        }}>\r\n                                            <PlusCircleOutlined/>\r\n                                            <span style={{marginLeft: 10}}>新增部门</span>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Col>\r\n                                {association?.departments.length > 0 &&\r\n                                association?.departments.map(dpt => {\r\n                                    return <Col span={24}>\r\n                                        {/* ======== TODO 卡片与右侧成员列表联动 ========*/}\r\n                                        <Card title={\r\n                                            <>\r\n                                                {ICON.department}\r\n                                                <span style={{\r\n                                                    marginLeft: 10,\r\n                                                    marginBottom: 5,\r\n                                                    fontSize: 20,\r\n                                                    fontWeight: 1000,\r\n                                                }}\r\n                                                >{dpt.departmentName}</span>\r\n                                            </>\r\n                                        } bordered hoverable\r\n                                              style={{height: 195,}}\r\n                                              actions={[\r\n                                                  <EditOutlined key=\"edit\"/>,\r\n                                                  <Icon component={DeleteIcon} style={{fontSize: 17}}\r\n                                                        onClick={() => {\r\n                                                            Modal.confirm({\r\n                                                                title: `您确认要删除【${dpt.departmentName}】吗？`,\r\n                                                                onOk: () => {\r\n                                                                    deleteDepartment(dpt.departmentId).then(() => {\r\n                                                                        refreshAssociationData()\r\n                                                                        message.success('删除成功！')\r\n                                                                    })\r\n                                                                }\r\n                                                            })\r\n                                                        }}\r\n                                                  />,\r\n                                              ]}>\r\n                                            <div style={{height: 40}}>\r\n                                                主要职责：{dpt.job}\r\n                                            </div>\r\n                                        </Card>\r\n                                    </Col>\r\n                                })\r\n                                }\r\n                            </Row>\r\n                        </Col>\r\n                        {/* =============== 右侧部门列表 =============== */}\r\n                        <Col span={18}>\r\n                            {association\r\n                            && <UserList\r\n                                associationId={association.associationId}\r\n                                departmentId={1}\r\n                            ></UserList>}\r\n                        </Col>\r\n                    </Row>\r\n                </TabPane>\r\n                <TabPane tab=\"使用橘集\" key=\"useUacs\">\r\n                    {/* 上传图片 */}\r\n                    <div style={{\r\n                        fontSize: 17,\r\n                        fontWeight: 900,\r\n                    }}>\r\n                        系统首页社团头图\r\n                    </div>\r\n                    <Upload listType=\"picture-card\"\r\n                            action={`/association/uploadImage/${IMAGE_TYPE.ASSOCIATION_HOMEPAGE.value}/${association?.associationId + ''}`}\r\n                            name='image'\r\n                            fileList={fileList}\r\n                            onPreview={handlePreview}\r\n                            onChange={handleChange}\r\n                    >\r\n                        {/* === 只允许上传5张图片 === */}\r\n                        {fileList.length < 5\r\n                        && <div>\r\n                            <PlusOutlined/>\r\n                            <div style={{marginTop: 8}}>上传图片</div>\r\n                        </div>}\r\n                    </Upload>\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            {/* ====== 图片预览 Modal ====== */}\r\n            <Modal title={previewTitle} visible={previewVisible}\r\n                   footer={null}\r\n                   onCancel={() => {\r\n                       setPreviewVisible(false)\r\n                   }}\r\n            >\r\n                <img alt=\"example\" style={{width: '100%'}} src={previewImage}/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\treeService.js",["472"],"import axios from \"axios\";\r\nimport {TREE_NODE_TYPE} from \"../constants/type\";\r\n\r\nexport function getInterviewAddress() {\r\n    return axios.get('/association/getInterviewAddress')\r\n}\r\n\r\n\r\nexport function getClassTree() {\r\n    return axios.get('/association/getClassTree')\r\n}\r\n\r\nexport function addTreeNode(data) {\r\n    return axios.post('/association/addTreeNode', data)\r\n}\r\n\r\nexport function deleteTreeNode(treeId) {\r\n    return axios.delete(`/association/deleteTreeNode/${treeId}`)\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\InterviewAddress\\index.js",["473","474","475"],"import {Table} from 'antd';\r\nimport {useEffect, useState} from \"react\";\r\nimport {getInterviewAddress} from \"../../../../../services/treeService\";\r\n\r\n\r\nexport default function InterviewAddress() {\r\n\r\n    const [interviewAddressData, setInterviewAddressData] = useState([])\r\n\r\n    useEffect(() => {\r\n        getInterviewAddress().then(res => {\r\n            const {data} = res.data\r\n            const formattedData = formatDataSource(data)\r\n            setInterviewAddressData(formattedData)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const formatDataSource = (respData) => {\r\n        respData.map(item1 => {\r\n            if (item1.children.length === 0) {\r\n                item1.children = ''\r\n            } else {\r\n                item1.children.map(item2 => {\r\n                    if (item2.children.length === 0) {\r\n                        item2.children = ''\r\n                    } else {\r\n                        item2.children.map(item3 => {\r\n                            if (item3.children.length === 0) {\r\n                                item3.children = ''\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return respData\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '序号',\r\n            dataIndex: 'treeId',\r\n        },\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'label',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Table columns={columns} dataSource={interviewAddressData}\r\n                   pagination={{\r\n                       pageSize: 7\r\n                   }}\r\n                   rowKey={item => item.treeId}\r\n                   rowSelection={{\r\n                       onChange: (selectedRowKeys, selectedRows) => {\r\n\r\n                       },\r\n                       onSelectAll: (selected, selectedRows, changeRows) => {\r\n\r\n                       },\r\n                   }}\r\n\r\n            />\r\n        </>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\Contacter\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\departmentService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\UserList\\index.js",["476","477","478"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\ViewInterview\\index.js",["479"],"import {Cascader, DatePicker, Form, Input, TimePicker} from 'antd';\r\nimport {forwardRef, useEffect} from \"react\";\r\nimport moment from 'moment';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 20,\r\n    },\r\n};\r\n\r\nconst ViewInterview = forwardRef((props) => {\r\n\r\n    const [interviewDate, interviewTime] = props.application.interviewTime.split(' ')\r\n\r\n    return (\r\n        <>\r\n            <div style={{height: 420,}}>\r\n                <Form {...layout} name=\"arrangeInterviewModal\">\r\n                    <Form.Item name='interviewDate' label=\"面试日期\" initialValue={moment(interviewDate, 'YYYY-MM-DD')}>\r\n                        <DatePicker disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='interviewTime' label=\"面试时间\" initialValue={moment(interviewTime, 'HH:mm:ss')}>\r\n                        <TimePicker disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='interviewAddress' label=\"面试地点\"\r\n                               initialValue={props.application.interviewAddress?.split('-')}>\r\n                        <Cascader disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='intentionDepartment' label=\"意向部门\" initialValue={props.application?.departmentName}>\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='contacterName' label=\"联系人\" initialValue={props.application?.contacterName}>\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='contacterPhone' label=\"联系方式\" initialValue={props.application?.contacterPhone}>\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='description' label=\"备注\" initialValue={props.application?.description}>\r\n                        <Input.TextArea disabled/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ViewInterview","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\index.js",["480","481","482","483"],"import React, {useEffect, useState} from 'react'\r\nimport {Button, Checkbox, Form, Input, message, Modal, Select, Space, Table} from 'antd';\r\nimport {\r\n    checkAssociationExist,\r\n    getAssociationAsMember,\r\n    getAssociationType,\r\n    getUserById,\r\n    saveAssociation\r\n} from \"../../../../services/db\";\r\nimport {OPTION_ICONS} from \"../../../../constants/icon\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getAssociationTypeLabel} from \"../../../../constants/state\";\r\nimport axios from \"axios\";\r\n\r\nconst {Option} = Select;\r\n\r\nexport default function AssociationList(props) {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const isSuperAdmin = userInfo.isSuperAdmin\r\n\r\n    const history = useHistory()\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [associationType, setAssociationType] = useState([])\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [addAssociationForm] = Form.useForm()\r\n\r\n    const refreshAssociationList = () => {\r\n        getAssociationAsMember(userInfo.userId).then(res => {\r\n            const {data} = res.data\r\n            // console.log('社团列表：')\r\n            // console.log(data)\r\n            setDataSource(data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshAssociationList()\r\n        getAssociationType().then(res => {\r\n            const {data} = res.data\r\n            setAssociationType(data)\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '社团编号',\r\n            dataIndex: 'associationId',\r\n            key: 'associationId',\r\n            render(associationId) {\r\n                return <b>{associationId}</b>\r\n            }\r\n        },\r\n        {\r\n            title: '社团名称',\r\n            dataIndex: 'associationName',\r\n        },\r\n        {\r\n            title: '担任职位',\r\n            dataIndex: 'roleName',\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type',\r\n            render: (type) => {\r\n                return <span>{getAssociationTypeLabel(type)}</span>\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'createTime',\r\n        },\r\n        // isSuperAdmin && {\r\n        //     title: '状态',\r\n        //     dataIndex: 'state',\r\n        //     render: (type) => {\r\n        //         return <span>{getAssociationStateLabelByKey(type)}</span>\r\n        //     }\r\n        // },\r\n        {\r\n            title: '操作',\r\n            render: (_, item) => <Space>\r\n                <Button size='small' icon={OPTION_ICONS.VIEW} type='primary'\r\n                        onClick={() => {\r\n                            history.push(`/manage/association/list/${item.associationId}`)\r\n                        }}>详情</Button>\r\n                {isSuperAdmin\r\n                && <Button danger size='small' icon={OPTION_ICONS.REFUSE}>冻结</Button>}\r\n            </Space>\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            {isSuperAdmin\r\n            && <Button type={'primary'} size={\"middle\"} style={{}}\r\n                       onClick={() => {\r\n                           setModalVisible(true)\r\n                       }}\r\n            >\r\n                新增社团\r\n            </Button>\r\n            }\r\n            <Table columns={columns}\r\n                   dataSource={dataSource}\r\n                   pagination={{\r\n                       pageSize: 7\r\n                   }}\r\n            />\r\n            <Modal visible={modalVisible}\r\n                   onOk={() => {\r\n                       addAssociationForm.validateFields().then(value => {\r\n                           // console.log('value')\r\n                           // console.log(value)\r\n                           const formattedData = {\r\n                               ...value,\r\n                           }\r\n                           saveAssociation(formattedData).then(res => {\r\n                               if (res.data.code == 1) {\r\n                                   message.error('创建失败，请检查表单内容是否合法！')\r\n                                   return\r\n                               }\r\n                               setModalVisible(false)\r\n                               refreshAssociationList()\r\n                               message.success('创建成功！')\r\n                           }).catch(() => {\r\n                               setModalVisible(false)\r\n                           })\r\n                       })\r\n                   }}\r\n                   onCancel={() => {\r\n                       setModalVisible(false)\r\n                   }}>\r\n                <Form name=\"addAssociationForm\"\r\n                      form={addAssociationForm}\r\n                      labelCol={{\r\n                          span: 6,\r\n                      }}\r\n                      wrapperCol={{\r\n                          span: 16,\r\n                      }}\r\n                      autoComplete=\"off\"\r\n                      style={{\r\n                          marginTop: 20\r\n                      }}\r\n                >\r\n                    <Form.Item label=\"社团名称\" name=\"associationName\"\r\n                               rules={[{required: true, message: '请输入社团名称！',},]}>\r\n                        <Input.Search allowClear placeholder={'请输入社团名称'}\r\n                                      onSearch={(value) => {\r\n                                          checkAssociationExist(value).then(res => {\r\n                                              const isExist = res.data.data\r\n                                              if (isExist) {\r\n                                                  message.error(\"该社团已经存在！\")\r\n                                              } else {\r\n                                                  message.success(\"名称可用！\")\r\n                                              }\r\n                                          })\r\n                                      }}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"隶属单位\" name=\"adminUnit\"\r\n                               rules={[{required: true, message: '请输入隶属单位！',},]}>\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"社团类型\" name=\"type\"\r\n                               rules={[{required: true, message: '请选择社团类型！',},]}>\r\n                        <Select defaultActiveFirstOption style={{width: '100%'}}>\r\n                            {associationType.length > 0 && associationType.map(item => {\r\n                                return <Option value={item.value}>{item.label}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"社团管理员\" name=\"userId\"\r\n                               rules={[{required: true, message: '请输入用户学号！',},]}>\r\n                        <Input.Search allowClear placeholder={'请输入用户学号'}\r\n                                      onSearch={(value) => {\r\n                                          getUserById(value).then(res => {\r\n                                              if (res.data.code === 1) {\r\n                                                  message.error(\"用户不存在！\")\r\n                                              } else {\r\n                                                  message.success(\"用户可用！\")\r\n                                              }\r\n                                          })\r\n                                      }}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\imageService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\image.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\index.jsx",["484"],"import React, {useEffect, useState} from 'react'\r\nimport {Button, message, Modal, Switch, Table} from 'antd'\r\nimport {DeleteOutlined, ExclamationCircleOutlined, UnorderedListOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport {getAllUsers, getRoleList} from \"../../../../services/db\";\r\nimport {USER_STATE} from \"../../../../constants/state\";\r\n\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function UserList() {\r\n\r\n    // 成员列表\r\n    const [dataSource, setDataSource] = useState([])\r\n\r\n    const [roleList, setRoleList] = useState([])\r\n\r\n    const refreshUserList = () => {\r\n        getAllUsers().then(res => {\r\n            const {data} = res.data\r\n            setDataSource(data)\r\n        })\r\n    }\r\n\r\n    // 获取角色列表 &  获取用户列表\r\n    useEffect(() => {\r\n        getRoleList().then(res => {\r\n            setRoleList(res.data.data)\r\n        })\r\n        refreshUserList()\r\n    }, [])\r\n\r\n    // 表的行列结构\r\n    const columns = [\r\n        {\r\n            title: '学号',\r\n            dataIndex: 'userId',\r\n            render: (userId) => {\r\n                return <b>{userId}</b>\r\n            }\r\n        },\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '角色',\r\n            dataIndex: 'roleList',\r\n            filters: [\r\n                ...roleList.map((role) => {\r\n                    return {\r\n                        text: role.roleName,\r\n                        value: role.roleName,\r\n                    }\r\n                })\r\n            ],\r\n            onFilter: (value, item) => {\r\n                // console.log(\"onFilter item\",item)\r\n                let exist = false\r\n                item.roleList.map(role => {\r\n                    // console.log(\"onFilter 中的 role\",role)\r\n                    if (role.roleName === value) {\r\n                        exist = true\r\n                    }\r\n                })\r\n                return exist\r\n            },\r\n            render: (roleList, item) => {\r\n                return roleList.map((role) => {\r\n                    let roleName = ''\r\n                    if (role.roleName === \"超级管理员\") {\r\n                        roleName = \"超级管理员\"\r\n                    } else if (role.roleName === \"普通学生\") {\r\n                        roleName = \"普通学生\"\r\n                    } else {\r\n                        roleName = `${role.roleName}——${role.associationName}`\r\n                    }\r\n                    return (\r\n                        <div key={role.roleId}>{roleName}</div>\r\n                    )\r\n                })\r\n            }\r\n        },\r\n        {\r\n            title: '是否可用',\r\n            dataIndex: 'state',\r\n            render: ((state, item) => {\r\n                // console.log('itemID')\r\n                // console.log(item.userId)\r\n                const checkd = (state === USER_STATE.OPEN.value)\r\n                return <Switch\r\n                    checked={checkd}\r\n                    onChange={() => {\r\n                        axios.get(`/user/updateUserLineState/${item.userId}/${state}`).then(()=>{\r\n                            refreshUserList()\r\n                            message.success(\"操作成功！\")\r\n                        })\r\n                    }}\r\n                >\r\n                </Switch>\r\n            })\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => {\r\n                return <div>\r\n                    <Button\r\n                        shape={\"circle\"}\r\n                        icon={<UnorderedListOutlined/>}\r\n                        disabled={item.canDel === 0}\r\n                    >\r\n                    </Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button\r\n                        shape={\"circle\"}\r\n                        icon={<DeleteOutlined/>}\r\n                        danger\r\n                        disabled={item.canDel === 0}\r\n                        onClick={() => confirmDelete(item)}\r\n                    >\r\n                    </Button>\r\n                </div>\r\n            }\r\n        },\r\n    ]\r\n\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        // console.log(\"delete item\", item)\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                // console.log(\"同步前端页面\")\r\n                const newList = dataSource.filter(data => data.id !== item.id)\r\n                setDataSource(newList)\r\n                // 调用后端接口，同步后台数据库\r\n                console.log(\"同步后台数据。。。\")\r\n                // 硬删除\r\n                axios.delete(`/association/deleteUserById/${item.userId}`)\r\n                    .then((res) => {\r\n\r\n                    })\r\n                    .catch((err) => {\r\n\r\n                    })\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return <>\r\n        <Table\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={{\r\n                pageSize: 6\r\n            }}\r\n            rowKey={item => item.id}\r\n        />\r\n    </>\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\BatchImport\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\AddUser\\index.js",["485"],"import BatchImport from \"../BatchImport\";\r\nimport {Alert, Button, message, Modal, Tag} from \"antd\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport UserForm from \"../../../../../components/user-manage/UserForm\";\r\nimport {addUser, getAllAssociationList, getRoleList, getUserById} from \"../../../../../services/db\";\r\n\r\nexport default function AddUser() {\r\n\r\n    const addFormRef = useRef(null)\r\n    const [isAddModalVisible, setIsAddModalVisible] = useState(false)\r\n    const [associationList, setAssciationList] = useState([])\r\n    const [roleList, setRoleList] = useState([])\r\n\r\n    // 获取社团列表供用户选择加入的社团 & 获取角色列表\r\n    useEffect(() => {\r\n        getAllAssociationList().then(res => {\r\n            setAssciationList(res.data.data)\r\n        })\r\n        getRoleList().then(res => {\r\n            setRoleList(res.data.data)\r\n        })\r\n    }, [])\r\n\r\n    // 模态框 确认 添加成员\r\n    const handelUserAddModalOk = () => {\r\n        addFormRef.current.validateFields()\r\n            .then(value => {\r\n                setIsAddModalVisible(false)// 关闭模态框\r\n\r\n                // 封装表单信息\r\n                const userObj = {\r\n                    userId: value.user_id,\r\n                    name: value.name,\r\n                    roleName: value.roleName,\r\n                    associationName: value.associationName\r\n                }\r\n\r\n                // 清空表单信息\r\n                addFormRef.current.resetFields()\r\n\r\n                addUser(userObj).then((res) => {\r\n                    message.success(\"新增成功！\")\r\n                })\r\n            })\r\n    }\r\n\r\n    return <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        margin: '10px 0px 20px 0px',\r\n    }}>\r\n        <div style={{\r\n            width: 498,\r\n            height: 280,\r\n            marginLeft: 50,\r\n        }}>\r\n            <BatchImport/>\r\n        </div>\r\n        <Button type=\"primary\"\r\n                style={{\r\n                    marginLeft: -85,\r\n                    marginTop: -3,\r\n                }}\r\n                onClick={() => {\r\n                    setIsAddModalVisible(true)\r\n                }}\r\n        >\r\n            新增成员\r\n        </Button>\r\n        <Alert message=\"数据格式\" type=\"info\" closable\r\n               style={{\r\n                   height: 280,\r\n                   width: 700,\r\n                   marginLeft: 30,\r\n               }}\r\n               description={<div>\r\n                   <div><Tag color=\"red\">必选</Tag>@列1 - 学号；格式：英文或数字组合，最长不超过20个字符</div>\r\n                   <div><Tag color=\"red\">必选</Tag>@列2 - 姓名：格式：中文或英文，最长不超过50个字符</div>\r\n                   <div><Tag color=\"red\">必选</Tag>@列3 - 角色：请从【普通学生、社团成员、社团管理员、社团会长、社团副会长】中选择</div>\r\n                   <div><Tag color=\"red\">必选</Tag>@列4 - 所属社团名称：从现有社团中选择。若上述角色为普通学生，可不填。</div>\r\n                   <div><Tag color=\"cyan\">可选</Tag>@列5 - 密码：格式：字符和数字的组合，最短6个字符，最长不超过50个字符。系统默认密码为123456</div>\r\n                   <div><Tag color=\"cyan\">可选</Tag>@列6 - 性别：格式：请从【男、女或未知】中选择，系统默认性别为未知</div>\r\n                   <div style={{\r\n                       marginTop: 9,\r\n                       color: 'red',\r\n                   }}>批量导入失败请检查上述数据格式。若仍然失败，请联系管理员18030290509\r\n                   </div>\r\n               </div>}\r\n        />\r\n        {/* 添加成员 Modal */}\r\n        <Modal\r\n            visible={isAddModalVisible}\r\n            title=\"创建新成员\"\r\n            okText=\"确认\"\r\n            cancelText=\"取消\"\r\n            onCancel={() => {\r\n                setIsAddModalVisible(false)\r\n            }}\r\n            onOk={handelUserAddModalOk}\r\n        >\r\n            <UserForm\r\n                associationList={associationList}\r\n                roleList={roleList}\r\n                ref={addFormRef}/>\r\n        </Modal>\r\n    </div>\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\BatchAddAssociation\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\BatchAddAssociation\\BatchImport\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\dataViewService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\recruitmentSerivce.js",["486"],"import axios from \"axios\";\r\nimport {RECRUITMENT_STATE} from \"../constants/state\";\r\n\r\nexport function updateRecruitmentState(recruitmentId, state) {\r\n    return axios({\r\n        url: `/association/updateRecruitmentState/${recruitmentId}/${state}`,\r\n        method: 'get',\r\n    })\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\MemberResume\\index.js",["487"],{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","replacedBy":"491"},{"ruleId":"492","severity":1,"message":"493","line":1,"column":16,"nodeType":"494","messageId":"495","endLine":1,"endColumn":25},{"ruleId":"492","severity":1,"message":"496","line":2,"column":17,"nodeType":"494","messageId":"495","endLine":2,"endColumn":24},{"ruleId":"492","severity":1,"message":"497","line":9,"column":9,"nodeType":"494","messageId":"495","endLine":9,"endColumn":20},{"ruleId":"492","severity":1,"message":"498","line":17,"column":11,"nodeType":"494","messageId":"495","endLine":17,"endColumn":19},{"ruleId":"499","severity":1,"message":"500","line":36,"column":1,"nodeType":"501","messageId":"502","endLine":37,"endColumn":2},{"ruleId":"503","severity":1,"message":"504","line":71,"column":45,"nodeType":"505","messageId":"506","endLine":71,"endColumn":46,"suggestions":"507"},{"ruleId":"492","severity":1,"message":"508","line":27,"column":24,"nodeType":"494","messageId":"495","endLine":27,"endColumn":37},{"ruleId":"509","severity":1,"message":"510","line":31,"column":5,"nodeType":"494","endLine":31,"endColumn":14,"suggestions":"511"},{"ruleId":"492","severity":1,"message":"493","line":1,"column":16,"nodeType":"494","messageId":"495","endLine":1,"endColumn":25},{"ruleId":"492","severity":1,"message":"512","line":2,"column":20,"nodeType":"494","messageId":"495","endLine":2,"endColumn":23},{"ruleId":"492","severity":1,"message":"513","line":9,"column":9,"nodeType":"494","messageId":"495","endLine":9,"endColumn":16},{"ruleId":"492","severity":1,"message":"514","line":9,"column":18,"nodeType":"494","messageId":"495","endLine":9,"endColumn":24},{"ruleId":"515","severity":1,"message":"516","line":26,"column":33,"nodeType":"517","endLine":26,"endColumn":45},{"ruleId":"488","replacedBy":"518"},{"ruleId":"490","replacedBy":"519"},{"ruleId":"488","replacedBy":"520"},{"ruleId":"490","replacedBy":"521"},{"ruleId":"492","severity":1,"message":"522","line":2,"column":5,"nodeType":"494","messageId":"495","endLine":2,"endColumn":18},{"ruleId":"492","severity":1,"message":"523","line":3,"column":5,"nodeType":"494","messageId":"495","endLine":3,"endColumn":17},{"ruleId":"492","severity":1,"message":"524","line":4,"column":5,"nodeType":"494","messageId":"495","endLine":4,"endColumn":20},{"ruleId":"492","severity":1,"message":"525","line":5,"column":5,"nodeType":"494","messageId":"495","endLine":5,"endColumn":17},{"ruleId":"492","severity":1,"message":"526","line":6,"column":5,"nodeType":"494","messageId":"495","endLine":6,"endColumn":18},{"ruleId":"492","severity":1,"message":"527","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":7,"endColumn":17},{"ruleId":"492","severity":1,"message":"528","line":8,"column":5,"nodeType":"494","messageId":"495","endLine":8,"endColumn":25},{"ruleId":"492","severity":1,"message":"529","line":10,"column":27,"nodeType":"494","messageId":"495","endLine":10,"endColumn":35},{"ruleId":"492","severity":1,"message":"530","line":11,"column":27,"nodeType":"494","messageId":"495","endLine":11,"endColumn":37},{"ruleId":"492","severity":1,"message":"531","line":12,"column":27,"nodeType":"494","messageId":"495","endLine":12,"endColumn":44},{"ruleId":"492","severity":1,"message":"532","line":13,"column":27,"nodeType":"494","messageId":"495","endLine":13,"endColumn":42},{"ruleId":"492","severity":1,"message":"533","line":14,"column":27,"nodeType":"494","messageId":"495","endLine":14,"endColumn":42},{"ruleId":"492","severity":1,"message":"534","line":15,"column":27,"nodeType":"494","messageId":"495","endLine":15,"endColumn":41},{"ruleId":"492","severity":1,"message":"535","line":16,"column":8,"nodeType":"494","messageId":"495","endLine":16,"endColumn":13},{"ruleId":"536","severity":1,"message":"537","line":189,"column":37,"nodeType":"538","messageId":"539","endLine":189,"endColumn":39},{"ruleId":"536","severity":1,"message":"537","line":219,"column":36,"nodeType":"538","messageId":"539","endLine":219,"endColumn":38},{"ruleId":"540","severity":1,"message":"541","line":118,"column":13,"nodeType":"542","endLine":124,"endColumn":14},{"ruleId":"543","severity":1,"message":"544","line":119,"column":22,"nodeType":"505","messageId":"545","endLine":119,"endColumn":36},{"ruleId":"540","severity":1,"message":"546","line":128,"column":15,"nodeType":"542","endLine":128,"endColumn":18},{"ruleId":"492","severity":1,"message":"547","line":93,"column":21,"nodeType":"494","messageId":"495","endLine":93,"endColumn":31},{"ruleId":"540","severity":1,"message":"546","line":124,"column":25,"nodeType":"542","endLine":124,"endColumn":28},{"ruleId":"492","severity":1,"message":"548","line":2,"column":8,"nodeType":"494","messageId":"495","endLine":2,"endColumn":13},{"ruleId":"492","severity":1,"message":"549","line":3,"column":28,"nodeType":"494","messageId":"495","endLine":3,"endColumn":49},{"ruleId":"509","severity":1,"message":"550","line":23,"column":8,"nodeType":"551","endLine":23,"endColumn":10,"suggestions":"552"},{"ruleId":"553","severity":1,"message":"554","line":17,"column":5,"nodeType":"555","messageId":"556","endLine":17,"endColumn":20},{"ruleId":"553","severity":1,"message":"554","line":16,"column":5,"nodeType":"555","messageId":"556","endLine":16,"endColumn":20},{"ruleId":"509","severity":1,"message":"557","line":32,"column":8,"nodeType":"551","endLine":32,"endColumn":18,"suggestions":"558"},{"ruleId":"540","severity":1,"message":"546","line":127,"column":21,"nodeType":"542","endLine":127,"endColumn":88},{"ruleId":"536","severity":1,"message":"537","line":37,"column":27,"nodeType":"538","messageId":"539","endLine":37,"endColumn":29},{"ruleId":"559","severity":1,"message":"560","line":88,"column":9,"nodeType":"542","endLine":97,"endColumn":11},{"ruleId":"559","severity":1,"message":"560","line":111,"column":21,"nodeType":"542","endLine":117,"endColumn":23},{"ruleId":"559","severity":1,"message":"560","line":118,"column":21,"nodeType":"542","endLine":124,"endColumn":23},{"ruleId":"559","severity":1,"message":"560","line":125,"column":21,"nodeType":"542","endLine":131,"endColumn":23},{"ruleId":"559","severity":1,"message":"560","line":132,"column":21,"nodeType":"542","endLine":138,"endColumn":23},{"ruleId":"509","severity":1,"message":"561","line":50,"column":8,"nodeType":"551","endLine":50,"endColumn":10,"suggestions":"562"},{"ruleId":"536","severity":1,"message":"537","line":19,"column":27,"nodeType":"538","messageId":"539","endLine":19,"endColumn":29},{"ruleId":"536","severity":1,"message":"537","line":18,"column":36,"nodeType":"538","messageId":"539","endLine":18,"endColumn":38},{"ruleId":"563","severity":1,"message":"564","line":19,"column":29,"nodeType":"565","messageId":"566","endLine":19,"endColumn":31},{"ruleId":"492","severity":1,"message":"493","line":2,"column":16,"nodeType":"494","messageId":"495","endLine":2,"endColumn":25},{"ruleId":"492","severity":1,"message":"496","line":10,"column":17,"nodeType":"494","messageId":"495","endLine":10,"endColumn":24},{"ruleId":"492","severity":1,"message":"567","line":11,"column":9,"nodeType":"494","messageId":"495","endLine":11,"endColumn":19},{"ruleId":"492","severity":1,"message":"568","line":5,"column":5,"nodeType":"494","messageId":"495","endLine":5,"endColumn":35},{"ruleId":"492","severity":1,"message":"569","line":6,"column":5,"nodeType":"494","messageId":"495","endLine":6,"endColumn":34},{"ruleId":"492","severity":1,"message":"549","line":7,"column":5,"nodeType":"494","messageId":"495","endLine":7,"endColumn":26},{"ruleId":"492","severity":1,"message":"570","line":9,"column":9,"nodeType":"494","messageId":"495","endLine":9,"endColumn":24},{"ruleId":"492","severity":1,"message":"548","line":10,"column":8,"nodeType":"494","messageId":"495","endLine":10,"endColumn":13},{"ruleId":"492","severity":1,"message":"571","line":13,"column":8,"nodeType":"494","messageId":"495","endLine":13,"endColumn":15},{"ruleId":"509","severity":1,"message":"572","line":28,"column":8,"nodeType":"551","endLine":28,"endColumn":10,"suggestions":"573"},{"ruleId":"492","severity":1,"message":"574","line":10,"column":9,"nodeType":"494","messageId":"495","endLine":10,"endColumn":18},{"ruleId":"509","severity":1,"message":"575","line":27,"column":8,"nodeType":"551","endLine":27,"endColumn":10,"suggestions":"576"},{"ruleId":"492","severity":1,"message":"577","line":102,"column":11,"nodeType":"494","messageId":"495","endLine":102,"endColumn":24},{"ruleId":"509","severity":1,"message":"575","line":49,"column":8,"nodeType":"551","endLine":49,"endColumn":10,"suggestions":"578"},{"ruleId":"536","severity":1,"message":"537","line":94,"column":54,"nodeType":"538","messageId":"539","endLine":94,"endColumn":56},{"ruleId":"492","severity":1,"message":"548","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":13},{"ruleId":"492","severity":1,"message":"579","line":11,"column":12,"nodeType":"494","messageId":"495","endLine":11,"endColumn":29},{"ruleId":"492","severity":1,"message":"580","line":11,"column":31,"nodeType":"494","messageId":"495","endLine":11,"endColumn":51},{"ruleId":"509","severity":1,"message":"581","line":26,"column":8,"nodeType":"551","endLine":26,"endColumn":10,"suggestions":"582"},{"ruleId":"536","severity":1,"message":"537","line":30,"column":28,"nodeType":"538","messageId":"539","endLine":30,"endColumn":30},{"ruleId":"536","severity":1,"message":"537","line":34,"column":42,"nodeType":"538","messageId":"539","endLine":34,"endColumn":44},{"ruleId":"536","severity":1,"message":"537","line":38,"column":50,"nodeType":"538","messageId":"539","endLine":38,"endColumn":52},{"ruleId":"540","severity":1,"message":"546","line":80,"column":24,"nodeType":"542","endLine":80,"endColumn":27},{"ruleId":"492","severity":1,"message":"583","line":18,"column":8,"nodeType":"494","messageId":"495","endLine":18,"endColumn":10},{"ruleId":"492","severity":1,"message":"584","line":54,"column":12,"nodeType":"494","messageId":"495","endLine":54,"endColumn":26},{"ruleId":"492","severity":1,"message":"585","line":54,"column":28,"nodeType":"494","messageId":"495","endLine":54,"endColumn":45},{"ruleId":"509","severity":1,"message":"575","line":74,"column":8,"nodeType":"551","endLine":74,"endColumn":10,"suggestions":"586"},{"ruleId":"536","severity":1,"message":"537","line":132,"column":51,"nodeType":"538","messageId":"539","endLine":132,"endColumn":53},{"ruleId":"536","severity":1,"message":"537","line":157,"column":43,"nodeType":"538","messageId":"539","endLine":157,"endColumn":45},{"ruleId":"536","severity":1,"message":"537","line":186,"column":38,"nodeType":"538","messageId":"539","endLine":186,"endColumn":40},{"ruleId":"536","severity":1,"message":"537","line":202,"column":50,"nodeType":"538","messageId":"539","endLine":202,"endColumn":52},{"ruleId":"509","severity":1,"message":"587","line":31,"column":8,"nodeType":"551","endLine":31,"endColumn":10,"suggestions":"588"},{"ruleId":"492","severity":1,"message":"589","line":41,"column":11,"nodeType":"494","messageId":"495","endLine":41,"endColumn":23},{"ruleId":"492","severity":1,"message":"548","line":4,"column":8,"nodeType":"494","messageId":"495","endLine":4,"endColumn":13},{"ruleId":"509","severity":1,"message":"590","line":36,"column":8,"nodeType":"551","endLine":36,"endColumn":10,"suggestions":"591"},{"ruleId":"492","severity":1,"message":"592","line":10,"column":8,"nodeType":"494","messageId":"495","endLine":10,"endColumn":18},{"ruleId":"492","severity":1,"message":"593","line":19,"column":12,"nodeType":"494","messageId":"495","endLine":19,"endColumn":27},{"ruleId":"509","severity":1,"message":"594","line":21,"column":5,"nodeType":"494","endLine":21,"endColumn":14,"suggestions":"595"},{"ruleId":"536","severity":1,"message":"596","line":32,"column":30,"nodeType":"538","messageId":"597","endLine":32,"endColumn":32},{"ruleId":"536","severity":1,"message":"537","line":35,"column":17,"nodeType":"555","messageId":"598","endLine":35,"endColumn":23},{"ruleId":"492","severity":1,"message":"577","line":106,"column":11,"nodeType":"494","messageId":"495","endLine":106,"endColumn":24},{"ruleId":"488","replacedBy":"599"},{"ruleId":"490","replacedBy":"600"},{"ruleId":"492","severity":1,"message":"601","line":4,"column":5,"nodeType":"494","messageId":"495","endLine":4,"endColumn":22},{"ruleId":"492","severity":1,"message":"602","line":9,"column":5,"nodeType":"494","messageId":"495","endLine":9,"endColumn":20},{"ruleId":"509","severity":1,"message":"603","line":33,"column":5,"nodeType":"494","endLine":33,"endColumn":14,"suggestions":"604"},{"ruleId":"492","severity":1,"message":"577","line":133,"column":11,"nodeType":"494","messageId":"495","endLine":133,"endColumn":24},{"ruleId":"492","severity":1,"message":"571","line":11,"column":8,"nodeType":"494","messageId":"495","endLine":11,"endColumn":15},{"ruleId":"509","severity":1,"message":"605","line":25,"column":8,"nodeType":"551","endLine":25,"endColumn":10,"suggestions":"606"},{"ruleId":"492","severity":1,"message":"607","line":20,"column":11,"nodeType":"494","messageId":"495","endLine":20,"endColumn":22},{"ruleId":"509","severity":1,"message":"608","line":43,"column":8,"nodeType":"551","endLine":43,"endColumn":10,"suggestions":"609"},{"ruleId":"563","severity":1,"message":"564","line":105,"column":62,"nodeType":"565","messageId":"566","endLine":105,"endColumn":64},{"ruleId":"492","severity":1,"message":"571","line":31,"column":8,"nodeType":"494","messageId":"495","endLine":31,"endColumn":15},{"ruleId":"492","severity":1,"message":"610","line":48,"column":11,"nodeType":"494","messageId":"495","endLine":48,"endColumn":18},{"ruleId":"509","severity":1,"message":"611","line":70,"column":8,"nodeType":"551","endLine":70,"endColumn":10,"suggestions":"612"},{"ruleId":"492","severity":1,"message":"613","line":15,"column":5,"nodeType":"494","messageId":"495","endLine":15,"endColumn":11},{"ruleId":"492","severity":1,"message":"614","line":19,"column":37,"nodeType":"494","messageId":"495","endLine":19,"endColumn":52},{"ruleId":"492","severity":1,"message":"548","line":24,"column":8,"nodeType":"494","messageId":"495","endLine":24,"endColumn":13},{"ruleId":"509","severity":1,"message":"615","line":82,"column":8,"nodeType":"551","endLine":82,"endColumn":10,"suggestions":"616"},{"ruleId":"536","severity":1,"message":"537","line":87,"column":43,"nodeType":"538","messageId":"539","endLine":87,"endColumn":45},{"ruleId":"617","severity":1,"message":"618","line":109,"column":9,"nodeType":"619","messageId":"620","endLine":118,"endColumn":10},{"ruleId":"509","severity":1,"message":"621","line":26,"column":8,"nodeType":"551","endLine":26,"endColumn":10,"suggestions":"622"},{"ruleId":"540","severity":1,"message":"546","line":119,"column":25,"nodeType":"542","endLine":121,"endColumn":28},{"ruleId":"492","severity":1,"message":"623","line":3,"column":5,"nodeType":"494","messageId":"495","endLine":3,"endColumn":11},{"ruleId":"492","severity":1,"message":"613","line":13,"column":5,"nodeType":"494","messageId":"495","endLine":13,"endColumn":11},{"ruleId":"492","severity":1,"message":"548","line":18,"column":8,"nodeType":"494","messageId":"495","endLine":18,"endColumn":13},{"ruleId":"492","severity":1,"message":"624","line":20,"column":9,"nodeType":"494","messageId":"495","endLine":20,"endColumn":30},{"ruleId":"492","severity":1,"message":"625","line":20,"column":54,"nodeType":"494","messageId":"495","endLine":20,"endColumn":65},{"ruleId":"492","severity":1,"message":"626","line":21,"column":15,"nodeType":"494","messageId":"495","endLine":21,"endColumn":27},{"ruleId":"492","severity":1,"message":"627","line":27,"column":9,"nodeType":"494","messageId":"495","endLine":27,"endColumn":11},{"ruleId":"509","severity":1,"message":"628","line":72,"column":8,"nodeType":"551","endLine":72,"endColumn":36,"suggestions":"629"},{"ruleId":"617","severity":1,"message":"618","line":89,"column":9,"nodeType":"619","messageId":"620","endLine":98,"endColumn":10},{"ruleId":"492","severity":1,"message":"630","line":2,"column":9,"nodeType":"494","messageId":"495","endLine":2,"endColumn":23},{"ruleId":"536","severity":1,"message":"537","line":20,"column":28,"nodeType":"538","messageId":"539","endLine":20,"endColumn":30},{"ruleId":"536","severity":1,"message":"537","line":24,"column":42,"nodeType":"538","messageId":"539","endLine":24,"endColumn":44},{"ruleId":"536","severity":1,"message":"537","line":28,"column":50,"nodeType":"538","messageId":"539","endLine":28,"endColumn":52},{"ruleId":"509","severity":1,"message":"631","line":28,"column":8,"nodeType":"551","endLine":28,"endColumn":29,"suggestions":"632"},{"ruleId":"617","severity":1,"message":"618","line":43,"column":13,"nodeType":"619","messageId":"620","endLine":50,"endColumn":14},{"ruleId":"540","severity":1,"message":"546","line":56,"column":21,"nodeType":"542","endLine":59,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":2,"column":21,"nodeType":"494","messageId":"495","endLine":2,"endColumn":30},{"ruleId":"492","severity":1,"message":"633","line":2,"column":17,"nodeType":"494","messageId":"495","endLine":2,"endColumn":25},{"ruleId":"492","severity":1,"message":"548","line":13,"column":8,"nodeType":"494","messageId":"495","endLine":13,"endColumn":13},{"ruleId":"509","severity":1,"message":"634","line":44,"column":8,"nodeType":"551","endLine":44,"endColumn":10,"suggestions":"635"},{"ruleId":"563","severity":1,"message":"564","line":121,"column":50,"nodeType":"565","messageId":"566","endLine":121,"endColumn":52},{"ruleId":"536","severity":1,"message":"537","line":60,"column":40,"nodeType":"538","messageId":"539","endLine":60,"endColumn":42},{"ruleId":"492","severity":1,"message":"625","line":5,"column":54,"nodeType":"494","messageId":"495","endLine":5,"endColumn":65},{"ruleId":"492","severity":1,"message":"636","line":2,"column":9,"nodeType":"494","messageId":"495","endLine":2,"endColumn":26},{"ruleId":"509","severity":1,"message":"637","line":22,"column":8,"nodeType":"551","endLine":22,"endColumn":10,"suggestions":"638"},"no-native-reassign",["639"],"no-negated-in-lhs",["640"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'getUserInfo' is defined but never used.","'userInfo' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["641","642"],"'setIsUserMenu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMenuArray'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isUserMenu] as a second argument to the useEffect Hook.",["643"],"'Col' is defined but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["639"],["640"],["639"],["640"],"'AuditOutlined' is defined but never used.","'BarsOutlined' is defined but never used.","'ClusterOutlined' is defined but never used.","'FormOutlined' is defined but never used.","'TableOutlined' is defined but never used.","'TeamOutlined' is defined but never used.","'UsergroupAddOutlined' is defined but never used.","'HomeIcon' is defined but never used.","'ResumeIcon' is defined but never used.","'AccountManageIcon' is defined but never used.","'ShareManageIcon' is defined but never used.","'RecruitmentIcon' is defined but never used.","'PermissionIcon' is defined but never used.","'React' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setCloumns' is assigned a value but never used.","'axios' is defined but never used.","'RECRUITMENT_STATE_MAP' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshRecruitment'. Either include it or remove the dependency array.","ArrayExpression",["644"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["645"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'associationId' and 'userInfo.userId'. Either include them or remove the dependency array.",["646"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'RECRUITMENT_PUBLISH_STATE_LIST' is defined but never used.","'RECRUITMENT_PUBLISH_STATE_MAP' is defined but never used.","'listRecruitment' is defined but never used.","'confirm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.shareId'. Either include it or remove the dependency array.",["647"],"'ROLE_TYPE' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.userId'. Either include it or remove the dependency array.",["648"],"'confirmDelete' is assigned a value but never used.",["649"],"'addingCollegeName' is assigned a value but never used.","'setAddingCollegeName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshTree'. Either include it or remove the dependency array.",["650"],"'qs' is defined but never used.","'newAssociation' is assigned a value but never used.","'setNewAssociation' is assigned a value but never used.",["651"],"React Hook useEffect has a missing dependency: 'props.associationId'. Either include it or remove the dependency array.",["652"],"'getAvatarUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.associationId' and 'props.recruitmentId'. Either include them or remove the dependency array.",["653"],"'usePublish' is defined but never used.","'applicationList' is assigned a value but never used.","React Hook useEffect contains a call to 'setApplicationList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["654"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","expectedReturnValue",["639"],["640"],"'ArrowDownOutlined' is defined but never used.","'ArrowUpOutlined' is defined but never used.","React Hook useEffect contains a call to 'setRecruitmentList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [dataSource] as a second argument to the useEffect Hook.",["655"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["656"],"'userSession' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.applicationId'. Either include it or remove the dependency array.",["657"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.",["658"],"'Select' is defined but never used.","'SettingOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshResume'. Either include it or remove the dependency array.",["659"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'refreshApplication'. Either include it or remove the dependency array.",["660"],"'Button' is defined but never used.","'checkAssociationExist' is defined but never used.","'getUserById' is defined but never used.","'OPTION_ICONS' is defined but never used.","'JS' is defined but never used.","React Hook useEffect has missing dependencies: 'association' and 'refreshAssociationData'. Either include them or remove the dependency array.",["661"],"'TREE_NODE_TYPE' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshUserList'. Either include it or remove the dependency array.",["662"],"'Checkbox' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshAssociationList'. Either include it or remove the dependency array.",["663"],"'RECRUITMENT_STATE' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["664"],"no-global-assign","no-unsafe-negation",{"messageId":"665","fix":"666","desc":"667"},{"messageId":"668","fix":"669","desc":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"681","fix":"683"},{"desc":"684","fix":"685"},{"desc":"681","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},"removeEscape",{"range":"713","text":"714"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"715","text":"716"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Add dependencies array: [isUserMenu]",{"range":"717","text":"718"},"Update the dependencies array to be: [refreshRecruitment]",{"range":"719","text":"720"},"Update the dependencies array to be: [history, userInfo]",{"range":"721","text":"722"},"Update the dependencies array to be: [associationId, userInfo.userId]",{"range":"723","text":"724"},"Update the dependencies array to be: [props.match.params.shareId]",{"range":"725","text":"726"},"Update the dependencies array to be: [userInfo.userId]",{"range":"727","text":"728"},{"range":"729","text":"728"},"Update the dependencies array to be: [refreshTree]",{"range":"730","text":"731"},{"range":"732","text":"728"},"Update the dependencies array to be: [props.associationId]",{"range":"733","text":"734"},"Update the dependencies array to be: [props.associationId, props.recruitmentId]",{"range":"735","text":"736"},"Add dependencies array: []",{"range":"737","text":"738"},"Add dependencies array: [dataSource]",{"range":"739","text":"740"},"Update the dependencies array to be: [props.match.params.id]",{"range":"741","text":"742"},"Update the dependencies array to be: [props.match.params.applicationId]",{"range":"743","text":"744"},"Update the dependencies array to be: [refresh]",{"range":"745","text":"746"},"Update the dependencies array to be: [refreshResume]",{"range":"747","text":"748"},"Update the dependencies array to be: [refreshApplication]",{"range":"749","text":"750"},"Update the dependencies array to be: [association, association.associationId, refreshAssociationData]",{"range":"751","text":"752"},"Update the dependencies array to be: [props.associationId, refreshUserList]",{"range":"753","text":"754"},"Update the dependencies array to be: [refreshAssociationList]",{"range":"755","text":"756"},"Update the dependencies array to be: [userId]",{"range":"757","text":"758"},[1971,1972],"",[1971,1971],"\\",[884,884],", [isUserMenu]",[775,777],"[refreshRecruitment]",[1288,1298],"[history, userInfo]",[1940,1942],"[associationId, userInfo.userId]",[854,856],"[props.match.params.shareId]",[822,824],"[userInfo.userId]",[1478,1480],[953,955],"[refreshTree]",[1993,1995],[1282,1284],"[props.associationId]",[1378,1380],"[props.associationId, props.recruitmentId]",[717,717],", []",[992,992],", [dataSource]",[789,791],"[props.match.params.id]",[1779,1781],"[props.match.params.applicationId]",[2034,2036],"[refresh]",[2638,2640],"[refreshResume]",[1013,1015],"[refreshApplication]",[2475,2503],"[association, association.associationId, refreshAssociationData]",[976,997],"[props.associationId, refreshUserList]",[1438,1440],"[refreshAssociationList]",[835,837],"[userId]"]