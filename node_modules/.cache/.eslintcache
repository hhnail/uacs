[{"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\index.js":"1","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\App.js":"2","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\router\\IndexRouter.js":"3","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\TopHeader\\index.js":"4","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\SideMenu\\index.js":"5","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\user-manage\\UserForm.js":"6","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationEditor\\index.jsx":"7","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserHeader\\index.jsx":"8","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationCard\\index.jsx":"9","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserManage\\index.jsx":"10","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\BaseInfo.js":"11","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\baseInfo.js":"12","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\state.js":"13","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\index.js":"14","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\EditableCell.js":"15","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\hooks\\usePublish.js":"16","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\type.js":"17","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\db.js":"18","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\store.js":"19","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\CollapseReducer.js":"20","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\LoadingReducer.js":"21","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\redux.js":"22","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\util\\http.js":"23","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserSettings\\index.jsx":"24","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\UserBox\\index.jsx":"25","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AppRouter\\index.js":"26","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationSquare\\index.js":"27","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\index.js":"28","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Home\\index.js":"29","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Login\\index.js":"30","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\NoPermission\\index.js":"31","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\shareService.js":"32","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\userService.js":"33","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\index.js":"34","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\ShareDetail\\index.js":"35","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\SysRouter\\index.jsx":"36","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\index.js":"37","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\AddShare\\index.js":"38","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\PermissionList\\index.js":"39","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationList\\index.js":"40","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\ClassList\\index.js":"41","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\AddRecruitment\\index.js":"42","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\RoleList\\index.js":"43","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\UserTagList\\index.js":"44","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\Share\\index.js":"45","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\BigEvent\\index.js":"46","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\DataView\\index.js":"47","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\AddAssociation\\index.js":"48","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\JoinApplication\\index.js":"49","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\index.js":"50","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\RecruitmentDetail\\index.js":"51","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\UserList\\index.jsx":"52","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\applicationService.js":"53","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationDetail\\index.js":"54","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationList\\index.js":"55","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AccountManage\\Resume\\index.jsx":"56","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\PickTag\\index.js":"57","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ApplicationManage\\index.js":"58","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\icon.js":"59","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\Calendar\\index.js":"60","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\ArrangeInterviewForm\\index.js":"61","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\index.js":"62","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\treeService.js":"63","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\InterviewAddress\\index.js":"64","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\Contacter\\index.js":"65"},{"size":151,"mtime":1629535454211,"results":"66","hashOfConfig":"67"},{"size":449,"mtime":1635161395737,"results":"68","hashOfConfig":"67"},{"size":1116,"mtime":1636186196730,"results":"69","hashOfConfig":"67"},{"size":1536,"mtime":1636248028854,"results":"70","hashOfConfig":"67"},{"size":5684,"mtime":1636378392514,"results":"71","hashOfConfig":"67"},{"size":2790,"mtime":1632015282488,"results":"72","hashOfConfig":"67"},{"size":1187,"mtime":1633177185586,"results":"73","hashOfConfig":"67"},{"size":2172,"mtime":1635648612588,"results":"74","hashOfConfig":"67"},{"size":1507,"mtime":1636711908803,"results":"75","hashOfConfig":"67"},{"size":1866,"mtime":1629077512900,"results":"76","hashOfConfig":"67"},{"size":2183,"mtime":1633570464347,"results":"77","hashOfConfig":"67"},{"size":9578,"mtime":1636858423341,"results":"78","hashOfConfig":"67"},{"size":2607,"mtime":1636455747601,"results":"79","hashOfConfig":"67"},{"size":4857,"mtime":1633836370146,"results":"80","hashOfConfig":"67"},{"size":5786,"mtime":1633861487172,"results":"81","hashOfConfig":"67"},{"size":1499,"mtime":1635588643507,"results":"82","hashOfConfig":"67"},{"size":826,"mtime":1636878756831,"results":"83","hashOfConfig":"67"},{"size":1961,"mtime":1636185973601,"results":"84","hashOfConfig":"67"},{"size":839,"mtime":1635161599626,"results":"85","hashOfConfig":"67"},{"size":566,"mtime":1635549464935,"results":"86","hashOfConfig":"67"},{"size":487,"mtime":1635549464959,"results":"87","hashOfConfig":"67"},{"size":185,"mtime":1635087218971,"results":"88","hashOfConfig":"67"},{"size":895,"mtime":1636884256978,"results":"89","hashOfConfig":"67"},{"size":10790,"mtime":1636379634326,"results":"90","hashOfConfig":"67"},{"size":670,"mtime":1635597893881,"results":"91","hashOfConfig":"67"},{"size":833,"mtime":1635650279909,"results":"92","hashOfConfig":"67"},{"size":1965,"mtime":1636942083615,"results":"93","hashOfConfig":"67"},{"size":9604,"mtime":1636942073946,"results":"94","hashOfConfig":"67"},{"size":1265,"mtime":1635680506813,"results":"95","hashOfConfig":"67"},{"size":7109,"mtime":1635852227146,"results":"96","hashOfConfig":"67"},{"size":136,"mtime":1633826663776,"results":"97","hashOfConfig":"67"},{"size":358,"mtime":1635643007604,"results":"98","hashOfConfig":"67"},{"size":996,"mtime":1635684887453,"results":"99","hashOfConfig":"67"},{"size":981,"mtime":1636248084432,"results":"100","hashOfConfig":"67"},{"size":2805,"mtime":1635650279987,"results":"101","hashOfConfig":"67"},{"size":5462,"mtime":1636939056768,"results":"102","hashOfConfig":"67"},{"size":4036,"mtime":1635650279943,"results":"103","hashOfConfig":"67"},{"size":7666,"mtime":1635650279919,"results":"104","hashOfConfig":"67"},{"size":6176,"mtime":1635650465873,"results":"105","hashOfConfig":"67"},{"size":1960,"mtime":1636898299356,"results":"106","hashOfConfig":"67"},{"size":10911,"mtime":1636937942131,"results":"107","hashOfConfig":"67"},{"size":11295,"mtime":1636185991287,"results":"108","hashOfConfig":"67"},{"size":8358,"mtime":1632563513211,"results":"109","hashOfConfig":"67"},{"size":2026,"mtime":1635080968786,"results":"110","hashOfConfig":"67"},{"size":2887,"mtime":1636275694416,"results":"111","hashOfConfig":"67"},{"size":5802,"mtime":1635681153188,"results":"112","hashOfConfig":"67"},{"size":4346,"mtime":1636380291478,"results":"113","hashOfConfig":"67"},{"size":123,"mtime":1635753943587,"results":"114","hashOfConfig":"67"},{"size":4218,"mtime":1635754501860,"results":"115","hashOfConfig":"67"},{"size":4619,"mtime":1635754203747,"results":"116","hashOfConfig":"67"},{"size":2972,"mtime":1635754203715,"results":"117","hashOfConfig":"67"},{"size":7267,"mtime":1636897737007,"results":"118","hashOfConfig":"67"},{"size":982,"mtime":1636288657680,"results":"119","hashOfConfig":"67"},{"size":7317,"mtime":1636188354140,"results":"120","hashOfConfig":"67"},{"size":8643,"mtime":1636938196374,"results":"121","hashOfConfig":"67"},{"size":12933,"mtime":1636897337038,"results":"122","hashOfConfig":"67"},{"size":3224,"mtime":1636274538145,"results":"123","hashOfConfig":"67"},{"size":6244,"mtime":1636459643174,"results":"124","hashOfConfig":"67"},{"size":4899,"mtime":1636879203868,"results":"125","hashOfConfig":"67"},{"size":2065,"mtime":1636293803496,"results":"126","hashOfConfig":"67"},{"size":2794,"mtime":1636861942186,"results":"127","hashOfConfig":"67"},{"size":9037,"mtime":1636946558413,"results":"128","hashOfConfig":"67"},{"size":495,"mtime":1636895287812,"results":"129","hashOfConfig":"67"},{"size":1971,"mtime":1636860505145,"results":"130","hashOfConfig":"67"},{"size":908,"mtime":1636940466166,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"kh8qtk",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"134"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"134"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"134"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"134"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"134"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"134"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"134"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"134"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"134"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"134"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"134"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"134"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"134"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"134"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"134"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"134"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"134"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\index.js",[],["288","289"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\App.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\router\\IndexRouter.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\TopHeader\\index.js",["290","291","292","293","294"],"import React, {useEffect} from 'react'\r\nimport {Layout, message} from 'antd';\r\nimport {MenuFoldOutlined, MenuUnfoldOutlined} from '@ant-design/icons'\r\n\r\nimport {useHistory, withRouter} from 'react-router-dom'\r\nimport {connect} from \"react-redux\";\r\nimport {REDUXSTATE} from \"../../constants/redux\";\r\nimport UserSettings from '../UserSettings/index'\r\nimport {getUserInfo} from \"../../services/userService\";\r\n\r\nconst {Header} = Layout;\r\n\r\n\r\nfunction TopHeader(props) {\r\n\r\n    const history = useHistory()\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n\r\n    // TODO 为什么改变折叠状态，也会发请求？？？？？？\r\n    const changeFoldState = () => {\r\n        props.changeCollapsed()\r\n    }\r\n\r\n    return (\r\n        <Header style={{background: \"white\", padding: \"0px 12px\"}}>\r\n            {/* ========== 折叠栏 ==========*/}\r\n            {props.isCollapsed ?\r\n                <MenuUnfoldOutlined onClick={changeFoldState}/>\r\n                : <MenuFoldOutlined onClick={changeFoldState}/>}\r\n            <UserSettings history={history}/>\r\n        </Header>\r\n    )\r\n}\r\n\r\n\r\n{/*   =============================   redux   =============================   */\r\n}\r\nconst mapState2Props = ({CollapseReducer: {isCollapsed}}) => {\r\n    return {\r\n        isCollapsed\r\n    }\r\n}\r\n\r\nconst mapDispatch2Props = {\r\n    changeCollapsed() {\r\n        return {\r\n            type: REDUXSTATE.CHANGE_COLLAPSED.type,\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapState2Props, mapDispatch2Props)(withRouter(TopHeader))\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\SideMenu\\index.js",["295"],"import React, {Component} from 'react'\r\nimport {Layout, Menu} from 'antd';\r\nimport {ReactComponent as OrangeIcon} from '../../icons/orange.svg';\r\n\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport './index.less'\r\nimport {connect} from \"react-redux\";\r\nimport {getPermissionListByUserId} from \"../../services/db\";\r\nimport {SIDE_MENU_ICON_LIST} from \"../../constants/icon\";\r\nimport {getUserInfoByToken} from \"../../services/userService\";\r\n\r\nconst {SubMenu} = Menu;\r\nconst {Sider} = Layout;\r\n\r\n\r\nclass SideMenu extends Component {\r\n\r\n    state = {\r\n        // 菜单列表\r\n        menuList: [],\r\n        // 选中菜单项的key，可以同时选中多个，因此是数组\r\n        selectKeys: [],\r\n        // 打开菜单项的key\r\n        openKeys: [],\r\n        // 用户信息\r\n        userInfo: {},\r\n    }\r\n\r\n    // 获取菜单信息\r\n    // 展开默认项。刷新后仍然有效\r\n    componentWillMount() {\r\n        // 通过token换取用户信息\r\n        this.getMenuListByToken()\r\n\r\n        // this.getMenuList(userId)\r\n\r\n        this.showSelected()\r\n    }\r\n\r\n    // 通过token换取用户信息 并 用userId获取权限列表\r\n    getMenuListByToken = () => {\r\n        const accessToken = localStorage.getItem(\"token\")\r\n        getUserInfoByToken(accessToken).then(res => {\r\n            const userInfo = res.data.data\r\n            // console.log(\"==1 用户信息 \", userInfo)\r\n            this.setState({userInfo: userInfo})\r\n            // 根据userId获取菜单列表\r\n            if (userInfo) {\r\n                this.getMenuList(userInfo.userId)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取菜单数据\r\n    getMenuList = (userId) => {\r\n        getPermissionListByUserId(userId).then(res => {\r\n            const {data} = res.data\r\n            // console.log('获取菜单数据')\r\n            // console.log(data)\r\n            this.setState({menuList: data})\r\n        })\r\n    }\r\n\r\n    // 展开选中项并高亮。刷新后仍然有效\r\n    showSelected = () => {\r\n        // ( 刷新后 )选择默认展开项、高亮项\r\n        // props.location.pathname 取出当前页面的路径\r\n        const path = this.props.location.pathname\r\n        // console.log(\"==3\", path);\r\n        const openIndex = path.lastIndexOf(\"\\/\")\r\n        const openKeys = [path.substring(0, openIndex)]\r\n        const selectKeys = Array(this.props.location.pathname)\r\n\r\n        this.setState({openKeys})\r\n        this.setState({selectKeys})\r\n    }\r\n\r\n    checkPageElement = (item) => {\r\n        return \"MENU_ELEMENT\" === item.type ? true : false\r\n    }\r\n\r\n    // 渲染侧边栏菜单\r\n    renderMenu = (menuList) => {\r\n        // console.log('待渲染的侧边菜单：', menuList)\r\n        return menuList.map((item) => {\r\n            // 当前item为父菜单，并且有下级菜单\r\n            if (item.children.length > 0 && this.checkPageElement(item)) {\r\n                return <SubMenu key={item.routePath} title={item.title} icon={SIDE_MENU_ICON_LIST[item.routePath]}\r\n                                style={{\r\n                                    backgroundColor: `rgba(232, 140, 20, 0.05)`,\r\n                                }}>\r\n                    {this.renderMenu(item.children)}{/* 递归 */}\r\n                </SubMenu>\r\n            }\r\n            // 当前item为叶子菜单\r\n            return this.checkPageElement(item) && item.grade === 2 &&\r\n                <Menu.Item key={item.routePath}\r\n                           onClick={() => {\r\n                               this.props.history.push(item.routePath)\r\n                           }}\r\n                >{SIDE_MENU_ICON_LIST[item.routePath]}&nbsp;&nbsp;{item.title}\r\n                </Menu.Item>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Sider width={200}\r\n                   style={{backgroundColor: \"orange\"}}\r\n                   collapsed={this.props.isCollapsed} // 侧边菜单是否折叠\r\n            >\r\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\r\n                    {/* ============ 系统图标 ========== */}\r\n                    <div className='logo'>\r\n                        <OrangeIcon style={{\r\n                            width: 26,\r\n                            height: 22,\r\n                            marginBottom: -3,\r\n                        }}/>\r\n                        {!this.props.isCollapsed && <>橘集<br/>高校社团管理系统</>}\r\n                    </div>\r\n\r\n                    {/* ============ 系统菜单 ========== */}\r\n                    <div style={{\r\n                        height: \"100%\",\r\n                        overflowY: 'scroll',\r\n                    }}>\r\n                        <Menu theme=\"light\" mode=\"inline\"\r\n                              defaultSelectedKeys={this.state.selectKeys}\r\n                              defaultOpenKeys={this.state.openKeys}\r\n                              style={{height: '100%', borderRight: 0}}>\r\n                            <Menu.Item key={'systemHome'}\r\n                                       onClick={() => {\r\n                                           this.props.history.push('/#/manage/home')\r\n                                       }}\r\n                            >{SIDE_MENU_ICON_LIST['/manage/home']}&nbsp;&nbsp;HOME\r\n                            </Menu.Item>\r\n                            {this.renderMenu(this.state.menuList)}\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n            </Sider>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState2Props = ({CollapseReducer: {isCollapsed}}) => {\r\n    return {\r\n        isCollapsed\r\n    }\r\n}\r\n\r\nexport default connect(mapState2Props)(withRouter(SideMenu))","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\user-manage\\UserForm.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationEditor\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserHeader\\index.jsx",["296","297"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {Menu} from 'antd';\r\nimport UserSettings from \"../UserSettings\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ReactComponent as OrangeIcon} from \"../../icons/orange.svg\";\r\n\r\n\r\n//空菜单\r\nconst nullArray = new Array(5).fill(null);\r\n\r\n//“广场”菜单\r\nconst partMenuArray = [\r\n    {id: 1, value: '纳新广场'},\r\n    {id: 2, value: '社团风采'},\r\n    {id: 3, value: '活动广场'}\r\n];\r\n//用户菜单\r\nconst userMenuArray = [\r\n    {id: 1, value: '首页'},\r\n    {id: 2, value: '个人中心'}\r\n];\r\n\r\n\r\nexport default function UserHeader(props) {\r\n\r\n    const history = useHistory()\r\n    const [isUserMenu, setIsUserMenu] = useState(props.isUserMenu)\r\n\r\n    const [menuArray, setMenuArray] = useState(nullArray)\r\n\r\n    useEffect(() => {\r\n        //判断是否为用户菜单，展示props传递过来的相对应的菜单\r\n        isUserMenu ? setMenuArray(userMenuArray) : setMenuArray(partMenuArray);\r\n    })\r\n\r\n    return (\r\n        <div style={{\r\n            display: 'flex'\r\n        }}>\r\n            {/* ================ 头部导航菜单  ================ */}\r\n            <div style={{width: '100%'}}>\r\n                <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['0']} key='userMenu'>\r\n                    {/* ================ 系统图标 ================*/}\r\n                    <Menu.Item key={'systemIcon'} disabled>\r\n                        <OrangeIcon style={{\r\n                            width: 30,\r\n                            height: 30,\r\n                            marginTop: 10,\r\n                        }}/></Menu.Item>\r\n                    {menuArray.map((item, id) => {\r\n                        return <Menu.Item key={id} style={{height: 55}}>{item?.value}</Menu.Item>\r\n                    })}\r\n                </Menu>\r\n            </div>\r\n            {/* ================ 个人账号设置  ================ */}\r\n            <div style={{\r\n                position: 'absolute',\r\n                right: '3%',\r\n                top: '3%',\r\n            }}>\r\n                <UserSettings history={history}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationCard\\index.jsx",["298"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserManage\\index.jsx",["299","300","301"],"import React, { Component } from 'react'\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport UserInfo from '../UserInfo'\r\nimport UseHeader from '../UserHeader'\r\n\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <UseHeader isUserMenu={true} />\r\n                    <Layout>\r\n                        {/* 侧边栏 */}\r\n                        <Sider width={200} theme=\"light\">\r\n                            {/* 用户头像 */}\r\n                            <Avatar\r\n                                size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100, }}\r\n                                src='E:/image/uacs/user_headicon.jpg'\r\n                                icon={<UserOutlined />}\r\n                                alt='快来上传头像吧！'\r\n                                size='large'\r\n                                draggable={true}\r\n                                style={{marginLeft:'55px',marginTop:'30px',width:'100px',height:'100px'}}\r\n                            />\r\n                        </Sider>\r\n                        <Layout style={{ padding: '0 24px 24px' }}>\r\n                            {/* 面包屑 */}\r\n                            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                                <Breadcrumb.Item>个人中心</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>个人简历</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            {/* 用户信息 */}\r\n                            <UserInfo />\r\n                        </Layout>\r\n                    </Layout>\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",["302","303"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\BaseInfo.js",[],["304","305"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\baseInfo.js",["306","307","308","309","310","311","312","313","314","315","316","317","318","319"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\state.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\index.js",["320","321","322"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\EditableCell.js",["323","324"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\hooks\\usePublish.js",["325","326"],"import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {RECRUITMENT_STATE, RECRUITMENT_STATE_MAP} from \"../constants/state\";\r\nimport {listRecruitmentByUserId} from \"../services/db\";\r\n\r\nfunction usePublish() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n\r\n    useEffect(() => {\r\n        listRecruitmentByUserId(userInfo.userId)\r\n            .then(res => {\r\n                console.log(\"==27 resData\", res.data.data);\r\n                setDataSource(res.data.data)\r\n            }).catch(err => {\r\n            console.log(\"==26 err\", err);\r\n        })\r\n    }, [])\r\n\r\n    const handleRollback = (recruitmentId) => {\r\n\r\n    }\r\n\r\n    const handleDelete = (recruitmentId) => {\r\n\r\n    }\r\n\r\n    const handlePass = (recruitmentId) => {\r\n        axios({\r\n            url: '/association/updateRecruitmentState',\r\n            method: 'post',\r\n            data: {\r\n                recruitmentId: recruitmentId,\r\n                state: RECRUITMENT_STATE.EXAMINE_PASS.value\r\n            },\r\n            headers: {'Content-Type': 'application/json;charset=UTF-8'}\r\n        }).then(res => {\r\n            console.log(\"==20 usePublish\", res.data)\r\n        }).catch(err => {\r\n            console.log(\"==20 usePublish\", err)\r\n        })\r\n    }\r\n\r\n    const handleRefuse = (recruitmentId) => {\r\n\r\n    }\r\n\r\n    return {dataSource, handleRollback, handleDelete, handlePass, handleRefuse}\r\n}\r\n\r\nexport default usePublish","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\type.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\db.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\store.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\CollapseReducer.js",["327"],"import {REDUXSTATE} from \"../../constants/redux\";\r\n\r\nexport const CollapseReducer = (preState = {\r\n    isCollapsed: false\r\n}, action) => {\r\n    let {type} = action\r\n    switch (type) {\r\n        case REDUXSTATE.CHANGE_COLLAPSED.type:\r\n            let newState = {...preState}\r\n            newState.isCollapsed = !newState.isCollapsed\r\n            console.log(newState.isCollapsed ? '折叠' : '展开')\r\n            return newState\r\n        default:\r\n            // console.log(\"未找到对应的action\")\r\n            return preState\r\n    }\r\n    return preState\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\LoadingReducer.js",["328"],"import {REDUXSTATE} from \"../../constants/redux\";\r\n\r\nexport const LoadingReducer = (preState = {\r\n    isLoading: false\r\n}, action) => {\r\n    let {type, payload} = action\r\n    switch (type) {\r\n        case REDUXSTATE.CHANGE_ISLOADING.type:\r\n            let newState = {...preState}\r\n            newState.isLoading = payload\r\n            return newState\r\n        default:\r\n            // console.log(\"未找到对应的action\")\r\n            return preState\r\n    }\r\n    return preState\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\redux.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\util\\http.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserSettings\\index.jsx",["329","330"],"import React, {useEffect, useState} from \"react\";\r\nimport {Avatar, Col, Dropdown, Form, Input, Menu, message, Modal, Row, Space, Switch} from \"antd\";\r\nimport Icon, {DownOutlined, UserOutlined, UserSwitchOutlined} from \"@ant-design/icons\";\r\nimport {ReactComponent as UserSettingsIcon} from \"../../icons/user-settings.svg\";\r\nimport {ReactComponent as LogoutIcon} from \"../../icons/logout.svg\";\r\nimport {getUserInfo, updateUserSettings} from \"../../services/userService\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport default function UserSettings(props) {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const history = useHistory()\r\n\r\n    // 个人设置\r\n    const [userForm] = Form.useForm()\r\n    const [settingsModalVisible, setSettingsModalVisible] = useState(false)\r\n    const [confirmLoading, setConfirmLoading] = useState(false)\r\n    const [passwordReseting, setPasswordReseting] = useState(false)\r\n\r\n    // 通过token换取用户信息\r\n    useEffect(() => {\r\n        getUserInfo(userInfo.accessToken).then(res => {\r\n            const {data} = res.data\r\n            if (!data) {\r\n                message.error(\"会话超时，请重新登录！\")\r\n                setTimeout(() => {\r\n                    history.push(\"/login\")\r\n                }, 1500)\r\n            }\r\n        })\r\n    }, [userInfo])\r\n\r\n    const menu = ( // 顶部菜单结构\r\n        <Menu key='systemOptions'>\r\n            {/* ====== 个人设置 ====== */}\r\n            <Menu.Item key='userSettings' onClick={() => {\r\n                getUserInfo(userInfo.accessToken).then(res => {\r\n                    const {data} = res.data\r\n                    userForm.setFieldsValue({\r\n                        name: data.name,\r\n                        userId: data.userId,\r\n                        phone: data.phone,\r\n                        email: data.email,\r\n                    })\r\n                    setSettingsModalVisible(true)\r\n                })\r\n            }}>\r\n                <Icon component={UserSettingsIcon}/> 个人设置\r\n            </Menu.Item>\r\n            {/* ====== 注销系统 ====== */}\r\n            <Menu.Item key='logout' danger onClick={() => {\r\n                localStorage.removeItem(\"token\") // 去除浏览器中的token\r\n                localStorage.removeItem(\"userInfo\") // 去除浏览器中的userInfo\r\n                message.success(\"注销成功！\")\r\n                setTimeout(() => {\r\n                    props.history.replace(\"/login\") // 重定向到登录界面\r\n                }, 500)\r\n            }}>\r\n                <Icon component={LogoutIcon}/> 退出系统\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const cleanPasswordForm = () => {\r\n        userForm.setFieldsValue({\r\n            password: '',\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n        })\r\n    }\r\n\r\n    const handleOk = () => {\r\n        setConfirmLoading(true);\r\n        userForm.validateFields()\r\n            .then(() => {\r\n                updateUserSettings(userForm.getFieldsValue())\r\n                    .then((res) => {\r\n                        message.success(\"更新成功！\")\r\n                        setSettingsModalVisible(false)\r\n                        setConfirmLoading(false)\r\n                        setPasswordReseting(false)\r\n                        // 更新成功，清空密码部分表单信息\r\n                        cleanPasswordForm()\r\n                    })\r\n                    .catch(() => { // 异步更新用户信息失败\r\n                        setConfirmLoading(false)\r\n                    })\r\n            })\r\n            .catch(() => { // 表单校验失败\r\n                setConfirmLoading(false)\r\n            })\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setSettingsModalVisible(false)\r\n        setPasswordReseting(false)\r\n        cleanPasswordForm()\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{float: \"right\"}}>\r\n            <Space size={\"middle\"}>\r\n                <UserSwitchOutlined/>\r\n                {/* ========== 切换使用者身份开关 ========== */}\r\n                <Switch\r\n                    checkedChildren=\"USER\"\r\n                    unCheckedChildren=\"MANAGER\"\r\n                    defaultChecked={props.history.location.pathname.substring(0, 5) === '/user'}\r\n                    onClick={() => {\r\n                        if (props.history.location.pathname.substring(0, 5) === '/user') {\r\n                            props.history.replace(\"/manage\") // 重定向到管理页面\r\n                            return\r\n                        }\r\n                        props.history.replace(\"/user\") // 重定向到用户界面\r\n                    }}\r\n                />\r\n                {/* ========== 欢迎信息 ========== */}\r\n                {userInfo &&\r\n                <div>您好 <span style={{color: 'orange'}}>{userInfo.name}</span></div>\r\n                }\r\n                {/* ========== 下拉菜单 ========== */}\r\n                <Dropdown overlay={menu}>\r\n                    <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                        <Avatar size={28} icon={<UserOutlined/>}/>&nbsp;&nbsp;&nbsp;\r\n                        <DownOutlined/>\r\n                    </a>\r\n                </Dropdown>\r\n            </Space>\r\n            {/*   =============================   个人设置模态框   =============================   */}\r\n            <Modal visible={settingsModalVisible} title=\"账号设置\" width={680}\r\n                   confirmLoading={confirmLoading}\r\n                   onOk={handleOk}\r\n                   onCancel={handleCancel}\r\n            >\r\n                <Form form={userForm}\r\n                      name=\"settings\"\r\n                      layout={\"horizontal\"}\r\n                      labelCol={{span: 8,}}\r\n                      wrapperCol={{span: 16,}}\r\n                >\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <Form.Item label=\"名字\" name=\"name\"\r\n                                       rules={[{required: true, message: '该项不得为空！'}]}\r\n                            ><Input allowClear/></Form.Item>\r\n                        </Col>\r\n                        <Col span={10} push={2}>\r\n                            <Form.Item label=\"学号\" name=\"userId\"\r\n                                       rules={[{required: true, message: '该项不得为空！'}]}>\r\n                                <Input disabled={true}/>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <Form.Item label=\"手机号\" name=\"phone\"\r\n                                       rules={[{\r\n                                           pattern: /^((\\+)?86|((\\+)?86)?)0?1[3458]\\d{9}$/,\r\n                                           message: '手机号格式错误'\r\n                                       }]}\r\n                            ><Input allowClear/></Form.Item>\r\n                        </Col>\r\n                        <Col span={10} push={2}>\r\n                            <Form.Item label=\"邮箱\" name=\"email\"><Input allowClear/></Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <Form.Item label=\"原密码\" name=\"password\"\r\n                                       rules={[{required: true, message: '该项不得为空！'}]}\r\n                            ><Input.Password/></Form.Item>\r\n                        </Col>\r\n                        {/*重置密码开关*/}\r\n                        <Col span={10} push={2}>\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                marginTop: 5\r\n                            }}>\r\n                                <div style={{marginLeft: 18}}>修改密码？</div>\r\n                                <div style={{marginLeft: 8}}>\r\n                                    <Switch checked={passwordReseting} onChange={() => {\r\n                                        setPasswordReseting(!passwordReseting)\r\n                                    }}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <div style={passwordReseting ? {} : {display: 'none'}}>\r\n                        <Row>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"新密码\" name=\"newPassword\"\r\n                                           rules={passwordReseting\r\n                                               ? [\r\n                                                   {required: true, message: '该项不得为空！'},\r\n                                                   {\r\n                                                       pattern: /^[a-zA-Z]\\w{5,17}$/,\r\n                                                       message: '密码必须为字母开头、长度[6,18]、仅含字母、数字和下划线的字符'\r\n                                                   }\r\n                                               ]\r\n                                               : []}\r\n                                ><Input.Password/></Form.Item>\r\n                            </Col>\r\n                            <Col span={10} push={2}>\r\n                                <Form.Item label=\"确认密码\" name=\"confirmPassword\"\r\n                                           rules={passwordReseting\r\n                                               ? [\r\n                                                   {required: true, message: '该项不得为空！'},\r\n                                                   ({getFieldValue}) => ({\r\n                                                       validator(_, value) {\r\n                                                           if (!value || getFieldValue('newPassword') === value) {\r\n                                                               return Promise.resolve();\r\n                                                           }\r\n                                                           return Promise.reject(new Error('两次输入密码必须保持一致！'));\r\n                                                       },\r\n                                                   }),\r\n                                               ]\r\n                                               : []}\r\n                                ><Input.Password/></Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\UserBox\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AppRouter\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationSquare\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\index.js",["331"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Home\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Login\\index.js",["332","333","334","335"],"import React, {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Button, Form, Input, Layout, message,} from 'antd';\r\n\r\nimport {UnlockOutlined, UserOutlined,} from '@ant-design/icons';\r\n\r\nimport Particles from 'react-particles-js';\r\n\r\nimport './index.css'\r\nimport {login} from \"../../../services/userService\";\r\n\r\nexport default function Login(props) {\r\n\r\n    const history = useHistory()\r\n\r\n    const formatUserInfo = (userInfo) => {\r\n        const manageAssociationKeys = []\r\n        userInfo.roleList.map(role=>{\r\n            if(role.roleName == '社团管理员'){\r\n                manageAssociationKeys.push(role.associationId)\r\n            }\r\n        })\r\n        return {...userInfo,manageAssociationKeys}\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        localStorage.removeItem(\"token\") // 将原有的token移除\r\n        localStorage.removeItem(\"userInfo\") // 将原有的userInfo移除\r\n        login(values).then(res => {\r\n            const userInfo = res.data.data\r\n            if (!userInfo) {\r\n                message.error(\"用户名或密码输入错误！\") // 验证失败，提示用户\r\n                return\r\n            }\r\n            // 如果data非空,说明验证成功\r\n            localStorage.setItem(\"token\", res.data.data.accessToken) // 将token保存到浏览器中\r\n            // 为便于权限控制，对用户信息进行二次处理\r\n            const formattedUserInfo = formatUserInfo(userInfo)\r\n            localStorage.setItem(\"userInfo\", JSON.stringify(formattedUserInfo)) // 将userLoginInfo保存到浏览器中\r\n            message.success(\"登录成功，跳转中...\")\r\n            setTimeout(() => {\r\n                history.push(\"/\") // 跳转到主页面\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginBackGround\">\r\n            {/*粒子效果*/}\r\n            <Particles\r\n                // 粒子效果高度为当前元素高度\r\n                height={document.documentElement.clientHeight}\r\n                // 粒子效果参数\r\n                params={\r\n                    {\r\n                        \"background\": {\r\n                            \"color\": {\r\n                                \"value\": \"navajowhite\"\r\n                            },\r\n                            \"image\": \"url('/images/rainbow_cat.gif')\",\r\n                            \"position\": \"0 15%\",\r\n                            \"repeat\": \"no-repeat\",\r\n                            \"size\": \"60%\"\r\n                        },\r\n                        \"fullScreen\": {\r\n                            \"enable\": true,\r\n                            \"zIndex\": 1\r\n                        },\r\n                        \"interactivity\": {\r\n                            \"events\": {\r\n                                \"onClick\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"repulse\"\r\n                                },\r\n                                \"onHover\": {\r\n                                    \"mode\": \"grab\"\r\n                                }\r\n                            },\r\n                            \"modes\": {\r\n                                \"bubble\": {\r\n                                    \"distance\": 400,\r\n                                    \"duration\": 2,\r\n                                    \"opacity\": 8,\r\n                                    \"size\": 40\r\n                                },\r\n                                \"grab\": {\r\n                                    \"distance\": 200\r\n                                }\r\n                            }\r\n                        },\r\n                        \"particles\": {\r\n                            \"color\": {\r\n                                \"value\": \"#ffffff\"\r\n                            },\r\n                            \"links\": {\r\n                                \"color\": {\r\n                                    \"value\": \"#ffffff\"\r\n                                },\r\n                                \"distance\": 150,\r\n                                \"opacity\": 0.4\r\n                            },\r\n                            \"move\": {\r\n                                \"attract\": {\r\n                                    \"rotate\": {\r\n                                        \"x\": 600,\r\n                                        \"y\": 1200\r\n                                    }\r\n                                },\r\n                                \"direction\": \"left\",\r\n                                \"enable\": true,\r\n                                \"outModes\": {\r\n                                    \"bottom\": \"out\",\r\n                                    \"left\": \"out\",\r\n                                    \"right\": \"out\",\r\n                                    \"top\": \"out\"\r\n                                },\r\n                                \"speed\": 6,\r\n                                \"straight\": true\r\n                            },\r\n                            \"opacity\": {\r\n                                \"value\": 0.5,\r\n                                \"animation\": {\r\n                                    \"speed\": 1,\r\n                                    \"minimumValue\": 0.1\r\n                                }\r\n                            },\r\n                            \"shape\": {\r\n                                \"options\": {\r\n                                    \"star\": {\r\n                                        \"sides\": 5\r\n                                    }\r\n                                },\r\n                                \"type\": \"star\"\r\n                            },\r\n                            \"size\": {\r\n                                \"random\": {\r\n                                    \"enable\": true\r\n                                },\r\n                                \"value\": {\r\n                                    \"min\": 1,\r\n                                    \"max\": 4\r\n                                },\r\n                                \"animation\": {\r\n                                    \"speed\": 40,\r\n                                    \"minimumValue\": 0.1\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            />\r\n            <div className=\"userFormContainer\">\r\n                <div className=\"loginTitle\">UACS社团管理-橘集</div>\r\n                <Form labelCol={{span: 4,}}\r\n                      onFinish={onFinish}\r\n                >\r\n                    <Form.Item name=\"userId\">\r\n                        <Input placeholder=\"请输入学号/职工号\" id=\"userId\" prefix={<UserOutlined/>}/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password\">\r\n                        <Input.Password placeholder=\"请输入密码\" id=\"password\" prefix={<UnlockOutlined/>}/>\r\n                    </Form.Item>\r\n                    <Form.Item style={{paddingLeft: '50%',}}>\r\n                        <Button type={\"primary\"} htmlType={\"submit\"}>登录</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\NoPermission\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\shareService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\userService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\index.js",["336","337","338"],"// 第三方\r\nimport React, {useEffect} from 'react'\r\n// uacs\r\nimport SideMenu from '../../../components/SideMenu'\r\nimport TopHeader from '../../../components/TopHeader'\r\nimport SysRouter from './SysRouter'\r\n// css\r\nimport './index.css'\r\n// antd\r\nimport {Layout, message} from 'antd';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst {Content} = Layout;\r\n\r\n\r\nexport default function SandBox() {\r\n\r\n    return (\r\n        <Layout>\r\n            {/* 侧边栏 */}\r\n            <SideMenu/>\r\n            {/* 内容布局 */}\r\n            <Layout>\r\n                {/* 头部导航栏 */}\r\n                <TopHeader/>\r\n                {/* 前端路由 */}\r\n                <Content style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 240,\r\n                    overflow: 'auto'\r\n                }}>\r\n                    <SysRouter></SysRouter>\r\n                </Content>\r\n\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\ShareDetail\\index.js",["339","340","341","342"],"import React, {useEffect, useState} from 'react'\r\nimport {Button, Descriptions, Modal, PageHeader} from 'antd'\r\n\r\nimport {\r\n    RECRUITMENT_PUBLISH_STATE_LIST,\r\n    RECRUITMENT_PUBLISH_STATE_MAP,\r\n    RECRUITMENT_STATE_MAP\r\n} from '../../../../../constants/state'\r\nimport {listRecruitment} from \"../../../../../services/db\";\r\nimport axios from \"axios\";\r\nimport {getShareById} from \"../../../../../services/shareService\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function ShareDetail(props) {\r\n\r\n    const [shareInfo, setShareInfo] = useState()\r\n\r\n    // 获取用户列表\r\n    useEffect(() => {\r\n        // 如何获取url地址中的参数？\r\n        getShareById(props.match.params.shareId)\r\n            .then(res => {\r\n                const {data} = res.data\r\n                console.log(data)\r\n                setShareInfo(data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"site-page-header-ghost-wrapper\">\r\n            {/* =============== 纳新通知基本信息 =============== */}\r\n            {shareInfo &&\r\n            <PageHeader\r\n                ghost={false}\r\n                onBack={() => window.history.back()}\r\n                title=\"纳新详情\"\r\n                subTitle={shareInfo.title}\r\n                extra={[\r\n                    <Button key=\"3\">打回</Button>,\r\n                    <Button key=\"1\" type=\"primary\">通过审核</Button>,\r\n                ]}\r\n            >\r\n                <Descriptions size=\"small\" column={3}>\r\n                    <Descriptions.Item label=\"纳新社团\">{shareInfo.associationName}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"申请人\">{shareInfo.name}</Descriptions.Item>\r\n                    <Descriptions.Item\r\n                        label=\"审核状态\">{RECRUITMENT_STATE_MAP.get(shareInfo.state)}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"发布状态\">\r\n                        {RECRUITMENT_PUBLISH_STATE_MAP.get(shareInfo.state)\r\n                            ? RECRUITMENT_PUBLISH_STATE_MAP.get(shareInfo.state)\r\n                            : RECRUITMENT_PUBLISH_STATE_LIST.UNPUBLISH.name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"备注\">{shareInfo.description}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"浏览量\">{shareInfo.view}</Descriptions.Item>\r\n                </Descriptions>\r\n\r\n                {/* 纳新通知展示信息 */}\r\n                <div dangerouslySetInnerHTML={{\r\n                    __html: shareInfo.shareContent\r\n                }}\r\n                     style={{\r\n                         margin: '24px 24px',\r\n                         border: '1px solid gray',\r\n                     }}>\r\n                </div>\r\n            </PageHeader>\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\SysRouter\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\index.js",["343","344","345","346","347","348"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, Modal, Popover, Space, Table, Tooltip} from 'antd'\r\nimport {\r\n    CloseOutlined, DeleteOutlined, ExclamationCircleOutlined,\r\n    RollbackOutlined, CheckOutlined\r\n} from '@ant-design/icons';\r\nimport usePublish from \"../../../../hooks/usePublish\";\r\nimport {ROLE_TYPE} from \"../../../../constants/type\";\r\nimport axios from \"axios\";\r\nimport {getShareList} from \"../../../../services/shareService\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function ShareManage() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [shareList, setShareList] = useState([])\r\n\r\n    useEffect(() => {\r\n        getShareList().then(res => {\r\n            const {data} = res.data\r\n            setShareList(data)\r\n        })\r\n    }, [])\r\n\r\n    const handelShareUpdate = (shareId) => {\r\n        console.log(shareId)\r\n    }\r\n\r\n    const renderOptions = (item) => {\r\n        let isSuperAdmin = false\r\n        const hasRoleList = userInfo.roleList\r\n        hasRoleList.map(role => {\r\n            if (role.roleName === ROLE_TYPE.SUPER_ADMIN.name) {\r\n                isSuperAdmin = true\r\n                return\r\n            }\r\n        })\r\n        return <Space>\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => handelShareUpdate(item.shareId)}>撤销</Button>}\r\n\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<DeleteOutlined/>}\r\n                    onClick={() => handelShareUpdate(item.shareId)}>删除</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" icon={<CheckOutlined/>}\r\n                    onClick={() => handelShareUpdate(item.shareId)}>通过</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<CloseOutlined/>}\r\n                    onClick={() => handelShareUpdate(item.shareId)}>拒绝</Button>}\r\n        </Space>\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'shareId',\r\n            render(shareId) {\r\n                return <b>{shareId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '标题',\r\n            dataIndex: 'title',\r\n            render(title, item) {\r\n                return <Tooltip title=\"点击查看详情\">\r\n                    <a href={`#/manage/share/list/${item.shareId}`}\r\n                    >{title}</a>\r\n                </Tooltip>;\r\n            }\r\n        },\r\n        {\r\n            title: '所在社团',\r\n            dataIndex: 'associationName',\r\n        },\r\n        {\r\n            title: '申请人',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case \"UNEXAMINE\":\r\n                        return <Badge status=\"warning\" text=\"未提交\"/>\r\n                    case \"EXAMINING\":\r\n                        return <Badge status=\"processing\" text=\"审核中\"/>\r\n                    case \"EXAMINE_PASS\":\r\n                        return <Badge status=\"success\" text=\"审核通过\"/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={shareList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 6\r\n                }}\r\n                rowKey={item => item.shareId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\AddShare\\index.js",["349"],"import {useEffect, useRef, useState} from \"react\";\r\nimport {Button, Form, Input, message, notification, PageHeader, Select, Steps} from 'antd'\r\nimport axios from \"axios\";\r\nimport qs from 'querystring'\r\n\r\nimport AssociationEditor from '../../../../../components/AssociationEditor'\r\nimport style from './index.css'\r\n\r\nconst {Step} = Steps;\r\nconst {TextArea} = Input\r\nconst {Option} = Select;\r\n\r\n// 点击“仅保存“或”提交审核“的key和btn\r\nconst key = `open${Date.now()}`;\r\nconst btn = (\r\n    <Button type=\"primary\" size=\"small\" onClick={() => notification.close(key)}>\r\n        我知道了\r\n    </Button>\r\n);\r\n\r\n\r\nexport default function AddShare(props) {\r\n\r\n    // 可选项、用户信息展示\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [associationList, setAssociationList] = useState([])\r\n\r\n    // 交互逻辑\r\n    const [currentStep, setCurrentStep] = useState(0) // 撰写纳新展示信息 步骤 位置\r\n\r\n    // 信息收集\r\n    const baseInfoFormRef = useRef()\r\n    const [content4Show, setContent4Show] = useState()\r\n    const [baseInfoForm, setBaseInfoForm] = useState()\r\n\r\n    // 获取本用户管理的社团（才能撰写纳新信息/通知/展示）\r\n    useEffect(() => {\r\n        const data = {\r\n            userId: userInfo.userId,\r\n            // TODO 多个角色怎么判断？\r\n            roleIds: [2],\r\n        }\r\n        axios.post('/association/getAssociationByUserId',\r\n            qs.stringify(data))\r\n            .then(res => {\r\n                const associationList = res.data.data\r\n                setAssociationList(associationList)\r\n            })\r\n    }, [])\r\n\r\n    const toPrevious = () => {\r\n        setCurrentStep(currentStep - 1)\r\n    }\r\n\r\n    const toNext = () => {\r\n        // 校验第一步：基本信息\r\n        if (currentStep === 0) {\r\n            baseInfoFormRef.current.validateFields().then(res => {\r\n                setBaseInfoForm(res)\r\n                setCurrentStep(currentStep + 1)\r\n            })\r\n        } else {\r\n            if (!content4Show || content4Show === \"\" || content4Show.trim() === \"<p></p>\") {\r\n                message.error(\"社团经历分享内容不得为空！\")\r\n                return\r\n            }\r\n            setCurrentStep(currentStep + 1)\r\n        }\r\n    }\r\n\r\n    const handleCommit = (state) => {\r\n        const postData = {\r\n            userId: userInfo.userId, // 申请人ID\r\n            ...baseInfoForm, // 基本信息\r\n            shareContent: content4Show, // 展示的信息\r\n            state: state, // 默认初始状态为未审核\r\n        }\r\n        console.log(postData)\r\n        axios({\r\n            url: '/bulletin/addShare',\r\n            method: 'post',\r\n            data: postData,\r\n            headers: {'Content-Type': 'application/json;charset=UTF-8'}\r\n        }).then(() => {\r\n            notification.open({\r\n                message: state === 'UNEXAMINE' ? '保存成功' : '审核提交成功',\r\n                description: `您可以到 纳新信息列表 查看${state === 'UNEXAMINE' ? '保存' : '审核'}结果`,\r\n                btn,\r\n                key,\r\n            });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader title=\"发布社团经历分享\" subTitle=\"与同学们分享你精彩的社团经历吧~\"/>\r\n            <Steps current={currentStep}>\r\n                <Step title=\"基本信息\" description=\"纳新人数，起始时间等\"/>\r\n                <Step title=\"展示内容\" subTitle=\"二级标题\" description=\"纳新通知的信息内容等\"/>\r\n                <Step title=\"保存/提交\" description=\"仅保存或提交等待审核\"/>\r\n            </Steps>\r\n            {/*内容组*/}\r\n            <div className={style.contentGroup} style={{marginTop: '50px',}}>\r\n                {/*step1 基本信息 =====================================*/}\r\n                <div style={currentStep === 0 ? {} : {display: 'none',}}>\r\n                    <Form\r\n                        // form={shareFormRef}\r\n                        name=\"basic\"\r\n                        labelCol={{span: 4,}}\r\n                        wrapperCol={{span: 20,}}\r\n                        ref={baseInfoFormRef}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"分享标题\"\r\n                            name=\"title\"\r\n                            rules={\r\n                                [{required: true, message: '请输入分享标题',}]\r\n                            }\r\n                        >\r\n                            <Input type=\"text\"/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"想要分享的社团\" name=\"associationId\">\r\n                            {<Select style={{width: 240}}>\r\n                                {associationList.map(association => {\r\n                                    return<Option key={association.associationId}\r\n                                                  value={association.associationId}\r\n                                    >{association.associationName}</Option>\r\n                                })}\r\n                            </Select>}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\" name=\"description\">\r\n                            <TextArea rows={4} placeholder={\"若需求请填写备注信息\"}/>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n\r\n\r\n                {/* ===================================== step2 社团纳新展示信息 ===================================== */\r\n                }\r\n                <div style={currentStep === 1 ? {} : {display: 'none',}}>\r\n                    <AssociationEditor\r\n                        // 子传父 获取 富文本编辑器内容\r\n                        getContent={(value) => {\r\n                            console.log(value)\r\n                            setContent4Show(value)\r\n                        }}/>\r\n                </div>\r\n\r\n                {/* ============================== step3 保存或提交审核 =====================================*/\r\n                }\r\n                <div style={currentStep === 2 ? {} : {display: 'none',}}></div>\r\n            </div>\r\n\r\n            {/* =============== 按钮组 ===============*/}\r\n            <div style={{marginTop: '50px',}}>\r\n                {\r\n                    currentStep > 0 && <Button\r\n                        type=\"ghost\"\r\n                        onClick={toPrevious}\r\n                    >上一步</Button>\r\n                }\r\n                {\r\n                    currentStep < 2 && <Button\r\n                        type=\"primary\"\r\n                        onClick={toNext}\r\n                    >下一步</Button>\r\n                }\r\n\r\n                {/*============================== 最后一步 保存或提交 ================*/}\r\n                {\r\n                    currentStep === 2 && <div style={{\r\n                        position: 'fixed',\r\n                        bottom: '10%',\r\n                        right: '10%',\r\n                    }}>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => handleCommit(\"UNEXAMINE\")}\r\n                        >\r\n                            仅保存\r\n                        </Button>\r\n                        <Button danger={true}\r\n                                onClick={() => handleCommit(\"EXAMINING\")}\r\n                        >\r\n                            提交审核\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\PermissionList\\index.js",["350"],"import React, {Component} from 'react'\r\nimport {Button, Modal, Popover, Switch, Table, Tag} from 'antd'\r\nimport {DeleteOutlined, EditOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport {getPermissionList, updatePermissionById} from \"../../../../../services/db\";\r\n\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default class PermissonList extends Component {\r\n\r\n    state = {\r\n        dataSource: [],\r\n        columns: [\r\n            {\r\n                title: 'ID',\r\n                // 通过dataIndex映射VO字段\r\n                dataIndex: 'key',\r\n                // key: 'key',\r\n                render: (key) => {\r\n                    return <b>{key}</b>\r\n                }\r\n            },\r\n            {\r\n                title: '权限名称',\r\n                dataIndex: 'title',\r\n            },\r\n            {\r\n                title: '权限路径',\r\n                dataIndex: 'routePath',\r\n                render: (routePath) => {\r\n                    return <Tag color={\"orange\"}>{routePath}</Tag>\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (item) => {\r\n                    return <div>\r\n                        <Popover\r\n                            style={{}}\r\n                            content={\r\n                                <div>\r\n                                    <Switch checked={item.type === \"MENU_ELEMENT\"}\r\n                                            onClick={() => this.changeMenuState(item)}></Switch>\r\n                                </div>}\r\n                            title=\"是否在左侧菜单栏展示\"\r\n                            trigger={\r\n                                item.type === \"MENU_ELEMENT\" || item.type === \"MENU_ELEMENT_CLOSE\" ?\r\n                                    \"click\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            {/* {item.type === \"MENU_ELEMENT\" &&} */}\r\n                            <Button\r\n                                shape={\"circle\"}\r\n                                icon={<EditOutlined/>}\r\n                                // style={item.type === \"MENU_ELEMENT\" ? {\r\n                                //     border: \"1px solid rgb(165, 99, 13)\",\r\n                                //     color: \"rgb(165, 99, 13)\"\r\n                                // } : { border: \"1px\" }}\r\n                                // disabled={item.type === \"PAGE_ELEMENT\"}\r\n                            >\r\n                            </Button>\r\n                        </Popover>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<DeleteOutlined/>}\r\n                            danger\r\n                            onClick={() => this.confirmDelete(item)}\r\n                        >\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            },\r\n        ],\r\n    }\r\n\r\n\r\n    confirmDelete = (item) => {\r\n        // const { dataSource } = this.state\r\n        // console.log(\"==11 dataSource\",this.state.dataSource);\r\n        const {dataSource} = this.state\r\n        const thisPoint = this\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                let ds = []\r\n                if (item.grade === 1) {\r\n                    ds = dataSource.filter(data => data.key !== item.key)\r\n                } else if (item.grade === 2) {\r\n                    dataSource.map((firstPermission) => {\r\n                        if (firstPermission.children !== \"\") {\r\n                            firstPermission.children = firstPermission.children.filter((child) => child.key !== item.key)\r\n                            if (firstPermission.children.length === 0) {\r\n                                firstPermission.children = \"\"\r\n                            }\r\n                            ds.push(firstPermission)\r\n                            // console.log(\"==14 after push:\", ds);\r\n                        } else {\r\n                            ds.push(firstPermission)\r\n                        }\r\n\r\n                    })\r\n                }\r\n                thisPoint.setState({dataSource: ds})\r\n                // 调用后端接口，同步后台数据库\r\n                axios.get(`/association/deletePermissionById/${item.key}`)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 改变菜单项的状态。是否在左侧菜单栏展示\r\n    changeMenuState = (item) => {\r\n        console.log(\"==15 item\", item);\r\n        if (item.type === \"MENU_ELEMENT\") {\r\n            item.type = \"MENU_ELEMENT_CLOSE\"\r\n        } else if (item.type === \"MENU_ELEMENT_CLOSE\") {\r\n            item.type = \"MENU_ELEMENT\"\r\n        }\r\n        this.setState([...this.state.dataSource])\r\n\r\n        const data = {\r\n            permissionId: item.key,\r\n            type: item.type\r\n        }\r\n        updatePermissionById(data)// 同步后端\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // 获取菜单信息\r\n        getPermissionList().then(res => {\r\n            console.log(\"权限列表\",res.data.data)\r\n            const {data} = res.data // res.data还只是responseBody\r\n            data.forEach((item) => {\r\n                if (item.children.length === 0) {\r\n                    item.children = \"\"\r\n                } else {\r\n                    item.children.forEach((e) => {\r\n                        if (e.children.length === 0) {\r\n                            e.children = \"\"\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            this.setState({dataSource: data})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table\r\n                    dataSource={this.state.dataSource}\r\n                    columns={this.state.columns}\r\n                    pagination={{\r\n                        pageSize: 5\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationList\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\ClassList\\index.js",["351","352","353","354","355","356","357","358"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\AddRecruitment\\index.js",["359","360","361","362"],"import {useEffect, useRef, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    DatePicker,\r\n    Form,\r\n    Input,\r\n    InputNumber,\r\n    message,\r\n    notification,\r\n    PageHeader,\r\n    Select,\r\n    Space,\r\n    Steps\r\n} from 'antd'\r\n\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\nimport axios from \"axios\";\r\nimport qs from 'querystring'\r\n\r\nimport moment from 'moment'\r\n\r\nimport AssociationEditor from \"../../../../../components/AssociationEditor\";\r\nimport style from './index.css'\r\nimport {getAssociationByUserId} from \"../../../../../services/db\";\r\n\r\n\r\nconst {Step} = Steps;\r\n\r\nconst {RangePicker} = DatePicker;\r\n\r\nconst {TextArea} = Input\r\n\r\nconst {Option} = Select;\r\n\r\n// 点击“仅保存“或”提交审核“的key和btn\r\nconst key = `open${Date.now()}`;\r\nconst btn = (\r\n    <Button type=\"primary\" size=\"small\" onClick={() => notification.close(key)}>\r\n        我知道了\r\n    </Button>\r\n);\r\n\r\nexport default function AddRecruitment(props) {\r\n\r\n    // 展示\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [associationList, setAssociationList] = useState([])\r\n\r\n    // 交互逻辑\r\n    const [currentStep, setCurrentStep] = useState(0) // 撰写纳新展示信息 步骤 位置\r\n    const baseInfoFormRef = useRef(null)\r\n\r\n    // step1 : baseInfo\r\n    const [newAssociation, setNewAssociation] = useState(0) // 纳新的社团组织\r\n    const [newNum, setNewNum] = useState(30);// 社团纳新人数\r\n    const [newStartTime, setNewStartTime] = useState(\"\") //纳新开始时间\r\n    const [newEndTime, setNewEndTime] = useState(\"\") //纳新结束时间\r\n    const [baseInfoForm, setBaseInfoForm] = useState({})\r\n    // step2 : content for show\r\n    const [content4Show, setContent4Show] = useState(\"\")\r\n\r\n\r\n    // 获取本用户管理的社团（才能撰写纳新信息/通知/展示）\r\n    useEffect(() => {\r\n        const data = {\r\n            userId: userInfo.userId,\r\n            roleIds: [2],\r\n        }\r\n        getAssociationByUserId(data)\r\n            .then(res => {\r\n                const associationList = res.data.data\r\n                setAssociationList(associationList)\r\n            })\r\n    }, [])\r\n\r\n    const toPrevious = () => {\r\n        setCurrentStep(currentStep - 1)\r\n    }\r\n\r\n    const toNext = () => {\r\n        // 校验第一步：基本信息\r\n        if (currentStep === 0) {\r\n            baseInfoFormRef.current.validateFields().then(res => {\r\n                console.log(\"==1 AddRecrutment 校验结果：\", res)\r\n                setBaseInfoForm(res)\r\n                setCurrentStep(currentStep + 1)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            if (content4Show === \"\" || content4Show.trim() === \"<p></p>\") {\r\n                message.error(\"社团纳新展示内容不得为空\")\r\n                return\r\n            }\r\n            console.log(\"收集的信息：\", baseInfoForm, content4Show)\r\n            setCurrentStep(currentStep + 1)\r\n        }\r\n    }\r\n\r\n\r\n    const onChange = (dates, dateStrings) => {\r\n        console.log('From: ', dates[0], ', to: ', dates[1]);\r\n        console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\r\n        setNewStartTime(dateStrings[0])\r\n        setNewEndTime(dateStrings[1])\r\n    }\r\n\r\n    const handleCommit = (state) => {\r\n        const postData = {\r\n            userId: userInfo.userId, // 申请人ID\r\n            ...baseInfoForm, // 基本信息\r\n            newNum: newNum, // 纳新人数\r\n            content: content4Show, // 展示的信息\r\n            state: state, // 默认初始状态为未审核\r\n            startTime: newStartTime,\r\n            endTime: newEndTime,\r\n        }\r\n\r\n        axios({\r\n            url: '/association/addRecruitment',\r\n            method: 'post',\r\n            data: postData,\r\n            headers: {'Content-Type': 'application/json;charset=UTF-8'}\r\n        }).then(res => {\r\n            console.log(\"==27 res\", res);\r\n            // props.history.push('/') // TODO 提交后是否需要跳转页面？\r\n            notification.open({\r\n                message: state === 'UNEXAMINE' ? '保存成功' : '审核提交成功',\r\n                description: `您可以到 纳新信息列表 查看${state === 'UNEXAMINE' ? '保存' : '审核'}结果`,\r\n                btn,\r\n                key,\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"==26 err\", err);\r\n            notification.open({\r\n                message: state === 'UNEXAMINE' ? '保存成功' : '审核提交成功',\r\n                description: `您可以到 纳新信息列表 查看${state === 'UNEXAMINE' ? '保存' : '审核'}结果`,\r\n                btn,\r\n                key,\r\n            });\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleOptionChange = (value) => {\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    const renderAssociationListToSelectOptions = () => {\r\n        let options = []\r\n        associationList.forEach(association => {\r\n            options.push(<Option\r\n                key={association.associationId}\r\n                value={association.associationId}>\r\n                {association.associationName}\r\n            </Option>)\r\n        })\r\n        return (\r\n            <Select\r\n                // defaultOpen={true} // 是否默认展开\r\n                defaultActiveFirstOption={true} // 首项高亮\r\n                style={{width: 240}}\r\n                onChange={handleOptionChange}>\r\n                {options}\r\n            </Select>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader className=\"site-page-header\" title=\"撰写纳新展示\" subTitle=\"发挥你的文笔，吸引同学们的加入吧~\"/>\r\n            <Steps current={currentStep}>\r\n                <Step title=\"基本信息\" description=\"纳新人数，起始时间等\"/>\r\n                <Step title=\"展示内容\" subTitle=\"二级标题\" description=\"纳新通知的信息内容等\"/>\r\n                <Step title=\"保存/提交\" description=\"仅保存或提交等待审核\"/>\r\n            </Steps>\r\n            {/*内容组*/}\r\n            <div className={style.contentGroup} style={{marginTop: '50px',}}>\r\n                {/*step1 基本信息 =====================================*/}\r\n                <div style={currentStep === 0 ? {} : {display: 'none',}}>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{span: 4,}}\r\n                        wrapperCol={{span: 20,}}\r\n                        ref={baseInfoFormRef}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"纳新标题\"\r\n                            name=\"title\"\r\n                            rules={\r\n                                [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请输入纳新标题',\r\n                                    },\r\n                                ]\r\n                            }\r\n                        >\r\n                            <Input type=\"text\"/>\r\n                        </Form.Item>\r\n                        {/* name相同的话，他们受控行为就相同 */}\r\n                        <Form.Item label=\"纳新社团\" name=\"associationId\">\r\n                            {renderAssociationListToSelectOptions()}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"纳新人数\">\r\n                            <Space>\r\n                                <InputNumber\r\n                                    min={1}\r\n                                    max={30}\r\n                                    value={newNum}\r\n                                    onChange={setNewNum}/>\r\n                                <Button\r\n                                    type=\"ghost\"\r\n                                    onClick={() => {\r\n                                        setNewNum(30);\r\n                                    }}\r\n                                >重置</Button>\r\n                            </Space>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"纳新起始时间\">\r\n                            <Space direction=\"vertical\" size={12}>\r\n                                <RangePicker\r\n                                    locale={locale} // 采用本地语言 即中文\r\n                                    // 不同选项快捷时间范围\r\n                                    ranges={{\r\n                                        '今天': [moment(), moment()],\r\n                                        '本月': [moment().startOf('month'), moment().endOf('month')],\r\n                                    }}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Space>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\" name=\"description\">\r\n                            <TextArea rows={4} placeholder={\"若需求请填写备注信息\"}/>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n\r\n\r\n                {/* step2 社团纳新展示信息 =====================================*/\r\n                }\r\n                <div style={currentStep === 1 ? {} : {display: 'none',}}>\r\n                    <AssociationEditor\r\n                        // 子传父 获取 富文本编辑器内容\r\n                        getContent={(value) => {\r\n                            console.log(value)\r\n                            setContent4Show(value)\r\n                        }}/>\r\n                </div>\r\n\r\n\r\n                {/*step3 保存或提交审核 =====================================*/\r\n                }\r\n                <div style={currentStep === 2 ? {} : {display: 'none',}}>\r\n                </div>\r\n            </div>\r\n\r\n            {/*按钮组*/\r\n            }\r\n            <div style={{\r\n                marginTop: '50px',\r\n                // padding:'10px',\r\n                // border:'10px',\r\n                // paddingRight:'10px',\r\n                // paddingLeft:'10px',\r\n            }}>\r\n                {\r\n                    currentStep > 0 && <Button\r\n                        type=\"ghost\"\r\n                        onClick={toPrevious}\r\n                    >上一步</Button>\r\n                }\r\n                {\r\n                    currentStep < 2 && <Button\r\n                        type=\"primary\"\r\n                        onClick={toNext}\r\n                    >下一步</Button>\r\n                }\r\n\r\n                {/*最后一步 保存或提交 ================*/}\r\n                {\r\n                    currentStep === 2 && <span>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => handleCommit(\"UNEXAMINE\")}\r\n                        >\r\n                            仅保存\r\n                        </Button>\r\n                        <Button danger={true}\r\n                                onClick={() => handleCommit(\"EXAMINING\")}\r\n                        >\r\n                            提交审核\r\n                        </Button>\r\n                    </span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\RoleList\\index.js",["363","364","365"],"import React, { Component } from 'react'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Tree\r\n} from 'antd'\r\nimport {\r\n    UnorderedListOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\nconst { confirm } = Modal\r\n\r\nexport default class RoleList extends Component {\r\n\r\n    state = {\r\n        roleList: [],// 角色列表\r\n        permissionList: [],// 树形权限列表\r\n        currentRolePermissionKeys: [],// 当前角色的权限\r\n        currentRoleId: 0,// 当前角色的roleId\r\n        // 角色列表表头 及 各列组件效果\r\n        columns: [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'roleId',\r\n                render: (roleId) => {\r\n                    return <b>{roleId}</b>\r\n                }\r\n            },\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'roleName',\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (item) => {\r\n                    return <div>\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<UnorderedListOutlined />}\r\n                            onClick={() => {\r\n                                this.setState({ isModalVisible: true })\r\n                                this.setState({ currentRolePermissionKeys: this.mapPermissions2Keys(item.permissions) })\r\n                                this.setState({ currentRoleId: item.roleId })\r\n                            }}\r\n                        >\r\n                        </Button>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<DeleteOutlined />}\r\n                            danger\r\n                            onClick={() => this.confirmDelete(item)}\r\n                        >\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            },\r\n        ],\r\n        isModalVisible: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 获取角色列表 并 同步到state中\r\n        this.getRoleList()\r\n        // 获取权限列表 并 同步到state中\r\n        this.getPermissionList()\r\n    }\r\n\r\n\r\n    // 获取角色列表\r\n    getRoleList = () => {\r\n        axios.get(\"/association/getRoleList\").then(res => {\r\n            const roleData = res.data.data\r\n            // console.log(\"==31 roleData\", roleData);\r\n            this.setState({ roleList: roleData })\r\n        }).catch(err => {\r\n            console.log(\"获取角色列表出错！\", err);\r\n        })\r\n    }\r\n\r\n    // 获取树形权限列表\r\n    getPermissionList = () => {\r\n        axios.get(\"/association/getPermissionList\").then(res => {\r\n            const permissionData = res.data.data\r\n            this.setState({ permissionList: permissionData })\r\n        }).catch(err => {\r\n            console.log(\"获取权限列表出错！\", err);\r\n        })\r\n    }\r\n\r\n    // TODO 删除后给个loading提示\r\n    confirmDelete = (item) => {\r\n        const { roleList } = this.state\r\n        const thisPoint = this\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined />,\r\n            onOk() {\r\n                // 同步页面\r\n                // console.log(\"==1 dataSource\", roleList);\r\n                const newList = roleList.filter(data => data.roleId !== item.roleId)\r\n                thisPoint.setState({ roleList: newList })\r\n                // 调用后端接口，同步后台数据库\r\n                // axios.get(`/association/deleteRoleById/${item.roleId}`)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 模态框 点击ok 重新为角色分配权限\r\n    handleOk = () => {\r\n        // 隐藏模态框\r\n        this.setState({ isModalVisible: false })\r\n\r\n        // 为同步后端做准备\r\n        let roleId\r\n        let permissionIds = []\r\n\r\n        // 同步前端dataSource\r\n        // console.log(\"==71 当前roleId\", this.state.currentRoleId);\r\n        // console.log(\"==71 完整的permissionList\", this.state.permissionList);\r\n        const secondPermissions = this.getSecondPermissions()\r\n        // console.log(\"==73 secondPermissions\", secondPermissions);\r\n        const dataSource = this.state.roleList\r\n        // console.log(\"==75 原先的roleList\", dataSource);\r\n        const newDataSource = dataSource.map((item) => {\r\n            // 拿到当前role（即需要修改的role）\r\n            if (item.roleId === this.state.currentRoleId) {\r\n                const currentPermissions = []\r\n                secondPermissions.map((secondPms) => {\r\n                    // 如果当前二级权限在 选中的权限 中存在，则加入数组（数组为新的权限列表）\r\n                    if (this.state.currentRolePermissionKeys.find((e) => { return e === secondPms.key })) {\r\n                        // console.log(\"==76 当前权限被选中：\", secondPms);\r\n                        permissionIds.push(secondPms.key) // 同步后端\r\n                        currentPermissions.push(secondPms)\r\n                    }\r\n                })\r\n                const newItem = { ...item, permissions: currentPermissions }\r\n                // console.log(\"==77 newItem\", newItem);\r\n\r\n                roleId = item.roleId // 同步后端\r\n\r\n                return newItem\r\n                // 若不是当前role，则原样返还\r\n            } else {\r\n                return item;\r\n            }\r\n        })\r\n        console.log(\"==75 new roleList\", newDataSource);\r\n        this.setState({ roleList: newDataSource })\r\n        // 同步后端数据库(今天先写到这里--20210829)\r\n        console.log(\"==81 roleId\", roleId);\r\n        console.log(\"==81 permissionIds\", permissionIds);\r\n        axios({\r\n            url: \"/association/reGrantPermissions2Role\",\r\n            method: 'post',\r\n            data: {\r\n                roleId: roleId,\r\n                permissionIds: permissionIds\r\n            },\r\n            headers: { 'Content-Type': 'application/json;charset=UTF-8' }\r\n        }).then(res => {\r\n            // console.log(\"==27 res\", res);\r\n        }).catch(err => {\r\n            // console.log(\"==26 err\", err);\r\n        })\r\n\r\n    }\r\n\r\n    // 模态框 点击cancel || 右上角x号 || 点击模态框以外的界面\r\n    handleCancel = () => {\r\n        this.setState({ isModalVisible: false })\r\n    }\r\n\r\n    mapPermissions2Keys = (permissions) => {\r\n        // console.log(\"==54 checkedKey\", permissions);\r\n        const checkedKeys = [];\r\n        permissions.map((permission) => {\r\n            checkedKeys.push(permission.key)\r\n        })\r\n        // console.log(\"==64 checkedKeys\",checkedKeys);\r\n        return checkedKeys\r\n    }\r\n\r\n    onCheck = (checkedKeys) => {\r\n        // console.log(\"==61 checkedKeys\", checkedKeys);\r\n        // console.log(\"==62 state.当前role的permission\", this.state.currentRolePermissionKeys);\r\n        this.setState({ currentRolePermissionKeys: checkedKeys })\r\n    }\r\n\r\n    getSecondPermissions = () => {\r\n        const secondPermissions = []\r\n\r\n        this.state.permissionList.map((firstPms) => {\r\n            // console.log(\"==74 当前一级菜单项：\",firstPms);\r\n            firstPms.children.map((secondPms) => {\r\n                return secondPermissions.push(secondPms)\r\n            })\r\n        })\r\n        return secondPermissions;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table\r\n                    dataSource={this.state.roleList}\r\n                    columns={this.state.columns}\r\n                    rowKey={(item) => item.roleId}\r\n                >\r\n                </Table>\r\n                <Modal title=\"分配权限\"\r\n                    visible={this.state.isModalVisible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}>\r\n                    <Tree\r\n                        treeData={this.state.permissionList}\r\n                        checkable={true}\r\n                        checkedKeys={this.state.currentRolePermissionKeys}\r\n                        onCheck={this.onCheck}\r\n                    // checkStrictly={true}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\UserTagList\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\Share\\index.js",["366"],"import {Avatar, List, Space} from \"antd\";\r\nimport {EyeOutlined, LikeOutlined, MessageOutlined} from \"@ant-design/icons\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getShareByAssociation} from \"../../../../services/shareService\";\r\n\r\nconst sharePageSize = 5\r\nexport default function Share(props) {\r\n\r\n    const [shareList, setShareList] = useState([])\r\n\r\n    useEffect(() => {\r\n        getShareByAssociation(props.associationId)\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"社团分享：\", data)\r\n                // 调整展示方式\r\n                const newData = data.map(item => {\r\n                    return {\r\n                        ...item,\r\n                        title: item.title,\r\n                        avatar: 'https://joeschmoe.io/api/v1/random',\r\n                        description: `来自 ${item.roleName} - ${item.name}, 发布时间： ${item.shareTime || '--/--'}`,\r\n                        content: item.shortDescription,\r\n                    }\r\n                })\r\n                setShareList(newData)\r\n            })\r\n    }, [])\r\n\r\n    const IconText = ({icon, text}) => (\r\n        <Space>\r\n            {React.createElement(icon)}\r\n            {text}\r\n        </Space>\r\n    );\r\n\r\n    return (\r\n        <List size=\"large\" itemLayout=\"vertical\"\r\n              dataSource={shareList}\r\n              pagination={{\r\n                  pageSize: sharePageSize,\r\n                  onChange: page => {\r\n                      console.log(page);\r\n                  },\r\n              }}\r\n              footer={\r\n                  <div>\r\n                      <b>高校社团管理系统-橘集</b> @2021\r\n                  </div>\r\n              }\r\n              renderItem={item => (\r\n                  <List.Item\r\n                      key={item.shareId}\r\n                      actions={[\r\n                          <IconText icon={EyeOutlined} text={item.view} key=\"viewNum\"/>,\r\n                          <IconText icon={LikeOutlined} text={item.thumbs} key=\"thumbsNum\"/>,\r\n                          <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\"/>,\r\n                      ]}\r\n                      extra={\r\n                          <img width={272} alt=\"logo\"\r\n                               src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                          />\r\n                      }\r\n                  >\r\n                      <List.Item.Meta\r\n                          avatar={<Avatar src={item.avatar}/>}\r\n                          title={\r\n                              <a href={`#/user/share/list/${item.shareId}`}>{item.title}</a>}\r\n                          description={item.description}\r\n                      />\r\n                      {item.content}\r\n                  </List.Item>\r\n              )}\r\n        />\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\BigEvent\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\DataView\\index.js",["367"],"import {Statistic} from \"antd\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport * as echarts from \"echarts\";\r\nimport axios from \"axios\";\r\n\r\nexport default function DataView() {\r\n\r\n    const echartsContainerRef = useRef()\r\n    const echartsContainerRef2 = useRef()\r\n\r\n    useEffect(() => {\r\n        drawPie()\r\n        drawPie2()\r\n    }, [])\r\n\r\n    const drawPie = () => {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        const myChart = echarts.init(echartsContainerRef.current);\r\n\r\n        const option = {\r\n            title: {\r\n                // TODO 男女生比例\r\n                text: '男女生比例',\r\n                subtext: 'Fake Data',\r\n                left: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Access From',\r\n                    type: 'pie',\r\n                    radius: '50%',\r\n                    data: [\r\n                        {value: 1048, name: 'Search Engine'},\r\n                        {value: 735, name: 'Direct'},\r\n                        {value: 580, name: 'Email'},\r\n                        {value: 484, name: 'Union Ads'},\r\n                        {value: 300, name: 'Video Ads'}\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        option && myChart.setOption(option);\r\n    }\r\n\r\n    const drawPie2 = () => {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        const myChart2 = echarts.init(echartsContainerRef2.current);\r\n\r\n        const option = {\r\n            title: {\r\n                // TODO 投递通过率\r\n                text: '投递通过率',\r\n                subtext: 'Fake Data',\r\n                left: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Access From',\r\n                    type: 'pie',\r\n                    radius: '50%',\r\n                    data: [\r\n                        {value: 1048, name: 'Search Engine'},\r\n                        {value: 735, name: 'Direct'},\r\n                        {value: 580, name: 'Email'},\r\n                        {value: 484, name: 'Union Ads'},\r\n                        {value: 300, name: 'Video Ads'}\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        option && myChart2.setOption(option);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            展示社团的相关数据\r\n            <div className=\"extra\">\r\n                <div style={{\r\n                    display: 'flex',\r\n                    width: 'max-content',\r\n                    justifyContent: 'flex-end',\r\n                }}\r\n                >\r\n                    <Statistic\r\n                        title=\"纳新申请人数\"\r\n                        value=\"32\"\r\n                        style={{\r\n                            marginRight: 32,\r\n                        }}\r\n                    />\r\n                    <Statistic title=\"Price\" prefix=\"$\" value={568.08}/>\r\n                </div>\r\n            </div>\r\n            <div ref={echartsContainerRef} style={{\r\n                width: '50%',\r\n                height: 400,\r\n                marginTop: 30,\r\n                display:'inline-block',\r\n            }}></div>\r\n            <div ref={echartsContainerRef2} style={{\r\n                width: '50%',\r\n                height: 400,\r\n                marginTop: 30,\r\n                display:'inline-block',\r\n            }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\AddAssociation\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\JoinApplication\\index.js",["368","369","370","371","372","373"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, Modal, Space, Table, Tooltip} from 'antd'\r\nimport {\r\n    CheckOutlined,\r\n    CloseOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined,\r\n    RollbackOutlined\r\n} from '@ant-design/icons';\r\nimport usePublish from \"../../../../../hooks/usePublish\";\r\nimport {ROLE_TYPE} from \"../../../../../constants/type\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function JoinAssociation() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [recruitmentList, setRecruitmentList] = useState()\r\n    const [applicationList,setApplicationList] = useState([])\r\n\r\n    useEffect(() => {\r\n        setApplicationList([])\r\n    })\r\n\r\n    const handleUpdateApplicationState = (applicationId)=>{\r\n\r\n    }\r\n\r\n    const renderOptions = (item) => {\r\n        let isSuperAdmin = false\r\n        const hasRoleList = userInfo.roleList\r\n        hasRoleList.map(role => {\r\n            if (role.roleName === ROLE_TYPE.SUPER_ADMIN.name) {\r\n                isSuperAdmin = true\r\n                return\r\n            }\r\n        })\r\n        return <Space>\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>撤销</Button>}\r\n\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<DeleteOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>删除</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" icon={<CheckOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>通过</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<CloseOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>拒绝</Button>}\r\n        </Space>\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '序号',\r\n            dataIndex: 'recruitmentId',\r\n            render(recruitmentId) {\r\n                return <b>{recruitmentId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '标题',\r\n            dataIndex: 'title',\r\n            render(title, item) {\r\n                return <Tooltip title=\"点击查看详情\">\r\n                    <a href={`#/manage/recruitment/list/${item.recruitmentId}`}\r\n                    >{title}</a>\r\n                </Tooltip>;\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case \"UNEXAMINE\":\r\n                        return <Badge status=\"warning\" text=\"未提交\"/>\r\n                    case \"EXAMINING\":\r\n                        return <Badge status=\"processing\" text=\"审核中\"/>\r\n                    case \"EXAMINE_PASS\":\r\n                        return <Badge status=\"success\" text=\"审核通过\"/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '纳新社团组织',\r\n            dataIndex: 'associationName',\r\n        },\r\n        {\r\n            title: '申请人',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        console.log(\"delete item\", item)\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                const newList = recruitmentList.filter(data => data.id !== item.id)\r\n                setRecruitmentList(newList)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={recruitmentList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 4\r\n                }}\r\n                rowKey={item => item.recruitmentId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\index.js",["374","375","376","377","378"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, Modal, Popover, Space, Table, Tooltip} from 'antd'\r\nimport {\r\n    CloseOutlined, DeleteOutlined, ExclamationCircleOutlined,\r\n    RollbackOutlined, CheckOutlined\r\n} from '@ant-design/icons';\r\nimport usePublish from \"../../../../../hooks/usePublish\";\r\nimport {ROLE_TYPE} from \"../../../../../constants/type\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function RecruitmentList() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const {dataSource, handleRollback, handleDelete, handlePass, handleRefuse} = usePublish()\r\n    const [recruitmentList, setRecruitmentList] = useState()\r\n\r\n    useEffect(() => {\r\n        setRecruitmentList(dataSource)\r\n    })\r\n\r\n    const renderOptions = (item) => {\r\n        let isSuperAdmin = false\r\n        const hasRoleList = userInfo.roleList\r\n        hasRoleList.map(role => {\r\n            if (role.roleName === ROLE_TYPE.SUPER_ADMIN.name) {\r\n                isSuperAdmin = true\r\n                return\r\n            }\r\n        })\r\n        return <Space>\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => handleRollback(item.recruitmentId)}>撤销</Button>}\r\n\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<DeleteOutlined/>}\r\n                    onClick={() => handleDelete(item.recruitmentId)}>删除</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" icon={<CheckOutlined/>}\r\n                    onClick={() => handlePass(item.recruitmentId)}>通过</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<CloseOutlined/>}\r\n                    onClick={() => handleRefuse(item.recruitmentId)}>拒绝</Button>}\r\n        </Space>\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '纳新通知ID',\r\n            dataIndex: 'recruitmentId',\r\n            render(recruitmentId) {\r\n                return <b>{recruitmentId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '标题',\r\n            dataIndex: 'title',\r\n            render(title, item) {\r\n                return <Tooltip title=\"点击查看详情\">\r\n                    <a href={`#/manage/recruitment/list/${item.recruitmentId}`}\r\n                    >{title}</a>\r\n                </Tooltip>;\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case \"UNEXAMINE\":\r\n                        return <Badge status=\"warning\" text=\"未提交\"/>\r\n                    case \"EXAMINING\":\r\n                        return <Badge status=\"processing\" text=\"审核中\"/>\r\n                    case \"EXAMINE_PASS\":\r\n                        return <Badge status=\"success\" text=\"审核通过\"/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '纳新社团组织',\r\n            dataIndex: 'associationName',\r\n        },\r\n        {\r\n            title: '申请人',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        console.log(\"delete item\", item)\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                // console.log(\"同步前端页面\")\r\n                const newList = recruitmentList.filter(data => data.id !== item.id)\r\n                setRecruitmentList(newList)\r\n                // 调用后端接口，同步后台数据库\r\n                // TODO 同步后台数据(前台数据不可信？从后台更新后重新获取？)\r\n                // axios.delete(`/association//${item.userId}`)\r\n                //     .then((res) => {\r\n                //\r\n                //     })\r\n                //     .catch((err) => {\r\n                //\r\n                //     })\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={recruitmentList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 4\r\n                }}\r\n                rowKey={item => item.recruitmentId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\RecruitmentDetail\\index.js",["379","380"],"import React, {useEffect, useState} from 'react'\r\nimport {Button, Descriptions, Modal, PageHeader} from 'antd'\r\n\r\nimport {\r\n    RECRUITMENT_PUBLISH_STATE_LIST,\r\n    RECRUITMENT_PUBLISH_STATE_MAP,\r\n    RECRUITMENT_STATE_MAP\r\n} from '../../../../../../constants/state'\r\nimport {listRecruitment} from \"../../../../../../services/db\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function RecruitmentDetail(props) {\r\n\r\n    const [recruitmentInfo, setRecruitmentInfo] = useState([])\r\n\r\n    // 获取用户列表\r\n    useEffect(() => {\r\n        // 如何获取url地址中的参数？\r\n        listRecruitment(props.match.params.id).then(res => {\r\n            setRecruitmentInfo(res.data.data)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"site-page-header-ghost-wrapper\">\r\n            {/* =============== 纳新通知基本信息 =============== */}\r\n            {recruitmentInfo &&\r\n            <PageHeader\r\n                ghost={false}\r\n                onBack={() => window.history.back()}\r\n                title=\"纳新详情\"\r\n                subTitle={recruitmentInfo.title}\r\n                extra={[\r\n                    <Button key=\"3\">打回</Button>,\r\n                    <Button key=\"1\" type=\"primary\">通过审核</Button>,\r\n                ]}\r\n            >\r\n                <Descriptions size=\"small\" column={3}>\r\n                    <Descriptions.Item label=\"纳新社团\">{recruitmentInfo.associationName}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"申请人\">{recruitmentInfo.name}</Descriptions.Item>\r\n                    <Descriptions.Item\r\n                        label=\"起始时间\">{recruitmentInfo.startTime}~~{recruitmentInfo.endTime}</Descriptions.Item>\r\n                    <Descriptions.Item\r\n                        label=\"审核状态\">{RECRUITMENT_STATE_MAP.get(recruitmentInfo.state)}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"发布状态\">\r\n                        {RECRUITMENT_PUBLISH_STATE_MAP.get(recruitmentInfo.state)\r\n                            ? RECRUITMENT_PUBLISH_STATE_MAP.get(recruitmentInfo.state)\r\n                            : RECRUITMENT_PUBLISH_STATE_LIST.UNPUBLISH.name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"备注\">{recruitmentInfo.description}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"纳新人数\">{recruitmentInfo.newNum}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"浏览量\">{recruitmentInfo.view}</Descriptions.Item>\r\n                </Descriptions>\r\n\r\n                {/* 纳新通知展示信息 */}\r\n                <div dangerouslySetInnerHTML={{\r\n                    __html: recruitmentInfo.content\r\n                }}\r\n                     style={{\r\n                         margin: '24px 24px',\r\n                         border: '1px solid gray',\r\n                     }}>\r\n                </div>\r\n            </PageHeader>\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\UserList\\index.jsx",["381"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\applicationService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationDetail\\index.js",["382"],"import {\r\n    Badge,\r\n    Button,\r\n    Cascader,\r\n    Col,\r\n    DatePicker,\r\n    Descriptions,\r\n    Drawer,\r\n    Image,\r\n    Input,\r\n    PageHeader,\r\n    Row,\r\n    Slider,\r\n    Space\r\n} from 'antd';\r\n\r\n\r\nimport React, {useEffect, useState} from 'react';\r\nimport {MAJORANDCLASS} from \"../../../../../constants/baseInfo\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getApplicationDetail} from \"../../../../../services/applicationService\";\r\n\r\n\r\nexport default function ApplicationDetail(props) {\r\n\r\n    const history = useHistory()\r\n    const [visible, setVisible] = useState(false)\r\n    const [applicationDetail, setApplicationDetail] = useState()\r\n\r\n    useEffect(() => {\r\n        getApplicationDetail(props.match.params.applicationId).then(res => {\r\n            const applicationDetail = res.data.data\r\n            console.log(applicationDetail)\r\n            setApplicationDetail(applicationDetail)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{\r\n            marginTop:-20,\r\n        }}>\r\n            <PageHeader onBack={() => history.goBack()} title={'申请表详情'}/>\r\n            {/* ====== 基本信息 + 照片 ======  */}\r\n            {applicationDetail &&\r\n            <div style={{\r\n                height:'100%-50px',\r\n                overflowY:'auto',\r\n            }}>\r\n                <Row>\r\n                    <Col span={18}>\r\n                        <Descriptions title=\"\" bordered column={6}>\r\n                            <Descriptions.Item label=\"姓名\" span={2}>{applicationDetail.name}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"学号\" span={2}>{applicationDetail.userId}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"性别\" span={2}>2019-04-24 18:00:00 </Descriptions.Item>\r\n                            <Descriptions.Item label=\"院系\" span={3}>工商管理学院</Descriptions.Item>\r\n                            <Descriptions.Item label=\"专业班级\" span={3}>商务1811</Descriptions.Item>\r\n                            <Descriptions.Item label=\"联系方式\" span={3}>18030290001</Descriptions.Item>\r\n                            <Descriptions.Item label=\"电子邮箱\" span={3}>hhnail@163.com</Descriptions.Item>\r\n                            <Descriptions.Item label=\"意向部门\" span={3}>{applicationDetail.intentionDepartment}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"是否接受调剂\" span={3}>是</Descriptions.Item>\r\n                        </Descriptions>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Image\r\n                            width={200}\r\n                            height={200}\r\n                            src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* ====== 描述信息 ======  */}\r\n                <Descriptions title=\"\" bordered column={6}>\r\n                    <Descriptions.Item label=\"兴趣爱好\" span={6}>\r\n                        篮球、足球、钢琴、跳舞\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"个人特长及优势\" span={6}>\r\n                        {applicationDetail.selfProfile}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"对社团的看法\" span={6}>\r\n                        {applicationDetail.viewOfAssociation}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"加入社团的目标\" span={6}>\r\n                        {applicationDetail.joinPurpose}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item label=\"Status\" span={3}>\r\n                        <Badge status=\"processing\" text=\"Running\"/>\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            </div>}\r\n\r\n            {/* ============================ 操作 ============================ */}\r\n            <Space>\r\n                <Button type=\"primary\" onClick={() => {\r\n\r\n                }}>\r\n                    安排面试\r\n                </Button>\r\n\r\n                {/* ======== 个人简历浏览 ========== */}\r\n                <Button type=\"primary\" onClick={() => {\r\n                    setVisible(true);\r\n                }}>\r\n                    浏览成员简历\r\n                </Button>\r\n            </Space>\r\n\r\n            {/* ============================ 抽屉展示个人简历 ============================ */}\r\n            <Drawer visible={visible} title=\"成员简历\" placement=\"right\" width={900}\r\n                    onClose={() => {\r\n                        setVisible(false);\r\n                    }}>\r\n                <Descriptions title=\"\" bordered={true} column={2}>\r\n                    <Descriptions.Item label=\"姓名\">\r\n                        <Input placeholder=\"请填写姓名\"/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"性别\">\r\n                        <Input placeholder=\"请填写性别\"/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"联系方式\">\r\n                        <Input placeholder=\"请填写联系方式\"/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"兴趣爱好\" span={2}>\r\n                        <Input placeholder=\"请填写兴趣爱好\"/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"学院/专业/班级\">\r\n                        <Cascader options={MAJORANDCLASS} defaultValue={['学院', '专业', '班级']}\r\n                                  onChange={(value) => {\r\n                                      console.log(value);\r\n                                  }}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"生日\">\r\n                        <DatePicker onChange={() => {\r\n\r\n                        }} bordered={false} placeholder=\"请选择生日\" locale/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"自我评价\" span={2}>\r\n                        沟通能力：<Slider defaultValue={80} disabled={false}/>\r\n                        表达能力：<Slider defaultValue={80} disabled={false}/>\r\n                        合作能力：<Slider defaultValue={80} disabled={false}/>\r\n                        抗压能力：<Slider defaultValue={80} disabled={false}/>\r\n                        <TextArea rows={4}/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"加入社团的期望\" span={2}>\r\n                        <TextArea rows={4}/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"面试结果评价\">\r\n                        <Input placeholder=\"请填写兴趣爱好\"/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"纳新审核结果\">\r\n                        <Badge status=\"processing\" text=\"审核中\"/>\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationList\\index.js",["383","384","385","386","387"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AccountManage\\Resume\\index.jsx",["388","389","390","391","392","393"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\PickTag\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ApplicationManage\\index.js",["394","395"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, message, Modal, Space, Table} from 'antd'\r\nimport {RollbackOutlined} from '@ant-design/icons';\r\nimport {getApplicationByUserId, updateApplicationState} from \"../../../../services/applicationService\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {APPLICATION_STATE} from '../../../../constants/state'\r\nimport qs from \"querystring\";\r\nimport {OPTION_ICONS} from \"../../../../constants/icon\";\r\nimport ArrangeInterviewModal from \"../../../components/ArrangeInterviewForm\";\r\n\r\nexport default function ApplicationManage() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const history = useHistory()\r\n    const [applicationList, setApplicationList] = useState([])\r\n\r\n    useEffect(() => {\r\n        getApplicationByUserId(userInfo.userId).then(res => {\r\n            const {data} = res.data\r\n            setApplicationList(data)\r\n        })\r\n    }, [])\r\n\r\n    const handleApplicationUpdate = (applicationId, state) => {\r\n        updateApplicationState(qs.stringify({applicationId, state}))\r\n            .then(() => {\r\n                message.success('操作成功！')\r\n                getApplicationByUserId(userInfo.userId).then(res => {\r\n                    const {data} = res.data\r\n                    setApplicationList(data)\r\n                })\r\n            })\r\n    }\r\n\r\n    const renderOptions = (item) => {\r\n        return <Space>\r\n            <Button size=\"small\" icon={OPTION_ICONS.VIEW}\r\n                    onClick={() => {\r\n                        history.push(`/manage/review/joinAssociation/${item.applicationId}`)\r\n                    }}\r\n            >\r\n                查看\r\n            </Button>\r\n            {item.state === APPLICATION_STATE.APPLYING.value &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => handleApplicationUpdate(item.applicationId, APPLICATION_STATE.UN_COMMIT.value)}>撤销</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.UN_COMMIT.value &&\r\n            <Button size=\"small\" icon={OPTION_ICONS.COMMIT}\r\n                    onClick={() => handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLYING.value)}>提交</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.INTERVIEW_INVITING.value &&\r\n            <Button size=\"small\" type='primary' icon={OPTION_ICONS.REFUSE}\r\n                    onClick={() =>\r\n                        Modal.confirm({\r\n                            title:'接受面试',\r\n                            width:698,\r\n                            content:<ArrangeInterviewModal canEdit={false}/>,\r\n                            onOk:()=>{\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.UN_INTERVIEW.value)\r\n                            }\r\n                        })\r\n                    }>接受</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.INTERVIEW_INVITING.value &&\r\n            <Button size=\"small\" danger icon={OPTION_ICONS.REFUSE}\r\n                    onClick={() =>\r\n                        Modal.confirm({\r\n                            title:'拒绝面试邀请无法撤销，确认拒绝吗？',\r\n                            onOk:()=>{\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.REFUSE_INVITING.value)\r\n                            }\r\n                        })\r\n                    }>拒绝</Button>\r\n            }\r\n            {!item.state &&\r\n            <Button size=\"small\" danger icon={OPTION_ICONS.DELETE}\r\n                    onClick={() => handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLYING.value)}>删除</Button>\r\n            }\r\n        </Space>\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '编号',\r\n            dataIndex: 'applicationId',\r\n            render(applicationId) {\r\n                return <b>{applicationId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '社团及意向部门',\r\n            dataIndex: 'intentionDepartment',\r\n            render(intentionDepartment, item) {\r\n                return (\r\n                    <>\r\n                        <a onClick={()=>{\r\n                            history.push(`/user/associationDetail/${item.associationId}`)\r\n                        }}>{item.associationName}</a> —— {item.intentionDepartment}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '申请时间',\r\n            dataIndex: 'applicationTime',\r\n            render(applicationTime) {\r\n                return (applicationTime)\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case APPLICATION_STATE.UN_COMMIT.value:\r\n                        return <Badge status=\"warning\" text={APPLICATION_STATE.UN_COMMIT.name}/>\r\n                    case APPLICATION_STATE.APPLYING.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.APPLYING.name}/>\r\n                    case APPLICATION_STATE.INTERVIEW_INVITING.value:\r\n                        return <Badge status=\"success\" text={APPLICATION_STATE.INTERVIEW_INVITING.name}/>\r\n                    case APPLICATION_STATE.REFUSE_INVITING.value:\r\n                        return <Badge status=\"warning\" text={APPLICATION_STATE.REFUSE_INVITING.name}/>\r\n                    case APPLICATION_STATE.UN_INTERVIEW.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.UN_INTERVIEW.name}/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={applicationList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 6\r\n                }}\r\n                rowKey={item => item.shareId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\icon.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\Calendar\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\ArrangeInterviewForm\\index.js",["396","397","398"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\index.js",["399","400"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\treeService.js",["401"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\InterviewAddress\\index.js",["402","403","404"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\Contacter\\index.js",[],{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","severity":1,"message":"410","line":1,"column":16,"nodeType":"411","messageId":"412","endLine":1,"endColumn":25},{"ruleId":"409","severity":1,"message":"413","line":2,"column":17,"nodeType":"411","messageId":"412","endLine":2,"endColumn":24},{"ruleId":"409","severity":1,"message":"414","line":9,"column":9,"nodeType":"411","messageId":"412","endLine":9,"endColumn":20},{"ruleId":"409","severity":1,"message":"415","line":17,"column":11,"nodeType":"411","messageId":"412","endLine":17,"endColumn":19},{"ruleId":"416","severity":1,"message":"417","line":36,"column":1,"nodeType":"418","messageId":"419","endLine":37,"endColumn":2},{"ruleId":"420","severity":1,"message":"421","line":71,"column":45,"nodeType":"422","messageId":"423","endLine":71,"endColumn":46,"suggestions":"424"},{"ruleId":"409","severity":1,"message":"425","line":28,"column":24,"nodeType":"411","messageId":"412","endLine":28,"endColumn":37},{"ruleId":"426","severity":1,"message":"427","line":32,"column":5,"nodeType":"411","endLine":32,"endColumn":14,"suggestions":"428"},{"ruleId":"409","severity":1,"message":"410","line":1,"column":16,"nodeType":"411","messageId":"412","endLine":1,"endColumn":25},{"ruleId":"409","severity":1,"message":"429","line":9,"column":9,"nodeType":"411","messageId":"412","endLine":9,"endColumn":16},{"ruleId":"409","severity":1,"message":"430","line":9,"column":18,"nodeType":"411","messageId":"412","endLine":9,"endColumn":24},{"ruleId":"431","severity":1,"message":"432","line":26,"column":33,"nodeType":"433","endLine":26,"endColumn":45},{"ruleId":"405","replacedBy":"434"},{"ruleId":"407","replacedBy":"435"},{"ruleId":"405","replacedBy":"436"},{"ruleId":"407","replacedBy":"437"},{"ruleId":"409","severity":1,"message":"438","line":2,"column":5,"nodeType":"411","messageId":"412","endLine":2,"endColumn":18},{"ruleId":"409","severity":1,"message":"439","line":3,"column":5,"nodeType":"411","messageId":"412","endLine":3,"endColumn":17},{"ruleId":"409","severity":1,"message":"440","line":4,"column":5,"nodeType":"411","messageId":"412","endLine":4,"endColumn":20},{"ruleId":"409","severity":1,"message":"441","line":5,"column":5,"nodeType":"411","messageId":"412","endLine":5,"endColumn":17},{"ruleId":"409","severity":1,"message":"442","line":6,"column":5,"nodeType":"411","messageId":"412","endLine":6,"endColumn":18},{"ruleId":"409","severity":1,"message":"443","line":7,"column":5,"nodeType":"411","messageId":"412","endLine":7,"endColumn":17},{"ruleId":"409","severity":1,"message":"444","line":8,"column":5,"nodeType":"411","messageId":"412","endLine":8,"endColumn":25},{"ruleId":"409","severity":1,"message":"445","line":10,"column":27,"nodeType":"411","messageId":"412","endLine":10,"endColumn":35},{"ruleId":"409","severity":1,"message":"446","line":11,"column":27,"nodeType":"411","messageId":"412","endLine":11,"endColumn":37},{"ruleId":"409","severity":1,"message":"447","line":12,"column":27,"nodeType":"411","messageId":"412","endLine":12,"endColumn":44},{"ruleId":"409","severity":1,"message":"448","line":13,"column":27,"nodeType":"411","messageId":"412","endLine":13,"endColumn":42},{"ruleId":"409","severity":1,"message":"449","line":14,"column":27,"nodeType":"411","messageId":"412","endLine":14,"endColumn":42},{"ruleId":"409","severity":1,"message":"450","line":15,"column":27,"nodeType":"411","messageId":"412","endLine":15,"endColumn":41},{"ruleId":"409","severity":1,"message":"451","line":16,"column":8,"nodeType":"411","messageId":"412","endLine":16,"endColumn":13},{"ruleId":"452","severity":1,"message":"453","line":118,"column":13,"nodeType":"454","endLine":124,"endColumn":14},{"ruleId":"455","severity":1,"message":"456","line":119,"column":22,"nodeType":"422","messageId":"457","endLine":119,"endColumn":36},{"ruleId":"452","severity":1,"message":"458","line":128,"column":15,"nodeType":"454","endLine":128,"endColumn":18},{"ruleId":"409","severity":1,"message":"459","line":93,"column":21,"nodeType":"411","messageId":"412","endLine":93,"endColumn":31},{"ruleId":"452","severity":1,"message":"458","line":124,"column":25,"nodeType":"454","endLine":124,"endColumn":28},{"ruleId":"409","severity":1,"message":"460","line":3,"column":28,"nodeType":"411","messageId":"412","endLine":3,"endColumn":49},{"ruleId":"426","severity":1,"message":"461","line":20,"column":8,"nodeType":"462","endLine":20,"endColumn":10,"suggestions":"463"},{"ruleId":"464","severity":1,"message":"465","line":17,"column":5,"nodeType":"466","messageId":"467","endLine":17,"endColumn":20},{"ruleId":"464","severity":1,"message":"465","line":16,"column":5,"nodeType":"466","messageId":"467","endLine":16,"endColumn":20},{"ruleId":"426","severity":1,"message":"468","line":32,"column":8,"nodeType":"462","endLine":32,"endColumn":18,"suggestions":"469"},{"ruleId":"452","severity":1,"message":"458","line":125,"column":21,"nodeType":"454","endLine":125,"endColumn":88},{"ruleId":"426","severity":1,"message":"470","line":41,"column":8,"nodeType":"462","endLine":41,"endColumn":10,"suggestions":"471"},{"ruleId":"409","severity":1,"message":"472","line":1,"column":16,"nodeType":"411","messageId":"412","endLine":1,"endColumn":24},{"ruleId":"409","severity":1,"message":"473","line":3,"column":30,"nodeType":"411","messageId":"412","endLine":3,"endColumn":36},{"ruleId":"474","severity":1,"message":"475","line":18,"column":35,"nodeType":"476","messageId":"477","endLine":18,"endColumn":37},{"ruleId":"478","severity":1,"message":"479","line":19,"column":30,"nodeType":"480","messageId":"481","endLine":19,"endColumn":32},{"ruleId":"409","severity":1,"message":"410","line":2,"column":16,"nodeType":"411","messageId":"412","endLine":2,"endColumn":25},{"ruleId":"409","severity":1,"message":"413","line":10,"column":17,"nodeType":"411","messageId":"412","endLine":10,"endColumn":24},{"ruleId":"409","severity":1,"message":"482","line":11,"column":9,"nodeType":"411","messageId":"412","endLine":11,"endColumn":19},{"ruleId":"409","severity":1,"message":"483","line":9,"column":9,"nodeType":"411","messageId":"412","endLine":9,"endColumn":24},{"ruleId":"409","severity":1,"message":"484","line":10,"column":8,"nodeType":"411","messageId":"412","endLine":10,"endColumn":13},{"ruleId":"409","severity":1,"message":"485","line":13,"column":8,"nodeType":"411","messageId":"412","endLine":13,"endColumn":15},{"ruleId":"426","severity":1,"message":"486","line":28,"column":8,"nodeType":"462","endLine":28,"endColumn":10,"suggestions":"487"},{"ruleId":"409","severity":1,"message":"488","line":2,"column":31,"nodeType":"411","messageId":"412","endLine":2,"endColumn":38},{"ruleId":"409","severity":1,"message":"489","line":7,"column":8,"nodeType":"411","messageId":"412","endLine":7,"endColumn":18},{"ruleId":"409","severity":1,"message":"484","line":9,"column":8,"nodeType":"411","messageId":"412","endLine":9,"endColumn":13},{"ruleId":"474","severity":1,"message":"490","line":33,"column":30,"nodeType":"476","messageId":"491","endLine":33,"endColumn":32},{"ruleId":"474","severity":1,"message":"475","line":36,"column":17,"nodeType":"466","messageId":"492","endLine":36,"endColumn":23},{"ruleId":"409","severity":1,"message":"493","line":107,"column":11,"nodeType":"411","messageId":"412","endLine":107,"endColumn":24},{"ruleId":"426","severity":1,"message":"461","line":49,"column":8,"nodeType":"462","endLine":49,"endColumn":10,"suggestions":"494"},{"ruleId":"474","severity":1,"message":"475","line":94,"column":54,"nodeType":"476","messageId":"477","endLine":94,"endColumn":56},{"ruleId":"409","severity":1,"message":"484","line":6,"column":8,"nodeType":"411","messageId":"412","endLine":6,"endColumn":13},{"ruleId":"409","severity":1,"message":"495","line":11,"column":12,"nodeType":"411","messageId":"412","endLine":11,"endColumn":29},{"ruleId":"409","severity":1,"message":"496","line":11,"column":31,"nodeType":"411","messageId":"412","endLine":11,"endColumn":51},{"ruleId":"426","severity":1,"message":"497","line":26,"column":8,"nodeType":"462","endLine":26,"endColumn":10,"suggestions":"498"},{"ruleId":"474","severity":1,"message":"475","line":30,"column":28,"nodeType":"476","messageId":"477","endLine":30,"endColumn":30},{"ruleId":"474","severity":1,"message":"475","line":34,"column":42,"nodeType":"476","messageId":"477","endLine":34,"endColumn":44},{"ruleId":"474","severity":1,"message":"475","line":38,"column":50,"nodeType":"476","messageId":"477","endLine":38,"endColumn":52},{"ruleId":"452","severity":1,"message":"458","line":80,"column":24,"nodeType":"454","endLine":80,"endColumn":27},{"ruleId":"409","severity":1,"message":"499","line":18,"column":8,"nodeType":"411","messageId":"412","endLine":18,"endColumn":10},{"ruleId":"409","severity":1,"message":"500","line":54,"column":12,"nodeType":"411","messageId":"412","endLine":54,"endColumn":26},{"ruleId":"409","severity":1,"message":"501","line":54,"column":28,"nodeType":"411","messageId":"412","endLine":54,"endColumn":45},{"ruleId":"426","severity":1,"message":"461","line":74,"column":8,"nodeType":"462","endLine":74,"endColumn":10,"suggestions":"502"},{"ruleId":"474","severity":1,"message":"475","line":136,"column":51,"nodeType":"476","messageId":"477","endLine":136,"endColumn":53},{"ruleId":"474","severity":1,"message":"475","line":184,"column":38,"nodeType":"476","messageId":"477","endLine":184,"endColumn":40},{"ruleId":"474","severity":1,"message":"475","line":200,"column":50,"nodeType":"476","messageId":"477","endLine":200,"endColumn":52},{"ruleId":"426","severity":1,"message":"503","line":28,"column":8,"nodeType":"462","endLine":28,"endColumn":10,"suggestions":"504"},{"ruleId":"409","severity":1,"message":"484","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":13},{"ruleId":"409","severity":1,"message":"489","line":10,"column":8,"nodeType":"411","messageId":"412","endLine":10,"endColumn":18},{"ruleId":"409","severity":1,"message":"505","line":19,"column":12,"nodeType":"411","messageId":"412","endLine":19,"endColumn":27},{"ruleId":"426","severity":1,"message":"506","line":21,"column":5,"nodeType":"411","endLine":21,"endColumn":14,"suggestions":"507"},{"ruleId":"474","severity":1,"message":"490","line":32,"column":30,"nodeType":"476","messageId":"491","endLine":32,"endColumn":32},{"ruleId":"474","severity":1,"message":"475","line":35,"column":17,"nodeType":"466","messageId":"492","endLine":35,"endColumn":23},{"ruleId":"409","severity":1,"message":"493","line":106,"column":11,"nodeType":"411","messageId":"412","endLine":106,"endColumn":24},{"ruleId":"409","severity":1,"message":"488","line":2,"column":31,"nodeType":"411","messageId":"412","endLine":2,"endColumn":38},{"ruleId":"426","severity":1,"message":"508","line":18,"column":5,"nodeType":"411","endLine":18,"endColumn":14,"suggestions":"509"},{"ruleId":"474","severity":1,"message":"490","line":25,"column":30,"nodeType":"476","messageId":"491","endLine":25,"endColumn":32},{"ruleId":"474","severity":1,"message":"475","line":28,"column":17,"nodeType":"466","messageId":"492","endLine":28,"endColumn":23},{"ruleId":"409","severity":1,"message":"493","line":99,"column":11,"nodeType":"411","messageId":"412","endLine":99,"endColumn":24},{"ruleId":"409","severity":1,"message":"485","line":11,"column":8,"nodeType":"411","messageId":"412","endLine":11,"endColumn":15},{"ruleId":"426","severity":1,"message":"510","line":23,"column":8,"nodeType":"462","endLine":23,"endColumn":10,"suggestions":"511"},{"ruleId":"474","severity":1,"message":"475","line":72,"column":40,"nodeType":"476","messageId":"477","endLine":72,"endColumn":42},{"ruleId":"426","severity":1,"message":"512","line":37,"column":8,"nodeType":"462","endLine":37,"endColumn":10,"suggestions":"513"},{"ruleId":"409","severity":1,"message":"514","line":9,"column":8,"nodeType":"411","messageId":"412","endLine":9,"endColumn":28},{"ruleId":"409","severity":1,"message":"484","line":11,"column":8,"nodeType":"411","messageId":"412","endLine":11,"endColumn":13},{"ruleId":"409","severity":1,"message":"485","line":14,"column":8,"nodeType":"411","messageId":"412","endLine":14,"endColumn":15},{"ruleId":"409","severity":1,"message":"515","line":30,"column":11,"nodeType":"411","messageId":"412","endLine":30,"endColumn":18},{"ruleId":"426","severity":1,"message":"516","line":49,"column":8,"nodeType":"462","endLine":49,"endColumn":10,"suggestions":"517"},{"ruleId":"409","severity":1,"message":"518","line":5,"column":5,"nodeType":"411","messageId":"412","endLine":5,"endColumn":10},{"ruleId":"409","severity":1,"message":"519","line":15,"column":13,"nodeType":"411","messageId":"412","endLine":15,"endColumn":18},{"ruleId":"409","severity":1,"message":"520","line":18,"column":9,"nodeType":"411","messageId":"412","endLine":18,"endColumn":16},{"ruleId":"409","severity":1,"message":"521","line":18,"column":18,"nodeType":"411","messageId":"412","endLine":18,"endColumn":31},{"ruleId":"409","severity":1,"message":"522","line":27,"column":8,"nodeType":"411","messageId":"412","endLine":27,"endColumn":14},{"ruleId":"426","severity":1,"message":"523","line":47,"column":8,"nodeType":"462","endLine":47,"endColumn":10,"suggestions":"524"},{"ruleId":"426","severity":1,"message":"461","line":22,"column":8,"nodeType":"462","endLine":22,"endColumn":10,"suggestions":"525"},{"ruleId":"452","severity":1,"message":"458","line":98,"column":25,"nodeType":"454","endLine":100,"endColumn":28},{"ruleId":"409","severity":1,"message":"526","line":2,"column":9,"nodeType":"411","messageId":"412","endLine":2,"endColumn":43},{"ruleId":"409","severity":1,"message":"484","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":13},{"ruleId":"409","severity":1,"message":"527","line":21,"column":11,"nodeType":"411","messageId":"412","endLine":21,"endColumn":18},{"ruleId":"409","severity":1,"message":"528","line":7,"column":9,"nodeType":"411","messageId":"412","endLine":7,"endColumn":21},{"ruleId":"426","severity":1,"message":"529","line":58,"column":8,"nodeType":"462","endLine":58,"endColumn":10,"suggestions":"530"},{"ruleId":"409","severity":1,"message":"531","line":2,"column":9,"nodeType":"411","messageId":"412","endLine":2,"endColumn":23},{"ruleId":"474","severity":1,"message":"475","line":20,"column":28,"nodeType":"476","messageId":"477","endLine":20,"endColumn":30},{"ruleId":"474","severity":1,"message":"475","line":24,"column":42,"nodeType":"476","messageId":"477","endLine":24,"endColumn":44},{"ruleId":"474","severity":1,"message":"475","line":28,"column":50,"nodeType":"476","messageId":"477","endLine":28,"endColumn":52},"no-native-reassign",["532"],"no-negated-in-lhs",["533"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'getUserInfo' is defined but never used.","'userInfo' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["534","535"],"'setIsUserMenu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMenuArray'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isUserMenu] as a second argument to the useEffect Hook.",["536"],"'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["532"],["533"],["532"],["533"],"'AuditOutlined' is defined but never used.","'BarsOutlined' is defined but never used.","'ClusterOutlined' is defined but never used.","'FormOutlined' is defined but never used.","'TableOutlined' is defined but never used.","'TeamOutlined' is defined but never used.","'UsergroupAddOutlined' is defined but never used.","'HomeIcon' is defined but never used.","'ResumeIcon' is defined but never used.","'AccountManageIcon' is defined but never used.","'ShareManageIcon' is defined but never used.","'RecruitmentIcon' is defined but never used.","'PermissionIcon' is defined but never used.","'React' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setCloumns' is assigned a value but never used.","'RECRUITMENT_STATE_MAP' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.userId'. Either include it or remove the dependency array.","ArrayExpression",["537"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["538"],"React Hook useEffect has missing dependencies: 'associationId' and 'userInfo.userId'. Either include them or remove the dependency array.",["539"],"'useState' is defined but never used.","'Layout' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'listRecruitment' is defined but never used.","'axios' is defined but never used.","'confirm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.shareId'. Either include it or remove the dependency array.",["540"],"'Popover' is defined but never used.","'usePublish' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","expectedReturnValue","'confirmDelete' is assigned a value but never used.",["541"],"'addingCollegeName' is assigned a value but never used.","'setAddingCollegeName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshTree'. Either include it or remove the dependency array.",["542"],"'qs' is defined but never used.","'newAssociation' is assigned a value but never used.","'setNewAssociation' is assigned a value but never used.",["543"],"React Hook useEffect has a missing dependency: 'props.associationId'. Either include it or remove the dependency array.",["544"],"'applicationList' is assigned a value but never used.","React Hook useEffect contains a call to 'setApplicationList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["545"],"React Hook useEffect contains a call to 'setRecruitmentList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [dataSource] as a second argument to the useEffect Hook.",["546"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["547"],"React Hook useEffect has a missing dependency: 'props.match.params.applicationId'. Either include it or remove the dependency array.",["548"],"'ArrangeInterviewForm' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.",["549"],"'Badge' is defined but never used.","'Space' is defined but never used.","'COLLEGE' is defined but never used.","'MAJORANDCLASS' is defined but never used.","'Option' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userSession'. Either include it or remove the dependency array.",["550"],["551"],"'INTERVIEW_ADDRESS_CASCADER_OPTIONS' is defined but never used.","'histroy' is assigned a value but never used.","'OPTION_ICONS' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshAssociationData'. Either include it or remove the dependency array.",["552"],"'TREE_NODE_TYPE' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"553","fix":"554","desc":"555"},{"messageId":"556","fix":"557","desc":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"561","fix":"569"},{"desc":"570","fix":"571"},{"desc":"561","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"561","fix":"587"},{"desc":"588","fix":"589"},"removeEscape",{"range":"590","text":"591"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"592","text":"593"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Add dependencies array: [isUserMenu]",{"range":"594","text":"595"},"Update the dependencies array to be: [userInfo.userId]",{"range":"596","text":"597"},"Update the dependencies array to be: [history, userInfo]",{"range":"598","text":"599"},"Update the dependencies array to be: [associationId, userInfo.userId]",{"range":"600","text":"601"},"Update the dependencies array to be: [props.match.params.shareId]",{"range":"602","text":"603"},{"range":"604","text":"597"},"Update the dependencies array to be: [refreshTree]",{"range":"605","text":"606"},{"range":"607","text":"597"},"Update the dependencies array to be: [props.associationId]",{"range":"608","text":"609"},"Add dependencies array: []",{"range":"610","text":"611"},"Add dependencies array: [dataSource]",{"range":"612","text":"613"},"Update the dependencies array to be: [props.match.params.id]",{"range":"614","text":"615"},"Update the dependencies array to be: [props.match.params.applicationId]",{"range":"616","text":"617"},"Update the dependencies array to be: [refresh]",{"range":"618","text":"619"},"Update the dependencies array to be: [userSession]",{"range":"620","text":"621"},{"range":"622","text":"597"},"Update the dependencies array to be: [refreshAssociationData]",{"range":"623","text":"624"},[1971,1972],"",[1971,1971],"\\",[880,880],", [isUserMenu]",[662,664],"[userInfo.userId]",[1288,1298],"[history, userInfo]",[1541,1543],"[associationId, userInfo.userId]",[829,831],"[props.match.params.shareId]",[1478,1480],[953,955],"[refreshTree]",[1993,1995],[1093,1095],"[props.associationId]",[717,717],", []",[751,751],", [dataSource]",[674,676],"[props.match.params.id]",[978,980],"[props.match.params.applicationId]",[1765,1767],"[refresh]",[1319,1321],"[userSession]",[949,951],[2011,2013],"[refreshAssociationData]"]