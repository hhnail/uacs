[{"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\index.js":"1","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\App.js":"2","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\router\\IndexRouter.js":"3","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\TopHeader\\index.js":"4","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\SideMenu\\index.js":"5","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\user-manage\\UserForm.js":"6","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationEditor\\index.jsx":"7","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserHeader\\index.jsx":"8","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationCard\\index.jsx":"9","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserManage\\index.jsx":"10","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\BaseInfo.js":"11","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\baseInfo.js":"12","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\state.js":"13","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\index.js":"14","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\EditableCell.js":"15","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\hooks\\usePublish.js":"16","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\type.js":"17","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\db.js":"18","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\store.js":"19","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\CollapseReducer.js":"20","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\LoadingReducer.js":"21","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\redux.js":"22","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\util\\http.js":"23","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserSettings\\index.jsx":"24","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\UserBox\\index.jsx":"25","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AppRouter\\index.js":"26","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationSquare\\index.js":"27","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\index.js":"28","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Home\\index.js":"29","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Login\\index.js":"30","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\NoPermission\\index.js":"31","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\shareService.js":"32","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\userService.js":"33","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\index.js":"34","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\ShareDetail\\index.js":"35","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\SysRouter\\index.jsx":"36","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\index.js":"37","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\AddShare\\index.js":"38","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\PermissionList\\index.js":"39","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\ClassList\\index.js":"40","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\AddRecruitment\\index.js":"41","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\RoleList\\index.js":"42","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\UserTagList\\index.js":"43","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\Share\\index.js":"44","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\BigEvent\\index.js":"45","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\DataView\\index.js":"46","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\AddAssociation\\index.js":"47","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\JoinApplication\\index.js":"48","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\index.js":"49","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\RecruitmentDetail\\index.js":"50","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\applicationService.js":"51","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationDetail\\index.js":"52","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationList\\index.js":"53","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AccountManage\\Resume\\index.jsx":"54","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\PickTag\\index.js":"55","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ApplicationManage\\index.js":"56","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\icon.js":"57","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\Calendar\\index.js":"58","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\index.js":"59","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\treeService.js":"60","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\InterviewAddress\\index.js":"61","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\Contacter\\index.js":"62","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\departmentService.js":"63","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\UserList\\index.js":"64","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\ViewInterview\\index.js":"65","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\index.js":"66","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\imageService.js":"67","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\image.js":"68","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\index.jsx":"69","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\BatchImport\\index.js":"70","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\AddUser\\index.js":"71","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\BatchAddAssociation\\index.js":"72","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\BatchAddAssociation\\BatchImport\\index.js":"73","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\dataViewService.js":"74"},{"size":151,"mtime":1629535454211,"results":"75","hashOfConfig":"76"},{"size":449,"mtime":1635161395737,"results":"77","hashOfConfig":"76"},{"size":1116,"mtime":1636186196730,"results":"78","hashOfConfig":"76"},{"size":1536,"mtime":1636248028854,"results":"79","hashOfConfig":"76"},{"size":5684,"mtime":1636378392514,"results":"80","hashOfConfig":"76"},{"size":2790,"mtime":1632015282488,"results":"81","hashOfConfig":"76"},{"size":1187,"mtime":1633177185586,"results":"82","hashOfConfig":"76"},{"size":2176,"mtime":1637401740788,"results":"83","hashOfConfig":"76"},{"size":1505,"mtime":1637292647624,"results":"84","hashOfConfig":"76"},{"size":1866,"mtime":1629077512900,"results":"85","hashOfConfig":"76"},{"size":2183,"mtime":1633570464347,"results":"86","hashOfConfig":"76"},{"size":9578,"mtime":1636858423341,"results":"87","hashOfConfig":"76"},{"size":4656,"mtime":1637416052719,"results":"88","hashOfConfig":"76"},{"size":4857,"mtime":1633836370146,"results":"89","hashOfConfig":"76"},{"size":5786,"mtime":1633861487172,"results":"90","hashOfConfig":"76"},{"size":1505,"mtime":1637480682486,"results":"91","hashOfConfig":"76"},{"size":1948,"mtime":1637326393884,"results":"92","hashOfConfig":"76"},{"size":2803,"mtime":1637462145565,"results":"93","hashOfConfig":"76"},{"size":839,"mtime":1635161599626,"results":"94","hashOfConfig":"76"},{"size":566,"mtime":1635549464935,"results":"95","hashOfConfig":"76"},{"size":487,"mtime":1635549464959,"results":"96","hashOfConfig":"76"},{"size":185,"mtime":1635087218971,"results":"97","hashOfConfig":"76"},{"size":895,"mtime":1636884256978,"results":"98","hashOfConfig":"76"},{"size":10894,"mtime":1637322319344,"results":"99","hashOfConfig":"76"},{"size":670,"mtime":1635597893881,"results":"100","hashOfConfig":"76"},{"size":833,"mtime":1635650279909,"results":"101","hashOfConfig":"76"},{"size":3477,"mtime":1637246777216,"results":"102","hashOfConfig":"76"},{"size":9562,"mtime":1637483021431,"results":"103","hashOfConfig":"76"},{"size":1265,"mtime":1635680506813,"results":"104","hashOfConfig":"76"},{"size":7577,"mtime":1637417246533,"results":"105","hashOfConfig":"76"},{"size":136,"mtime":1633826663776,"results":"106","hashOfConfig":"76"},{"size":358,"mtime":1635643007604,"results":"107","hashOfConfig":"76"},{"size":1622,"mtime":1637314103158,"results":"108","hashOfConfig":"76"},{"size":981,"mtime":1636248084432,"results":"109","hashOfConfig":"76"},{"size":2805,"mtime":1635650279987,"results":"110","hashOfConfig":"76"},{"size":5744,"mtime":1637244047226,"results":"111","hashOfConfig":"76"},{"size":4036,"mtime":1635650279943,"results":"112","hashOfConfig":"76"},{"size":7666,"mtime":1635650279919,"results":"113","hashOfConfig":"76"},{"size":6176,"mtime":1635650465873,"results":"114","hashOfConfig":"76"},{"size":10911,"mtime":1636937942131,"results":"115","hashOfConfig":"76"},{"size":11295,"mtime":1636185991287,"results":"116","hashOfConfig":"76"},{"size":8718,"mtime":1637419012016,"results":"117","hashOfConfig":"76"},{"size":2026,"mtime":1635080968786,"results":"118","hashOfConfig":"76"},{"size":3284,"mtime":1637334185558,"results":"119","hashOfConfig":"76"},{"size":5802,"mtime":1635681153188,"results":"120","hashOfConfig":"76"},{"size":7040,"mtime":1637486125772,"results":"121","hashOfConfig":"76"},{"size":123,"mtime":1635753943587,"results":"122","hashOfConfig":"76"},{"size":4218,"mtime":1635754501860,"results":"123","hashOfConfig":"76"},{"size":4619,"mtime":1635754203747,"results":"124","hashOfConfig":"76"},{"size":2972,"mtime":1635754203715,"results":"125","hashOfConfig":"76"},{"size":1224,"mtime":1637033826171,"results":"126","hashOfConfig":"76"},{"size":10872,"mtime":1637333390930,"results":"127","hashOfConfig":"76"},{"size":12479,"mtime":1637332165333,"results":"128","hashOfConfig":"76"},{"size":17075,"mtime":1637331865378,"results":"129","hashOfConfig":"76"},{"size":3224,"mtime":1636274538145,"results":"130","hashOfConfig":"76"},{"size":7658,"mtime":1637056375471,"results":"131","hashOfConfig":"76"},{"size":5802,"mtime":1637327489193,"results":"132","hashOfConfig":"76"},{"size":2065,"mtime":1636293803496,"results":"133","hashOfConfig":"76"},{"size":10785,"mtime":1637244827152,"results":"134","hashOfConfig":"76"},{"size":495,"mtime":1636895287812,"results":"135","hashOfConfig":"76"},{"size":1971,"mtime":1636860505145,"results":"136","hashOfConfig":"76"},{"size":908,"mtime":1636940466166,"results":"137","hashOfConfig":"76"},{"size":159,"mtime":1636948164523,"results":"138","hashOfConfig":"76"},{"size":2388,"mtime":1637415075332,"results":"139","hashOfConfig":"76"},{"size":2101,"mtime":1637051306341,"results":"140","hashOfConfig":"76"},{"size":7708,"mtime":1637464079329,"results":"141","hashOfConfig":"76"},{"size":280,"mtime":1637155685989,"results":"142","hashOfConfig":"76"},{"size":387,"mtime":1637158385909,"results":"143","hashOfConfig":"76"},{"size":5265,"mtime":1637416235318,"results":"144","hashOfConfig":"76"},{"size":1139,"mtime":1637413285134,"results":"145","hashOfConfig":"76"},{"size":4254,"mtime":1637412969953,"results":"146","hashOfConfig":"76"},{"size":4235,"mtime":1637229147899,"results":"147","hashOfConfig":"76"},{"size":1988,"mtime":1637221747054,"results":"148","hashOfConfig":"76"},{"size":322,"mtime":1637482815599,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"kh8qtk",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"152"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"152"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"152"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"152"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"152"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"152"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"152"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"152"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"152"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"152"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"152"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"152"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"152"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"152"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"152"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"152"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"152"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"152"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"152"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"152"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"152"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"152"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\index.js",[],["329","330"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\App.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\router\\IndexRouter.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\TopHeader\\index.js",["331","332","333","334","335"],"import React, {useEffect} from 'react'\r\nimport {Layout, message} from 'antd';\r\nimport {MenuFoldOutlined, MenuUnfoldOutlined} from '@ant-design/icons'\r\n\r\nimport {useHistory, withRouter} from 'react-router-dom'\r\nimport {connect} from \"react-redux\";\r\nimport {REDUXSTATE} from \"../../constants/redux\";\r\nimport UserSettings from '../UserSettings/index'\r\nimport {getUserInfo} from \"../../services/userService\";\r\n\r\nconst {Header} = Layout;\r\n\r\n\r\nfunction TopHeader(props) {\r\n\r\n    const history = useHistory()\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n\r\n    // TODO 为什么改变折叠状态，也会发请求？？？？？？\r\n    const changeFoldState = () => {\r\n        props.changeCollapsed()\r\n    }\r\n\r\n    return (\r\n        <Header style={{background: \"white\", padding: \"0px 12px\"}}>\r\n            {/* ========== 折叠栏 ==========*/}\r\n            {props.isCollapsed ?\r\n                <MenuUnfoldOutlined onClick={changeFoldState}/>\r\n                : <MenuFoldOutlined onClick={changeFoldState}/>}\r\n            <UserSettings history={history}/>\r\n        </Header>\r\n    )\r\n}\r\n\r\n\r\n{/*   =============================   redux   =============================   */\r\n}\r\nconst mapState2Props = ({CollapseReducer: {isCollapsed}}) => {\r\n    return {\r\n        isCollapsed\r\n    }\r\n}\r\n\r\nconst mapDispatch2Props = {\r\n    changeCollapsed() {\r\n        return {\r\n            type: REDUXSTATE.CHANGE_COLLAPSED.type,\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapState2Props, mapDispatch2Props)(withRouter(TopHeader))\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\SideMenu\\index.js",["336"],"import React, {Component} from 'react'\r\nimport {Layout, Menu} from 'antd';\r\nimport {ReactComponent as OrangeIcon} from '../../icons/orange.svg';\r\n\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport './index.less'\r\nimport {connect} from \"react-redux\";\r\nimport {getPermissionListByUserId} from \"../../services/db\";\r\nimport {SIDE_MENU_ICON_LIST} from \"../../constants/icon\";\r\nimport {getUserInfoByToken} from \"../../services/userService\";\r\n\r\nconst {SubMenu} = Menu;\r\nconst {Sider} = Layout;\r\n\r\n\r\nclass SideMenu extends Component {\r\n\r\n    state = {\r\n        // 菜单列表\r\n        menuList: [],\r\n        // 选中菜单项的key，可以同时选中多个，因此是数组\r\n        selectKeys: [],\r\n        // 打开菜单项的key\r\n        openKeys: [],\r\n        // 用户信息\r\n        userInfo: {},\r\n    }\r\n\r\n    // 获取菜单信息\r\n    // 展开默认项。刷新后仍然有效\r\n    componentWillMount() {\r\n        // 通过token换取用户信息\r\n        this.getMenuListByToken()\r\n\r\n        // this.getMenuList(userId)\r\n\r\n        this.showSelected()\r\n    }\r\n\r\n    // 通过token换取用户信息 并 用userId获取权限列表\r\n    getMenuListByToken = () => {\r\n        const accessToken = localStorage.getItem(\"token\")\r\n        getUserInfoByToken(accessToken).then(res => {\r\n            const userInfo = res.data.data\r\n            // console.log(\"==1 用户信息 \", userInfo)\r\n            this.setState({userInfo: userInfo})\r\n            // 根据userId获取菜单列表\r\n            if (userInfo) {\r\n                this.getMenuList(userInfo.userId)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取菜单数据\r\n    getMenuList = (userId) => {\r\n        getPermissionListByUserId(userId).then(res => {\r\n            const {data} = res.data\r\n            // console.log('获取菜单数据')\r\n            // console.log(data)\r\n            this.setState({menuList: data})\r\n        })\r\n    }\r\n\r\n    // 展开选中项并高亮。刷新后仍然有效\r\n    showSelected = () => {\r\n        // ( 刷新后 )选择默认展开项、高亮项\r\n        // props.location.pathname 取出当前页面的路径\r\n        const path = this.props.location.pathname\r\n        // console.log(\"==3\", path);\r\n        const openIndex = path.lastIndexOf(\"\\/\")\r\n        const openKeys = [path.substring(0, openIndex)]\r\n        const selectKeys = Array(this.props.location.pathname)\r\n\r\n        this.setState({openKeys})\r\n        this.setState({selectKeys})\r\n    }\r\n\r\n    checkPageElement = (item) => {\r\n        return \"MENU_ELEMENT\" === item.type ? true : false\r\n    }\r\n\r\n    // 渲染侧边栏菜单\r\n    renderMenu = (menuList) => {\r\n        // console.log('待渲染的侧边菜单：', menuList)\r\n        return menuList.map((item) => {\r\n            // 当前item为父菜单，并且有下级菜单\r\n            if (item.children.length > 0 && this.checkPageElement(item)) {\r\n                return <SubMenu key={item.routePath} title={item.title} icon={SIDE_MENU_ICON_LIST[item.routePath]}\r\n                                style={{\r\n                                    backgroundColor: `rgba(232, 140, 20, 0.05)`,\r\n                                }}>\r\n                    {this.renderMenu(item.children)}{/* 递归 */}\r\n                </SubMenu>\r\n            }\r\n            // 当前item为叶子菜单\r\n            return this.checkPageElement(item) && item.grade === 2 &&\r\n                <Menu.Item key={item.routePath}\r\n                           onClick={() => {\r\n                               this.props.history.push(item.routePath)\r\n                           }}\r\n                >{SIDE_MENU_ICON_LIST[item.routePath]}&nbsp;&nbsp;{item.title}\r\n                </Menu.Item>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Sider width={200}\r\n                   style={{backgroundColor: \"orange\"}}\r\n                   collapsed={this.props.isCollapsed} // 侧边菜单是否折叠\r\n            >\r\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\r\n                    {/* ============ 系统图标 ========== */}\r\n                    <div className='logo'>\r\n                        <OrangeIcon style={{\r\n                            width: 26,\r\n                            height: 22,\r\n                            marginBottom: -3,\r\n                        }}/>\r\n                        {!this.props.isCollapsed && <>橘集<br/>高校社团管理系统</>}\r\n                    </div>\r\n\r\n                    {/* ============ 系统菜单 ========== */}\r\n                    <div style={{\r\n                        height: \"100%\",\r\n                        overflowY: 'scroll',\r\n                    }}>\r\n                        <Menu theme=\"light\" mode=\"inline\"\r\n                              defaultSelectedKeys={this.state.selectKeys}\r\n                              defaultOpenKeys={this.state.openKeys}\r\n                              style={{height: '100%', borderRight: 0}}>\r\n                            <Menu.Item key={'systemHome'}\r\n                                       onClick={() => {\r\n                                           this.props.history.push('/#/manage/home')\r\n                                       }}\r\n                            >{SIDE_MENU_ICON_LIST['/manage/home']}&nbsp;&nbsp;HOME\r\n                            </Menu.Item>\r\n                            {this.renderMenu(this.state.menuList)}\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n            </Sider>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState2Props = ({CollapseReducer: {isCollapsed}}) => {\r\n    return {\r\n        isCollapsed\r\n    }\r\n}\r\n\r\nexport default connect(mapState2Props)(withRouter(SideMenu))","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\user-manage\\UserForm.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationEditor\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserHeader\\index.jsx",["337","338"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\AssociationCard\\index.jsx",["339","340"],"import React, {useEffect} from 'react'\r\nimport {Card, Tag, Col} from 'antd'\r\nimport {ReactComponent as AssociationIcon} from '../../icons/association-manage.svg'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card\r\n\r\nexport default function AssociationCard(props) {\r\n\r\n    const history = useHistory()\r\n\r\n    const currentAssociation = props.item\r\n\r\n    return (\r\n        <Card hoverable\r\n              key={currentAssociation.associationId}\r\n            // TODO 图片能不能用轮播的？\r\n              cover={<img alt=\"图片加载失败\"\r\n                          src={currentAssociation.imgUrl} style={{\r\n                  height: 200,\r\n                  width: 368,\r\n              }}/>}\r\n              onClick={() => {\r\n                  history.push(`/user/associationDetail/${currentAssociation.associationId}`)\r\n              }}\r\n        >\r\n            <Meta avatar={<AssociationIcon style={{\r\n                width: 50,\r\n                height: 50\r\n            }}/>}\r\n                  title={<div style={{\r\n                      fontSize:18,\r\n                      fontWeight:900,\r\n                  }}>{currentAssociation.associationName}</div>}\r\n            />\r\n            <div>\r\n                纳新状态：\r\n                {\r\n                    currentAssociation.state === '审核通过' ? <Tag color=\"success\">纳新中</Tag> :\r\n                        <Tag color=\"default\">暂未纳新</Tag>\r\n                }\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserManage\\index.jsx",["341","342","343"],"import React, { Component } from 'react'\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport UserInfo from '../UserInfo'\r\nimport UseHeader from '../UserHeader'\r\n\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <UseHeader isUserMenu={true} />\r\n                    <Layout>\r\n                        {/* 侧边栏 */}\r\n                        <Sider width={200} theme=\"light\">\r\n                            {/* 用户头像 */}\r\n                            <Avatar\r\n                                size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100, }}\r\n                                src='E:/image/uacs/user_headicon.jpg'\r\n                                icon={<UserOutlined />}\r\n                                alt='快来上传头像吧！'\r\n                                size='large'\r\n                                draggable={true}\r\n                                style={{marginLeft:'55px',marginTop:'30px',width:'100px',height:'100px'}}\r\n                            />\r\n                        </Sider>\r\n                        <Layout style={{ padding: '0 24px 24px' }}>\r\n                            {/* 面包屑 */}\r\n                            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                                <Breadcrumb.Item>个人中心</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>个人简历</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            {/* 用户信息 */}\r\n                            <UserInfo />\r\n                        </Layout>\r\n                    </Layout>\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",["344","345"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\BaseInfo.js",[],["346","347"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\baseInfo.js",["348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\state.js",["362","363"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\index.js",["364","365","366"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\EditableTable\\EditableCell.js",["367","368"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\hooks\\usePublish.js",["369","370"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\type.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\db.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\store.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\CollapseReducer.js",["371"],"import {REDUXSTATE} from \"../../constants/redux\";\r\n\r\nexport const CollapseReducer = (preState = {\r\n    isCollapsed: false\r\n}, action) => {\r\n    let {type} = action\r\n    switch (type) {\r\n        case REDUXSTATE.CHANGE_COLLAPSED.type:\r\n            let newState = {...preState}\r\n            newState.isCollapsed = !newState.isCollapsed\r\n            console.log(newState.isCollapsed ? '折叠' : '展开')\r\n            return newState\r\n        default:\r\n            // console.log(\"未找到对应的action\")\r\n            return preState\r\n    }\r\n    return preState\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\redux\\reducers\\LoadingReducer.js",["372"],"import {REDUXSTATE} from \"../../constants/redux\";\r\n\r\nexport const LoadingReducer = (preState = {\r\n    isLoading: false\r\n}, action) => {\r\n    let {type, payload} = action\r\n    switch (type) {\r\n        case REDUXSTATE.CHANGE_ISLOADING.type:\r\n            let newState = {...preState}\r\n            newState.isLoading = payload\r\n            return newState\r\n        default:\r\n            // console.log(\"未找到对应的action\")\r\n            return preState\r\n    }\r\n    return preState\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\redux.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\util\\http.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\components\\UserSettings\\index.jsx",["373","374"],"import React, {useEffect, useState} from \"react\";\r\nimport {Avatar, Col, Dropdown, Form, Input, Menu, message, Modal, Row, Space, Switch} from \"antd\";\r\nimport Icon, {DownOutlined, UserOutlined, UserSwitchOutlined} from \"@ant-design/icons\";\r\nimport {ReactComponent as UserSettingsIcon} from \"../../icons/user-settings.svg\";\r\nimport {ReactComponent as LogoutIcon} from \"../../icons/logout.svg\";\r\nimport {getUserInfo, updateUserSettings} from \"../../services/userService\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport default function UserSettings(props) {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const history = useHistory()\r\n\r\n    // 个人设置\r\n    const [userForm] = Form.useForm()\r\n    const [settingsModalVisible, setSettingsModalVisible] = useState(false)\r\n    const [confirmLoading, setConfirmLoading] = useState(false)\r\n    const [passwordReseting, setPasswordReseting] = useState(false)\r\n\r\n    // 通过token换取用户信息\r\n    useEffect(() => {\r\n        getUserInfo(userInfo.accessToken).then(res => {\r\n            const {data} = res.data\r\n            if (!data) {\r\n                message.error(\"会话超时，请重新登录！\")\r\n                setTimeout(() => {\r\n                    history.push(\"/login\")\r\n                }, 1500)\r\n            }\r\n        })\r\n    }, [userInfo])\r\n\r\n    const menu = ( // 顶部菜单结构\r\n        <Menu key='systemOptions'>\r\n            {/* ====== 个人设置 ====== */}\r\n            <Menu.Item key='userSettings' onClick={() => {\r\n                getUserInfo(userInfo.accessToken).then(res => {\r\n                    const {data} = res.data\r\n                    userForm.setFieldsValue({\r\n                        name: data.name,\r\n                        userId: data.userId,\r\n                        phone: data.phone,\r\n                        email: data.email,\r\n                    })\r\n                    setSettingsModalVisible(true)\r\n                })\r\n            }}>\r\n                <Icon component={UserSettingsIcon}/> 个人设置\r\n            </Menu.Item>\r\n            {/* ====== 注销系统 ====== */}\r\n            <Menu.Item key='logout' danger onClick={() => {\r\n                localStorage.removeItem(\"token\") // 去除浏览器中的token\r\n                localStorage.removeItem(\"userInfo\") // 去除浏览器中的userInfo\r\n                message.success(\"注销成功！\")\r\n                setTimeout(() => {\r\n                    props.history.replace(\"/login\") // 重定向到登录界面\r\n                }, 500)\r\n            }}>\r\n                <Icon component={LogoutIcon}/> 退出系统\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const cleanPasswordForm = () => {\r\n        userForm.setFieldsValue({\r\n            password: '',\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n        })\r\n    }\r\n\r\n    const handleOk = () => {\r\n        setConfirmLoading(true);\r\n        userForm.validateFields()\r\n            .then(() => {\r\n                console.log(\"表达信息：\")\r\n                console.log(userForm.getFieldsValue())\r\n                updateUserSettings(userForm.getFieldsValue())\r\n                    .then((res) => {\r\n                        message.success(\"更新成功！\")\r\n                        setSettingsModalVisible(false)\r\n                        setConfirmLoading(false)\r\n                        setPasswordReseting(false)\r\n                        // 更新成功，清空密码部分表单信息\r\n                        cleanPasswordForm()\r\n                    })\r\n                    .catch(() => { // 异步更新用户信息失败\r\n                        setConfirmLoading(false)\r\n                    })\r\n            })\r\n            .catch(() => { // 表单校验失败\r\n                setConfirmLoading(false)\r\n            })\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setSettingsModalVisible(false)\r\n        setPasswordReseting(false)\r\n        cleanPasswordForm()\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{float: \"right\"}}>\r\n            <Space size={\"middle\"}>\r\n                <UserSwitchOutlined/>\r\n                {/* ========== 切换使用者身份开关 ========== */}\r\n                <Switch\r\n                    checkedChildren=\"USER\"\r\n                    unCheckedChildren=\"MANAGER\"\r\n                    defaultChecked={props.history.location.pathname.substring(0, 5) === '/user'}\r\n                    onClick={() => {\r\n                        if (props.history.location.pathname.substring(0, 5) === '/user') {\r\n                            props.history.replace(\"/manage\") // 重定向到管理页面\r\n                            return\r\n                        }\r\n                        props.history.replace(\"/user\") // 重定向到用户界面\r\n                    }}\r\n                />\r\n                {/* ========== 欢迎信息 ========== */}\r\n                {userInfo &&\r\n                <div>您好 <span style={{color: 'orange'}}>{userInfo.name}</span></div>\r\n                }\r\n                {/* ========== 下拉菜单 ========== */}\r\n                <Dropdown overlay={menu}>\r\n                    <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                        <Avatar size={28} icon={<UserOutlined/>}/>&nbsp;&nbsp;&nbsp;\r\n                        <DownOutlined/>\r\n                    </a>\r\n                </Dropdown>\r\n            </Space>\r\n            {/*   =============================   个人设置模态框   =============================   */}\r\n            <Modal visible={settingsModalVisible} title=\"账号设置\" width={680}\r\n                   confirmLoading={confirmLoading}\r\n                   onOk={handleOk}\r\n                   onCancel={handleCancel}\r\n            >\r\n                <Form form={userForm}\r\n                      name=\"settings\"\r\n                      layout={\"horizontal\"}\r\n                      labelCol={{span: 8,}}\r\n                      wrapperCol={{span: 16,}}\r\n                >\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <Form.Item label=\"名字\" name=\"name\"\r\n                                       rules={[{required: true, message: '该项不得为空！'}]}\r\n                            ><Input allowClear/></Form.Item>\r\n                        </Col>\r\n                        <Col span={10} push={2}>\r\n                            <Form.Item label=\"学号\" name=\"userId\"\r\n                                       rules={[{required: true, message: '该项不得为空！'}]}>\r\n                                <Input disabled={true}/>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <Form.Item label=\"手机号\" name=\"phone\"\r\n                                       rules={[{\r\n                                           pattern: /^((\\+)?86|((\\+)?86)?)0?1[3458]\\d{9}$/,\r\n                                           message: '手机号格式错误'\r\n                                       }]}\r\n                            ><Input allowClear/></Form.Item>\r\n                        </Col>\r\n                        <Col span={10} push={2}>\r\n                            <Form.Item label=\"邮箱\" name=\"email\"><Input allowClear/></Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <Form.Item label=\"原密码\" name=\"password\"\r\n                                       rules={[{required: true, message: '该项不得为空！'}]}\r\n                            ><Input.Password/></Form.Item>\r\n                        </Col>\r\n                        {/*重置密码开关*/}\r\n                        <Col span={10} push={2}>\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                marginTop: 5\r\n                            }}>\r\n                                <div style={{marginLeft: 18}}>修改密码？</div>\r\n                                <div style={{marginLeft: 8}}>\r\n                                    <Switch checked={passwordReseting} onChange={() => {\r\n                                        setPasswordReseting(!passwordReseting)\r\n                                    }}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <div style={passwordReseting ? {} : {display: 'none'}}>\r\n                        <Row>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"新密码\" name=\"newPassword\"\r\n                                           rules={passwordReseting\r\n                                               ? [\r\n                                                   {required: true, message: '该项不得为空！'},\r\n                                                   {\r\n                                                       pattern: /^[a-zA-Z]\\w{5,17}$/,\r\n                                                       message: '密码必须为字母开头、长度[6,18]、仅含字母、数字和下划线的字符'\r\n                                                   }\r\n                                               ]\r\n                                               : []}\r\n                                ><Input.Password/></Form.Item>\r\n                            </Col>\r\n                            <Col span={10} push={2}>\r\n                                <Form.Item label=\"确认密码\" name=\"confirmPassword\"\r\n                                           rules={passwordReseting\r\n                                               ? [\r\n                                                   {required: true, message: '该项不得为空！'},\r\n                                                   ({getFieldValue}) => ({\r\n                                                       validator(_, value) {\r\n                                                           if (!value || getFieldValue('newPassword') === value) {\r\n                                                               return Promise.resolve();\r\n                                                           }\r\n                                                           return Promise.reject(new Error('两次输入密码必须保持一致！'));\r\n                                                       },\r\n                                                   }),\r\n                                               ]\r\n                                               : []}\r\n                                ><Input.Password/></Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\UserBox\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AppRouter\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationSquare\\index.js",["375","376","377","378","379","380"],"import {Carousel, Col, Row} from \"antd\";\r\nimport AssociationCard from \"../../../components/AssociationCard\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getAllAssociationList} from \"../../../services/db\";\r\n\r\nconst contentStyle = {\r\n    position: 'center',\r\n    // width: '80%',\r\n    height: '160px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: 'orange',\r\n};\r\n\r\nexport default function AssciationSquare() {\r\n\r\n    const [associationList, setAssociationList] = useState([])\r\n\r\n    useEffect(() => {\r\n        getAllAssociationList().then(res => {\r\n            // console.log('首页社团列表：')\r\n            // console.log(res.data.data)\r\n            setAssociationList(res.data.data)\r\n        })\r\n    }, [])\r\n\r\n    return (<>\r\n            {/* === 前台系统背景图 === */}\r\n            <img src={\"http://localhost:7100/association/getImageById/517ca4baf3674937a105982906d11e44\"}\r\n                 style={{\r\n                     position: 'absolute',\r\n                     zIndex: 0,\r\n                     margin: '-23px -23px -23px -23px',\r\n                     height: '100%',\r\n                     width: '100%',\r\n                 }}\r\n                 key={\"Carousel1\"}\r\n            />\r\n\r\n            <div>\r\n                {/* ======================== 轮播图 ========================  */}\r\n                <Carousel autoplay={true} dotPosition={\"bottom\"} style={{\r\n                    width: 600,\r\n                    height: 330,\r\n                }}>\r\n                    <img src={\"http://localhost:7100/association/getImageById/2be18f8af3ff4bd8b9ffb8791ff68d11\"}\r\n                         style={{\r\n                             height: 215,\r\n                             width: 300,\r\n                         }}\r\n                         key={\"Carousel1\"}\r\n                    />\r\n                    <img src={\"http://localhost:7100/association/getImageById/0e8ed76bc616496f9bdbaa65c1dc215c\"}\r\n                         style={{\r\n                             height: 215,\r\n                             width: 300,\r\n                         }}\r\n                         key={\"Carousel2\"}\r\n                    />\r\n                    <img src={\"http://localhost:7100/association/getImageById/548f1deea8e545f5b7cef9041645d6da\"}\r\n                         style={{\r\n                             height: 215,\r\n                             width: 300,\r\n                         }}\r\n                         key={\"Carousel3\"}\r\n                    />\r\n                    <img src={\"http://localhost:7100/association/getImageById/4b704926a1c74d28942b21221032c62a\"}\r\n                         style={{\r\n                             height: 215,\r\n                             width: 300,\r\n                         }}\r\n                         key={\"Carousel4\"}\r\n                    />\r\n                </Carousel>\r\n                {/* ======================== 社团展示栏-卡片组 ======================== */}\r\n                <div style={{ marginTop: 36, }}>\r\n                    <Row gutter={[24, 24]}>\r\n                        {\r\n                            associationList.map(item => {\r\n                                return <Col span={6}>\r\n                                    <AssociationCard item={item}/>\r\n                                </Col>\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\index.js",["381"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Home\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\Login\\index.js",["382","383"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\NoPermission\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\shareService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\userService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\index.js",["384","385","386"],"// 第三方\r\nimport React, {useEffect} from 'react'\r\n// uacs\r\nimport SideMenu from '../../../components/SideMenu'\r\nimport TopHeader from '../../../components/TopHeader'\r\nimport SysRouter from './SysRouter'\r\n// css\r\nimport './index.css'\r\n// antd\r\nimport {Layout, message} from 'antd';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst {Content} = Layout;\r\n\r\n\r\nexport default function SandBox() {\r\n\r\n    return (\r\n        <Layout>\r\n            {/* 侧边栏 */}\r\n            <SideMenu/>\r\n            {/* 内容布局 */}\r\n            <Layout>\r\n                {/* 头部导航栏 */}\r\n                <TopHeader/>\r\n                {/* 前端路由 */}\r\n                <Content style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 240,\r\n                    overflow: 'auto'\r\n                }}>\r\n                    <SysRouter></SysRouter>\r\n                </Content>\r\n\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\ShareDetail\\index.js",["387","388","389","390"],"import React, {useEffect, useState} from 'react'\r\nimport {Button, Descriptions, Modal, PageHeader} from 'antd'\r\n\r\nimport {\r\n    RECRUITMENT_PUBLISH_STATE_LIST,\r\n    RECRUITMENT_PUBLISH_STATE_MAP,\r\n    RECRUITMENT_STATE_MAP\r\n} from '../../../../../constants/state'\r\nimport {listRecruitment} from \"../../../../../services/db\";\r\nimport axios from \"axios\";\r\nimport {getShareById} from \"../../../../../services/shareService\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function ShareDetail(props) {\r\n\r\n    const [shareInfo, setShareInfo] = useState()\r\n\r\n    // 获取用户列表\r\n    useEffect(() => {\r\n        // 如何获取url地址中的参数？\r\n        getShareById(props.match.params.shareId)\r\n            .then(res => {\r\n                const {data} = res.data\r\n                console.log(data)\r\n                setShareInfo(data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"site-page-header-ghost-wrapper\">\r\n            {/* =============== 纳新通知基本信息 =============== */}\r\n            {shareInfo &&\r\n            <PageHeader\r\n                ghost={false}\r\n                onBack={() => window.history.back()}\r\n                title=\"纳新详情\"\r\n                subTitle={shareInfo.title}\r\n                extra={[\r\n                    <Button key=\"3\">打回</Button>,\r\n                    <Button key=\"1\" type=\"primary\">通过审核</Button>,\r\n                ]}\r\n            >\r\n                <Descriptions size=\"small\" column={3}>\r\n                    <Descriptions.Item label=\"纳新社团\">{shareInfo.associationName}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"申请人\">{shareInfo.name}</Descriptions.Item>\r\n                    <Descriptions.Item\r\n                        label=\"审核状态\">{RECRUITMENT_STATE_MAP.get(shareInfo.state)}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"发布状态\">\r\n                        {RECRUITMENT_PUBLISH_STATE_MAP.get(shareInfo.state)\r\n                            ? RECRUITMENT_PUBLISH_STATE_MAP.get(shareInfo.state)\r\n                            : RECRUITMENT_PUBLISH_STATE_LIST.UNPUBLISH.name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"备注\">{shareInfo.description}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"浏览量\">{shareInfo.view}</Descriptions.Item>\r\n                </Descriptions>\r\n\r\n                {/* 纳新通知展示信息 */}\r\n                <div dangerouslySetInnerHTML={{\r\n                    __html: shareInfo.shareContent\r\n                }}\r\n                     style={{\r\n                         margin: '24px 24px',\r\n                         border: '1px solid gray',\r\n                     }}>\r\n                </div>\r\n            </PageHeader>\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\SysRouter\\index.jsx",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\index.js",["391","392","393","394","395","396"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, Modal, Popover, Space, Table, Tooltip} from 'antd'\r\nimport {\r\n    CloseOutlined, DeleteOutlined, ExclamationCircleOutlined,\r\n    RollbackOutlined, CheckOutlined\r\n} from '@ant-design/icons';\r\nimport usePublish from \"../../../../hooks/usePublish\";\r\nimport {ROLE_TYPE} from \"../../../../constants/type\";\r\nimport axios from \"axios\";\r\nimport {getShareList} from \"../../../../services/shareService\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function ShareManage() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [shareList, setShareList] = useState([])\r\n\r\n    useEffect(() => {\r\n        getShareList().then(res => {\r\n            const {data} = res.data\r\n            setShareList(data)\r\n        })\r\n    }, [])\r\n\r\n    const handelShareUpdate = (shareId) => {\r\n        console.log(shareId)\r\n    }\r\n\r\n    const renderOptions = (item) => {\r\n        let isSuperAdmin = false\r\n        const hasRoleList = userInfo.roleList\r\n        hasRoleList.map(role => {\r\n            if (role.roleName === ROLE_TYPE.SUPER_ADMIN.name) {\r\n                isSuperAdmin = true\r\n                return\r\n            }\r\n        })\r\n        return <Space>\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => handelShareUpdate(item.shareId)}>撤销</Button>}\r\n\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<DeleteOutlined/>}\r\n                    onClick={() => handelShareUpdate(item.shareId)}>删除</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" icon={<CheckOutlined/>}\r\n                    onClick={() => handelShareUpdate(item.shareId)}>通过</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<CloseOutlined/>}\r\n                    onClick={() => handelShareUpdate(item.shareId)}>拒绝</Button>}\r\n        </Space>\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'shareId',\r\n            render(shareId) {\r\n                return <b>{shareId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '标题',\r\n            dataIndex: 'title',\r\n            render(title, item) {\r\n                return <Tooltip title=\"点击查看详情\">\r\n                    <a href={`#/manage/share/list/${item.shareId}`}\r\n                    >{title}</a>\r\n                </Tooltip>;\r\n            }\r\n        },\r\n        {\r\n            title: '所在社团',\r\n            dataIndex: 'associationName',\r\n        },\r\n        {\r\n            title: '申请人',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case \"UNEXAMINE\":\r\n                        return <Badge status=\"warning\" text=\"未提交\"/>\r\n                    case \"EXAMINING\":\r\n                        return <Badge status=\"processing\" text=\"审核中\"/>\r\n                    case \"EXAMINE_PASS\":\r\n                        return <Badge status=\"success\" text=\"审核通过\"/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={shareList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 6\r\n                }}\r\n                rowKey={item => item.shareId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ShareManage\\AddShare\\index.js",["397"],"import {useEffect, useRef, useState} from \"react\";\r\nimport {Button, Form, Input, message, notification, PageHeader, Select, Steps} from 'antd'\r\nimport axios from \"axios\";\r\nimport qs from 'querystring'\r\n\r\nimport AssociationEditor from '../../../../../components/AssociationEditor'\r\nimport style from './index.css'\r\n\r\nconst {Step} = Steps;\r\nconst {TextArea} = Input\r\nconst {Option} = Select;\r\n\r\n// 点击“仅保存“或”提交审核“的key和btn\r\nconst key = `open${Date.now()}`;\r\nconst btn = (\r\n    <Button type=\"primary\" size=\"small\" onClick={() => notification.close(key)}>\r\n        我知道了\r\n    </Button>\r\n);\r\n\r\n\r\nexport default function AddShare(props) {\r\n\r\n    // 可选项、用户信息展示\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [associationList, setAssociationList] = useState([])\r\n\r\n    // 交互逻辑\r\n    const [currentStep, setCurrentStep] = useState(0) // 撰写纳新展示信息 步骤 位置\r\n\r\n    // 信息收集\r\n    const baseInfoFormRef = useRef()\r\n    const [content4Show, setContent4Show] = useState()\r\n    const [baseInfoForm, setBaseInfoForm] = useState()\r\n\r\n    // 获取本用户管理的社团（才能撰写纳新信息/通知/展示）\r\n    useEffect(() => {\r\n        const data = {\r\n            userId: userInfo.userId,\r\n            // TODO 多个角色怎么判断？\r\n            roleIds: [2],\r\n        }\r\n        axios.post('/association/getAssociationByUserId',\r\n            qs.stringify(data))\r\n            .then(res => {\r\n                const associationList = res.data.data\r\n                setAssociationList(associationList)\r\n            })\r\n    }, [])\r\n\r\n    const toPrevious = () => {\r\n        setCurrentStep(currentStep - 1)\r\n    }\r\n\r\n    const toNext = () => {\r\n        // 校验第一步：基本信息\r\n        if (currentStep === 0) {\r\n            baseInfoFormRef.current.validateFields().then(res => {\r\n                setBaseInfoForm(res)\r\n                setCurrentStep(currentStep + 1)\r\n            })\r\n        } else {\r\n            if (!content4Show || content4Show === \"\" || content4Show.trim() === \"<p></p>\") {\r\n                message.error(\"社团经历分享内容不得为空！\")\r\n                return\r\n            }\r\n            setCurrentStep(currentStep + 1)\r\n        }\r\n    }\r\n\r\n    const handleCommit = (state) => {\r\n        const postData = {\r\n            userId: userInfo.userId, // 申请人ID\r\n            ...baseInfoForm, // 基本信息\r\n            shareContent: content4Show, // 展示的信息\r\n            state: state, // 默认初始状态为未审核\r\n        }\r\n        console.log(postData)\r\n        axios({\r\n            url: '/bulletin/addShare',\r\n            method: 'post',\r\n            data: postData,\r\n            headers: {'Content-Type': 'application/json;charset=UTF-8'}\r\n        }).then(() => {\r\n            notification.open({\r\n                message: state === 'UNEXAMINE' ? '保存成功' : '审核提交成功',\r\n                description: `您可以到 纳新信息列表 查看${state === 'UNEXAMINE' ? '保存' : '审核'}结果`,\r\n                btn,\r\n                key,\r\n            });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader title=\"发布社团经历分享\" subTitle=\"与同学们分享你精彩的社团经历吧~\"/>\r\n            <Steps current={currentStep}>\r\n                <Step title=\"基本信息\" description=\"纳新人数，起始时间等\"/>\r\n                <Step title=\"展示内容\" subTitle=\"二级标题\" description=\"纳新通知的信息内容等\"/>\r\n                <Step title=\"保存/提交\" description=\"仅保存或提交等待审核\"/>\r\n            </Steps>\r\n            {/*内容组*/}\r\n            <div className={style.contentGroup} style={{marginTop: '50px',}}>\r\n                {/*step1 基本信息 =====================================*/}\r\n                <div style={currentStep === 0 ? {} : {display: 'none',}}>\r\n                    <Form\r\n                        // form={shareFormRef}\r\n                        name=\"basic\"\r\n                        labelCol={{span: 4,}}\r\n                        wrapperCol={{span: 20,}}\r\n                        ref={baseInfoFormRef}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"分享标题\"\r\n                            name=\"title\"\r\n                            rules={\r\n                                [{required: true, message: '请输入分享标题',}]\r\n                            }\r\n                        >\r\n                            <Input type=\"text\"/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"想要分享的社团\" name=\"associationId\">\r\n                            {<Select style={{width: 240}}>\r\n                                {associationList.map(association => {\r\n                                    return<Option key={association.associationId}\r\n                                                  value={association.associationId}\r\n                                    >{association.associationName}</Option>\r\n                                })}\r\n                            </Select>}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\" name=\"description\">\r\n                            <TextArea rows={4} placeholder={\"若需求请填写备注信息\"}/>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n\r\n\r\n                {/* ===================================== step2 社团纳新展示信息 ===================================== */\r\n                }\r\n                <div style={currentStep === 1 ? {} : {display: 'none',}}>\r\n                    <AssociationEditor\r\n                        // 子传父 获取 富文本编辑器内容\r\n                        getContent={(value) => {\r\n                            console.log(value)\r\n                            setContent4Show(value)\r\n                        }}/>\r\n                </div>\r\n\r\n                {/* ============================== step3 保存或提交审核 =====================================*/\r\n                }\r\n                <div style={currentStep === 2 ? {} : {display: 'none',}}></div>\r\n            </div>\r\n\r\n            {/* =============== 按钮组 ===============*/}\r\n            <div style={{marginTop: '50px',}}>\r\n                {\r\n                    currentStep > 0 && <Button\r\n                        type=\"ghost\"\r\n                        onClick={toPrevious}\r\n                    >上一步</Button>\r\n                }\r\n                {\r\n                    currentStep < 2 && <Button\r\n                        type=\"primary\"\r\n                        onClick={toNext}\r\n                    >下一步</Button>\r\n                }\r\n\r\n                {/*============================== 最后一步 保存或提交 ================*/}\r\n                {\r\n                    currentStep === 2 && <div style={{\r\n                        position: 'fixed',\r\n                        bottom: '10%',\r\n                        right: '10%',\r\n                    }}>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => handleCommit(\"UNEXAMINE\")}\r\n                        >\r\n                            仅保存\r\n                        </Button>\r\n                        <Button danger={true}\r\n                                onClick={() => handleCommit(\"EXAMINING\")}\r\n                        >\r\n                            提交审核\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\PermissionList\\index.js",["398"],"import React, {Component} from 'react'\r\nimport {Button, Modal, Popover, Switch, Table, Tag} from 'antd'\r\nimport {DeleteOutlined, EditOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport {getPermissionList, updatePermissionById} from \"../../../../../services/db\";\r\n\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default class PermissonList extends Component {\r\n\r\n    state = {\r\n        dataSource: [],\r\n        columns: [\r\n            {\r\n                title: 'ID',\r\n                // 通过dataIndex映射VO字段\r\n                dataIndex: 'key',\r\n                // key: 'key',\r\n                render: (key) => {\r\n                    return <b>{key}</b>\r\n                }\r\n            },\r\n            {\r\n                title: '权限名称',\r\n                dataIndex: 'title',\r\n            },\r\n            {\r\n                title: '权限路径',\r\n                dataIndex: 'routePath',\r\n                render: (routePath) => {\r\n                    return <Tag color={\"orange\"}>{routePath}</Tag>\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (item) => {\r\n                    return <div>\r\n                        <Popover\r\n                            style={{}}\r\n                            content={\r\n                                <div>\r\n                                    <Switch checked={item.type === \"MENU_ELEMENT\"}\r\n                                            onClick={() => this.changeMenuState(item)}></Switch>\r\n                                </div>}\r\n                            title=\"是否在左侧菜单栏展示\"\r\n                            trigger={\r\n                                item.type === \"MENU_ELEMENT\" || item.type === \"MENU_ELEMENT_CLOSE\" ?\r\n                                    \"click\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            {/* {item.type === \"MENU_ELEMENT\" &&} */}\r\n                            <Button\r\n                                shape={\"circle\"}\r\n                                icon={<EditOutlined/>}\r\n                                // style={item.type === \"MENU_ELEMENT\" ? {\r\n                                //     border: \"1px solid rgb(165, 99, 13)\",\r\n                                //     color: \"rgb(165, 99, 13)\"\r\n                                // } : { border: \"1px\" }}\r\n                                // disabled={item.type === \"PAGE_ELEMENT\"}\r\n                            >\r\n                            </Button>\r\n                        </Popover>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <Button\r\n                            shape={\"circle\"}\r\n                            icon={<DeleteOutlined/>}\r\n                            danger\r\n                            onClick={() => this.confirmDelete(item)}\r\n                        >\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            },\r\n        ],\r\n    }\r\n\r\n\r\n    confirmDelete = (item) => {\r\n        // const { dataSource } = this.state\r\n        // console.log(\"==11 dataSource\",this.state.dataSource);\r\n        const {dataSource} = this.state\r\n        const thisPoint = this\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                let ds = []\r\n                if (item.grade === 1) {\r\n                    ds = dataSource.filter(data => data.key !== item.key)\r\n                } else if (item.grade === 2) {\r\n                    dataSource.map((firstPermission) => {\r\n                        if (firstPermission.children !== \"\") {\r\n                            firstPermission.children = firstPermission.children.filter((child) => child.key !== item.key)\r\n                            if (firstPermission.children.length === 0) {\r\n                                firstPermission.children = \"\"\r\n                            }\r\n                            ds.push(firstPermission)\r\n                            // console.log(\"==14 after push:\", ds);\r\n                        } else {\r\n                            ds.push(firstPermission)\r\n                        }\r\n\r\n                    })\r\n                }\r\n                thisPoint.setState({dataSource: ds})\r\n                // 调用后端接口，同步后台数据库\r\n                axios.get(`/association/deletePermissionById/${item.key}`)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 改变菜单项的状态。是否在左侧菜单栏展示\r\n    changeMenuState = (item) => {\r\n        console.log(\"==15 item\", item);\r\n        if (item.type === \"MENU_ELEMENT\") {\r\n            item.type = \"MENU_ELEMENT_CLOSE\"\r\n        } else if (item.type === \"MENU_ELEMENT_CLOSE\") {\r\n            item.type = \"MENU_ELEMENT\"\r\n        }\r\n        this.setState([...this.state.dataSource])\r\n\r\n        const data = {\r\n            permissionId: item.key,\r\n            type: item.type\r\n        }\r\n        updatePermissionById(data)// 同步后端\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // 获取菜单信息\r\n        getPermissionList().then(res => {\r\n            console.log(\"权限列表\",res.data.data)\r\n            const {data} = res.data // res.data还只是responseBody\r\n            data.forEach((item) => {\r\n                if (item.children.length === 0) {\r\n                    item.children = \"\"\r\n                } else {\r\n                    item.children.forEach((e) => {\r\n                        if (e.children.length === 0) {\r\n                            e.children = \"\"\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            this.setState({dataSource: data})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table\r\n                    dataSource={this.state.dataSource}\r\n                    columns={this.state.columns}\r\n                    pagination={{\r\n                        pageSize: 5\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\ClassList\\index.js",["399","400","401","402","403","404","405","406"],"import {Button, Form, Input, message, Modal, Space, Table, Tag} from 'antd';\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport {addTreeNode, deleteTreeNode, getClassTree} from \"../../../../../services/treeService\";\r\nimport {ICON, OPTION_ICONS} from \"../../../../../constants/icon\";\r\nimport {TREE_NODE_TYPE} from \"../../../../../constants/type\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ClassList() {\r\n\r\n    const [classTreeData, setClassTreeData] = useState([])\r\n    const [addingCollegeName, setAddingCollegeName] = useState('')\r\n    const [addCollegeForm] = Form.useForm()\r\n    const addCollegeRef = useRef()\r\n\r\n    const refreshTree = () => {\r\n        getClassTree()\r\n            .then(res => {\r\n                const {data} = res.data\r\n                const formattedData = formatDataSource(data)\r\n                setClassTreeData(formattedData)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshTree()\r\n    }, [])\r\n\r\n\r\n    const formatDataSource = (respData) => {\r\n        respData.map(item1 => {\r\n            if (item1.children.length === 0) {\r\n                item1.children = ''\r\n            } else {\r\n                item1.children.map(item2 => {\r\n                    if (item2.children.length === 0) {\r\n                        item2.children = ''\r\n                    } else {\r\n                        item2.children.map(item3 => {\r\n                            if (item3.children.length === 0) {\r\n                                item3.children = ''\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return respData\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '序号',\r\n            dataIndex: 'treeId',\r\n        },\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'label',\r\n            render: (label, item) => {\r\n                return (\r\n                    <Space>\r\n                        {label}\r\n\r\n                        {item.type === TREE_NODE_TYPE.COLLEGE.value\r\n                        && <Tag icon={ICON.college} color={'#cd201f'}>学院</Tag>}\r\n\r\n                        {item.type === TREE_NODE_TYPE.MAJOR.value\r\n                        && <Tag icon={ICON.major} color={'#55acee'}>专业</Tag>}\r\n\r\n                        {item.type === TREE_NODE_TYPE.CLASS.value\r\n                        && <Tag icon={ICON.class} color={'#3b5999'}>班级</Tag>}\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '学院官网',\r\n            dataIndex: 'description',\r\n            render: (description) => {\r\n                return <a>{description}</a>\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (_, item) => {\r\n                let nodeName = ''\r\n                if (item.type === TREE_NODE_TYPE.COLLEGE.value) {\r\n                    nodeName = '专业'\r\n                } else if (item.type === TREE_NODE_TYPE.MAJOR.value) {\r\n                    nodeName = '班级'\r\n                }\r\n                const type = item.type === TREE_NODE_TYPE.COLLEGE.value ? TREE_NODE_TYPE.MAJOR.value : TREE_NODE_TYPE.CLASS.value\r\n                const pid = item.treeId\r\n                return (\r\n                    <Space>\r\n                        {item.level < 3\r\n                        && <Button size={\"small\"} icon={OPTION_ICONS.ADD}\r\n                                   onClick={() => {\r\n                                       console.log('当前item：')\r\n                                       console.log(item)\r\n                                       Modal.confirm({\r\n                                           title: `新增${nodeName}`,\r\n                                           width: 498,\r\n                                           icon: ICON.college,\r\n                                           content: <Form name={`add${nodeName}`} form={addCollegeForm}\r\n                                                          ref={addCollegeRef}\r\n                                                          labelCol={{span: 6,}} wrapperCol={{span: 18,}}\r\n                                                          autoComplete=\"off\"\r\n                                                          style={{\r\n                                                              margin: '30px 0px 30px 0px'\r\n                                                          }}\r\n                                           >\r\n                                               <Form.Item\r\n                                                   label={`${nodeName}名称`}\r\n                                                   name='treeNodeName'\r\n                                                   rules={[\r\n                                                       {\r\n                                                           required: true,\r\n                                                           message: `请输入${nodeName}名称`,\r\n                                                       },\r\n                                                   ]}\r\n                                               >\r\n                                                   <Input placeholder={`请输入${nodeName}名称`}/>\r\n                                               </Form.Item>\r\n                                           </Form>,\r\n                                           onOk: () => {\r\n                                               addCollegeForm.validateFields()\r\n                                                   .then(values => {\r\n                                                       const data = {label: values.treeNodeName, type, pid,}\r\n                                                       addTreeNode(data)\r\n                                                           .then(() => {\r\n                                                               message.success(\"新增成功！\")\r\n                                                               refreshTree()\r\n                                                           })\r\n                                                   }).finally(() => {\r\n                                                   addCollegeRef.current.resetFields()\r\n                                               })\r\n                                           }\r\n                                       })\r\n                                   }}\r\n                        >新增{nodeName}</Button>}\r\n\r\n                        <Button size={\"small\"} icon={OPTION_ICONS.EDIT}\r\n                                onClick={() => {\r\n\r\n                                }}\r\n                        >重命名</Button>\r\n\r\n                        {item.children.length < 1 &&\r\n                        <Button size={\"small\"} danger icon={OPTION_ICONS.DELETE}\r\n                                onClick={() => {\r\n                                    Modal.confirm({\r\n                                        title: `确认删除【${item.label}】吗？`,\r\n                                        icon: ICON.college,\r\n                                        onOk: () => {\r\n                                            deleteTreeNode(item.treeId)\r\n                                                .then(() => {\r\n                                                    message.success(\"删除成功！\")\r\n                                                    refreshTree()\r\n                                                })\r\n                                        }\r\n                                    })\r\n                                }}\r\n                        >删除</Button>}\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Button type='primary' style={{marginBottom: 20}}\r\n                    onClick={() => {\r\n                        Modal.confirm({\r\n                            title: '新增学院',\r\n                            width: 498,\r\n                            icon: ICON.college,\r\n                            content: <Form name=\"addCollege\" form={addCollegeForm} ref={addCollegeRef}\r\n                                           labelCol={{span: 6,}} wrapperCol={{span: 18,}} autoComplete=\"off\"\r\n                                           style={{\r\n                                               margin: '30px 0px 30px 0px'\r\n                                           }}\r\n                            >\r\n                                <Form.Item\r\n                                    label=\"学院名称\"\r\n                                    name=\"collegeName\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入学院名称！',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder={'请输入学院名称'}/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"学院官网\" name=\"url\">\r\n                                    <Input placeholder={'请输入学院官网'}/>\r\n                                </Form.Item>\r\n                            </Form>,\r\n                            onOk: () => {\r\n                                addCollegeForm.validateFields()\r\n                                    .then(values => {\r\n                                        const data = {\r\n                                            label: values.collegeName,\r\n                                            type: TREE_NODE_TYPE.COLLEGE.value,\r\n                                            pid: 0,\r\n                                            description: values.url,\r\n                                        }\r\n                                        addTreeNode(data)\r\n                                            .then(() => {\r\n                                                refreshTree()\r\n                                            })\r\n                                    }).finally(() => {\r\n                                    addCollegeRef.current.resetFields()\r\n                                })\r\n                            }\r\n                        })\r\n                    }}\r\n            >\r\n                新增学院\r\n            </Button>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={classTreeData}\r\n                rowKey={item => item.treeId}\r\n                pagination={{\r\n                    pageSize: 7\r\n                }}\r\n                rowSelection={{\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n\r\n                    },\r\n                    onSelectAll: (selected, selectedRows, changeRows) => {\r\n\r\n                    },\r\n                }}\r\n\r\n            />\r\n        </>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\AddRecruitment\\index.js",["407","408","409","410"],"import {useEffect, useRef, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    DatePicker,\r\n    Form,\r\n    Input,\r\n    InputNumber,\r\n    message,\r\n    notification,\r\n    PageHeader,\r\n    Select,\r\n    Space,\r\n    Steps\r\n} from 'antd'\r\n\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\nimport axios from \"axios\";\r\nimport qs from 'querystring'\r\n\r\nimport moment from 'moment'\r\n\r\nimport AssociationEditor from \"../../../../../components/AssociationEditor\";\r\nimport style from './index.css'\r\nimport {getAssociationByUserId} from \"../../../../../services/db\";\r\n\r\n\r\nconst {Step} = Steps;\r\n\r\nconst {RangePicker} = DatePicker;\r\n\r\nconst {TextArea} = Input\r\n\r\nconst {Option} = Select;\r\n\r\n// 点击“仅保存“或”提交审核“的key和btn\r\nconst key = `open${Date.now()}`;\r\nconst btn = (\r\n    <Button type=\"primary\" size=\"small\" onClick={() => notification.close(key)}>\r\n        我知道了\r\n    </Button>\r\n);\r\n\r\nexport default function AddRecruitment(props) {\r\n\r\n    // 展示\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [associationList, setAssociationList] = useState([])\r\n\r\n    // 交互逻辑\r\n    const [currentStep, setCurrentStep] = useState(0) // 撰写纳新展示信息 步骤 位置\r\n    const baseInfoFormRef = useRef(null)\r\n\r\n    // step1 : baseInfo\r\n    const [newAssociation, setNewAssociation] = useState(0) // 纳新的社团组织\r\n    const [newNum, setNewNum] = useState(30);// 社团纳新人数\r\n    const [newStartTime, setNewStartTime] = useState(\"\") //纳新开始时间\r\n    const [newEndTime, setNewEndTime] = useState(\"\") //纳新结束时间\r\n    const [baseInfoForm, setBaseInfoForm] = useState({})\r\n    // step2 : content for show\r\n    const [content4Show, setContent4Show] = useState(\"\")\r\n\r\n\r\n    // 获取本用户管理的社团（才能撰写纳新信息/通知/展示）\r\n    useEffect(() => {\r\n        const data = {\r\n            userId: userInfo.userId,\r\n            roleIds: [2],\r\n        }\r\n        getAssociationByUserId(data)\r\n            .then(res => {\r\n                const associationList = res.data.data\r\n                setAssociationList(associationList)\r\n            })\r\n    }, [])\r\n\r\n    const toPrevious = () => {\r\n        setCurrentStep(currentStep - 1)\r\n    }\r\n\r\n    const toNext = () => {\r\n        // 校验第一步：基本信息\r\n        if (currentStep === 0) {\r\n            baseInfoFormRef.current.validateFields().then(res => {\r\n                console.log(\"==1 AddRecrutment 校验结果：\", res)\r\n                setBaseInfoForm(res)\r\n                setCurrentStep(currentStep + 1)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            if (content4Show === \"\" || content4Show.trim() === \"<p></p>\") {\r\n                message.error(\"社团纳新展示内容不得为空\")\r\n                return\r\n            }\r\n            console.log(\"收集的信息：\", baseInfoForm, content4Show)\r\n            setCurrentStep(currentStep + 1)\r\n        }\r\n    }\r\n\r\n\r\n    const onChange = (dates, dateStrings) => {\r\n        console.log('From: ', dates[0], ', to: ', dates[1]);\r\n        console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\r\n        setNewStartTime(dateStrings[0])\r\n        setNewEndTime(dateStrings[1])\r\n    }\r\n\r\n    const handleCommit = (state) => {\r\n        const postData = {\r\n            userId: userInfo.userId, // 申请人ID\r\n            ...baseInfoForm, // 基本信息\r\n            newNum: newNum, // 纳新人数\r\n            content: content4Show, // 展示的信息\r\n            state: state, // 默认初始状态为未审核\r\n            startTime: newStartTime,\r\n            endTime: newEndTime,\r\n        }\r\n\r\n        axios({\r\n            url: '/association/addRecruitment',\r\n            method: 'post',\r\n            data: postData,\r\n            headers: {'Content-Type': 'application/json;charset=UTF-8'}\r\n        }).then(res => {\r\n            console.log(\"==27 res\", res);\r\n            // props.history.push('/') // TODO 提交后是否需要跳转页面？\r\n            notification.open({\r\n                message: state === 'UNEXAMINE' ? '保存成功' : '审核提交成功',\r\n                description: `您可以到 纳新信息列表 查看${state === 'UNEXAMINE' ? '保存' : '审核'}结果`,\r\n                btn,\r\n                key,\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"==26 err\", err);\r\n            notification.open({\r\n                message: state === 'UNEXAMINE' ? '保存成功' : '审核提交成功',\r\n                description: `您可以到 纳新信息列表 查看${state === 'UNEXAMINE' ? '保存' : '审核'}结果`,\r\n                btn,\r\n                key,\r\n            });\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleOptionChange = (value) => {\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    const renderAssociationListToSelectOptions = () => {\r\n        let options = []\r\n        associationList.forEach(association => {\r\n            options.push(<Option\r\n                key={association.associationId}\r\n                value={association.associationId}>\r\n                {association.associationName}\r\n            </Option>)\r\n        })\r\n        return (\r\n            <Select\r\n                // defaultOpen={true} // 是否默认展开\r\n                defaultActiveFirstOption={true} // 首项高亮\r\n                style={{width: 240}}\r\n                onChange={handleOptionChange}>\r\n                {options}\r\n            </Select>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader className=\"site-page-header\" title=\"撰写纳新展示\" subTitle=\"发挥你的文笔，吸引同学们的加入吧~\"/>\r\n            <Steps current={currentStep}>\r\n                <Step title=\"基本信息\" description=\"纳新人数，起始时间等\"/>\r\n                <Step title=\"展示内容\" subTitle=\"二级标题\" description=\"纳新通知的信息内容等\"/>\r\n                <Step title=\"保存/提交\" description=\"仅保存或提交等待审核\"/>\r\n            </Steps>\r\n            {/*内容组*/}\r\n            <div className={style.contentGroup} style={{marginTop: '50px',}}>\r\n                {/*step1 基本信息 =====================================*/}\r\n                <div style={currentStep === 0 ? {} : {display: 'none',}}>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{span: 4,}}\r\n                        wrapperCol={{span: 20,}}\r\n                        ref={baseInfoFormRef}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"纳新标题\"\r\n                            name=\"title\"\r\n                            rules={\r\n                                [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请输入纳新标题',\r\n                                    },\r\n                                ]\r\n                            }\r\n                        >\r\n                            <Input type=\"text\"/>\r\n                        </Form.Item>\r\n                        {/* name相同的话，他们受控行为就相同 */}\r\n                        <Form.Item label=\"纳新社团\" name=\"associationId\">\r\n                            {renderAssociationListToSelectOptions()}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"纳新人数\">\r\n                            <Space>\r\n                                <InputNumber\r\n                                    min={1}\r\n                                    max={30}\r\n                                    value={newNum}\r\n                                    onChange={setNewNum}/>\r\n                                <Button\r\n                                    type=\"ghost\"\r\n                                    onClick={() => {\r\n                                        setNewNum(30);\r\n                                    }}\r\n                                >重置</Button>\r\n                            </Space>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"纳新起始时间\">\r\n                            <Space direction=\"vertical\" size={12}>\r\n                                <RangePicker\r\n                                    locale={locale} // 采用本地语言 即中文\r\n                                    // 不同选项快捷时间范围\r\n                                    ranges={{\r\n                                        '今天': [moment(), moment()],\r\n                                        '本月': [moment().startOf('month'), moment().endOf('month')],\r\n                                    }}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Space>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\" name=\"description\">\r\n                            <TextArea rows={4} placeholder={\"若需求请填写备注信息\"}/>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n\r\n\r\n                {/* step2 社团纳新展示信息 =====================================*/\r\n                }\r\n                <div style={currentStep === 1 ? {} : {display: 'none',}}>\r\n                    <AssociationEditor\r\n                        // 子传父 获取 富文本编辑器内容\r\n                        getContent={(value) => {\r\n                            console.log(value)\r\n                            setContent4Show(value)\r\n                        }}/>\r\n                </div>\r\n\r\n\r\n                {/*step3 保存或提交审核 =====================================*/\r\n                }\r\n                <div style={currentStep === 2 ? {} : {display: 'none',}}>\r\n                </div>\r\n            </div>\r\n\r\n            {/*按钮组*/\r\n            }\r\n            <div style={{\r\n                marginTop: '50px',\r\n                // padding:'10px',\r\n                // border:'10px',\r\n                // paddingRight:'10px',\r\n                // paddingLeft:'10px',\r\n            }}>\r\n                {\r\n                    currentStep > 0 && <Button\r\n                        type=\"ghost\"\r\n                        onClick={toPrevious}\r\n                    >上一步</Button>\r\n                }\r\n                {\r\n                    currentStep < 2 && <Button\r\n                        type=\"primary\"\r\n                        onClick={toNext}\r\n                    >下一步</Button>\r\n                }\r\n\r\n                {/*最后一步 保存或提交 ================*/}\r\n                {\r\n                    currentStep === 2 && <span>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => handleCommit(\"UNEXAMINE\")}\r\n                        >\r\n                            仅保存\r\n                        </Button>\r\n                        <Button danger={true}\r\n                                onClick={() => handleCommit(\"EXAMINING\")}\r\n                        >\r\n                            提交审核\r\n                        </Button>\r\n                    </span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\PermissionManage\\RoleList\\index.js",["411","412","413","414"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\UserTagList\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\Share\\index.js",["415"],"import {Avatar, List, Space} from \"antd\";\r\nimport {EyeOutlined, LikeOutlined, MessageOutlined} from \"@ant-design/icons\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getShareByAssociation} from \"../../../../services/shareService\";\r\nimport {getAssociationImageUrl} from \"../../../../services/imageService\";\r\nimport {IMAGE_TYPE} from \"../../../../constants/type\";\r\n\r\nconst sharePageSize = 5\r\nexport default function Share(props) {\r\n\r\n    const [shareList, setShareList] = useState([])\r\n\r\n    useEffect(() => {\r\n        getShareByAssociation(props.associationId)\r\n            .then(res => {\r\n                const {data} = res.data\r\n                console.log(\"社团分享：\", data)\r\n                // 调整展示方式\r\n                const newData = data.map(item => {\r\n                    return {\r\n                        ...item,\r\n                        title: item.title,\r\n                        avatar: 'https://joeschmoe.io/api/v1/random',\r\n                        description: `来自 ${item.roleName} - ${item.name}, 发布时间： ${item.shareTime || '--/--'}`,\r\n                        content: item.shortDescription,\r\n                    }\r\n                })\r\n                setShareList(newData)\r\n            })\r\n    }, [])\r\n\r\n    const IconText = ({icon, text}) => (\r\n        <Space>\r\n            {React.createElement(icon)}\r\n            {text}\r\n        </Space>\r\n    );\r\n\r\n    // 查头像\r\n    const getAvatarUrl = async (userId) => {\r\n        let image\r\n        await getAssociationImageUrl(IMAGE_TYPE.USER_AVATAR.value, userId).then(res => {\r\n            image = res.data.data\r\n        })\r\n        return image.url\r\n    }\r\n\r\n    return (\r\n        <List size=\"large\" itemLayout=\"vertical\"\r\n              dataSource={shareList}\r\n              pagination={{\r\n                  pageSize: sharePageSize,\r\n                  onChange: page => {\r\n                      console.log(page);\r\n                  },\r\n              }}\r\n              footer={\r\n                  <div>\r\n                      <b>高校社团管理系统-橘集</b> @2021\r\n                  </div>\r\n              }\r\n              renderItem={item => (\r\n                  <List.Item\r\n                      key={item.shareId}\r\n                      actions={[\r\n                          <IconText icon={EyeOutlined} text={item.view} key=\"viewNum\"/>,\r\n                          <IconText icon={LikeOutlined} text={item.thumbs} key=\"thumbsNum\"/>,\r\n                          <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\"/>,\r\n                      ]}\r\n                      extra={\r\n                          <img width={272} alt=\"logo\"\r\n                               src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                          />\r\n                      }\r\n                  >\r\n                      <List.Item.Meta\r\n                          avatar={<Avatar src={getAvatarUrl(item.userId)}/>}\r\n                          title={\r\n                              <a href={`#/user/share/list/${item.shareId}`}>{item.title}</a>}\r\n                          description={item.description}\r\n                      />\r\n                      {item.content}\r\n                  </List.Item>\r\n              )}\r\n        />\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\BigEvent\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\user\\AssociationDetail\\DataView\\index.js",["416","417"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\AddAssociation\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\JoinApplication\\index.js",["418","419","420","421","422","423"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, Modal, Space, Table, Tooltip} from 'antd'\r\nimport {\r\n    CheckOutlined,\r\n    CloseOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined,\r\n    RollbackOutlined\r\n} from '@ant-design/icons';\r\nimport usePublish from \"../../../../../hooks/usePublish\";\r\nimport {ROLE_TYPE} from \"../../../../../constants/type\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function JoinAssociation() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [recruitmentList, setRecruitmentList] = useState()\r\n    const [applicationList,setApplicationList] = useState([])\r\n\r\n    useEffect(() => {\r\n        setApplicationList([])\r\n    })\r\n\r\n    const handleUpdateApplicationState = (applicationId)=>{\r\n\r\n    }\r\n\r\n    const renderOptions = (item) => {\r\n        let isSuperAdmin = false\r\n        const hasRoleList = userInfo.roleList\r\n        hasRoleList.map(role => {\r\n            if (role.roleName === ROLE_TYPE.SUPER_ADMIN.name) {\r\n                isSuperAdmin = true\r\n                return\r\n            }\r\n        })\r\n        return <Space>\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>撤销</Button>}\r\n\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<DeleteOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>删除</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" icon={<CheckOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>通过</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<CloseOutlined/>}\r\n                    onClick={() => handleUpdateApplicationState(item.recruitmentId)}>拒绝</Button>}\r\n        </Space>\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '序号',\r\n            dataIndex: 'recruitmentId',\r\n            render(recruitmentId) {\r\n                return <b>{recruitmentId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '标题',\r\n            dataIndex: 'title',\r\n            render(title, item) {\r\n                return <Tooltip title=\"点击查看详情\">\r\n                    <a href={`#/manage/recruitment/list/${item.recruitmentId}`}\r\n                    >{title}</a>\r\n                </Tooltip>;\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case \"UNEXAMINE\":\r\n                        return <Badge status=\"warning\" text=\"未提交\"/>\r\n                    case \"EXAMINING\":\r\n                        return <Badge status=\"processing\" text=\"审核中\"/>\r\n                    case \"EXAMINE_PASS\":\r\n                        return <Badge status=\"success\" text=\"审核通过\"/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '纳新社团组织',\r\n            dataIndex: 'associationName',\r\n        },\r\n        {\r\n            title: '申请人',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        console.log(\"delete item\", item)\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                const newList = recruitmentList.filter(data => data.id !== item.id)\r\n                setRecruitmentList(newList)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={recruitmentList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 4\r\n                }}\r\n                rowKey={item => item.recruitmentId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n",["424","425"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\index.js",["426","427","428","429","430"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, Modal, Popover, Space, Table, Tooltip} from 'antd'\r\nimport {\r\n    CloseOutlined, DeleteOutlined, ExclamationCircleOutlined,\r\n    RollbackOutlined, CheckOutlined\r\n} from '@ant-design/icons';\r\nimport usePublish from \"../../../../../hooks/usePublish\";\r\nimport {ROLE_TYPE} from \"../../../../../constants/type\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function RecruitmentList() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const {dataSource, handleRollback, handleDelete, handlePass, handleRefuse} = usePublish()\r\n    const [recruitmentList, setRecruitmentList] = useState()\r\n\r\n    useEffect(() => {\r\n        setRecruitmentList(dataSource)\r\n    })\r\n\r\n    const renderOptions = (item) => {\r\n        let isSuperAdmin = false\r\n        const hasRoleList = userInfo.roleList\r\n        hasRoleList.map(role => {\r\n            if (role.roleName === ROLE_TYPE.SUPER_ADMIN.name) {\r\n                isSuperAdmin = true\r\n                return\r\n            }\r\n        })\r\n        return <Space>\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => handleRollback(item.recruitmentId)}>撤销</Button>}\r\n\r\n            {!isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<DeleteOutlined/>}\r\n                    onClick={() => handleDelete(item.recruitmentId)}>删除</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" icon={<CheckOutlined/>}\r\n                    onClick={() => handlePass(item.recruitmentId)}>通过</Button>}\r\n\r\n            {isSuperAdmin &&\r\n            <Button size=\"small\" danger icon={<CloseOutlined/>}\r\n                    onClick={() => handleRefuse(item.recruitmentId)}>拒绝</Button>}\r\n        </Space>\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '纳新通知ID',\r\n            dataIndex: 'recruitmentId',\r\n            render(recruitmentId) {\r\n                return <b>{recruitmentId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '标题',\r\n            dataIndex: 'title',\r\n            render(title, item) {\r\n                return <Tooltip title=\"点击查看详情\">\r\n                    <a href={`#/manage/recruitment/list/${item.recruitmentId}`}\r\n                    >{title}</a>\r\n                </Tooltip>;\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case \"UNEXAMINE\":\r\n                        return <Badge status=\"warning\" text=\"未提交\"/>\r\n                    case \"EXAMINING\":\r\n                        return <Badge status=\"processing\" text=\"审核中\"/>\r\n                    case \"EXAMINE_PASS\":\r\n                        return <Badge status=\"success\" text=\"审核通过\"/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '纳新社团组织',\r\n            dataIndex: 'associationName',\r\n        },\r\n        {\r\n            title: '申请人',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        console.log(\"delete item\", item)\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                // console.log(\"同步前端页面\")\r\n                const newList = recruitmentList.filter(data => data.id !== item.id)\r\n                setRecruitmentList(newList)\r\n                // 调用后端接口，同步后台数据库\r\n                // TODO 同步后台数据(前台数据不可信？从后台更新后重新获取？)\r\n                // axios.delete(`/association//${item.userId}`)\r\n                //     .then((res) => {\r\n                //\r\n                //     })\r\n                //     .catch((err) => {\r\n                //\r\n                //     })\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={recruitmentList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 4\r\n                }}\r\n                rowKey={item => item.recruitmentId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\RecruitmentManage\\RecruitmentList\\RecruitmentDetail\\index.js",["431","432"],"import React, {useEffect, useState} from 'react'\r\nimport {Button, Descriptions, Modal, PageHeader} from 'antd'\r\n\r\nimport {\r\n    RECRUITMENT_PUBLISH_STATE_LIST,\r\n    RECRUITMENT_PUBLISH_STATE_MAP,\r\n    RECRUITMENT_STATE_MAP\r\n} from '../../../../../../constants/state'\r\nimport {listRecruitment} from \"../../../../../../services/db\";\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function RecruitmentDetail(props) {\r\n\r\n    const [recruitmentInfo, setRecruitmentInfo] = useState([])\r\n\r\n    // 获取用户列表\r\n    useEffect(() => {\r\n        // 如何获取url地址中的参数？\r\n        listRecruitment(props.match.params.id).then(res => {\r\n            setRecruitmentInfo(res.data.data)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"site-page-header-ghost-wrapper\">\r\n            {/* =============== 纳新通知基本信息 =============== */}\r\n            {recruitmentInfo &&\r\n            <PageHeader\r\n                ghost={false}\r\n                onBack={() => window.history.back()}\r\n                title=\"纳新详情\"\r\n                subTitle={recruitmentInfo.title}\r\n                extra={[\r\n                    <Button key=\"3\">打回</Button>,\r\n                    <Button key=\"1\" type=\"primary\">通过审核</Button>,\r\n                ]}\r\n            >\r\n                <Descriptions size=\"small\" column={3}>\r\n                    <Descriptions.Item label=\"纳新社团\">{recruitmentInfo.associationName}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"申请人\">{recruitmentInfo.name}</Descriptions.Item>\r\n                    <Descriptions.Item\r\n                        label=\"起始时间\">{recruitmentInfo.startTime}~~{recruitmentInfo.endTime}</Descriptions.Item>\r\n                    <Descriptions.Item\r\n                        label=\"审核状态\">{RECRUITMENT_STATE_MAP.get(recruitmentInfo.state)}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"发布状态\">\r\n                        {RECRUITMENT_PUBLISH_STATE_MAP.get(recruitmentInfo.state)\r\n                            ? RECRUITMENT_PUBLISH_STATE_MAP.get(recruitmentInfo.state)\r\n                            : RECRUITMENT_PUBLISH_STATE_LIST.UNPUBLISH.name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"备注\">{recruitmentInfo.description}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"纳新人数\">{recruitmentInfo.newNum}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"浏览量\">{recruitmentInfo.view}</Descriptions.Item>\r\n                </Descriptions>\r\n\r\n                {/* 纳新通知展示信息 */}\r\n                <div dangerouslySetInnerHTML={{\r\n                    __html: recruitmentInfo.content\r\n                }}\r\n                     style={{\r\n                         margin: '24px 24px',\r\n                         border: '1px solid gray',\r\n                     }}>\r\n                </div>\r\n            </PageHeader>\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\applicationService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationDetail\\index.js",["433","434","435"],"import React, {useEffect, useState} from 'react';\r\nimport {Badge, Button, Col, Descriptions, Drawer, Image, Modal, PageHeader, Row, Space} from 'antd';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getApplicationDetail} from \"../../../../../services/applicationService\";\r\nimport ViewInterview from \"../../../../components/ViewInterview\";\r\nimport {APPLICATION_STATE} from \"../../../../../constants/state\";\r\nimport {getUserById} from \"../../../../../services/db\";\r\nimport {getAssociationImageUrl} from \"../../../../../services/imageService\";\r\nimport {IMAGE_TYPE} from \"../../../../../constants/type\";\r\n\r\n\r\nexport default function ApplicationDetail(props) {\r\n\r\n\r\n    const history = useHistory()\r\n    // 申请表\r\n    const [visible, setVisible] = useState(false)\r\n    const [applicationDetail, setApplicationDetail] = useState()\r\n    // 用户简历信息\r\n    const userSession = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [userInfo, setUserInfo] = useState()\r\n    const [userIdPhoto, setUserIdPhoto] = useState()\r\n\r\n\r\n    useEffect(() => {\r\n        getApplicationDetail(props.match.params.applicationId).then(res => {\r\n            const applicationDetail = res.data.data\r\n            console.log('申请表详情：')\r\n            console.log(applicationDetail)\r\n            setApplicationDetail(applicationDetail)\r\n\r\n            getUserById(applicationDetail.userId).then(res => {\r\n                const {data} = res.data\r\n                // console.log('用户信息：')\r\n                // console.log(data)\r\n                setUserInfo(data)\r\n            })\r\n            getAssociationImageUrl(IMAGE_TYPE.USER_ID_PHOTO.value, applicationDetail.userId).then(res => {\r\n                const images = res.data.data\r\n                setUserIdPhoto(images[0])\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    const renderState = (state) => {\r\n        // console.log('state:')\r\n        // console.log(state)\r\n        switch (state) {\r\n            case APPLICATION_STATE.UN_COMMIT.value:\r\n                return <Badge status=\"warning\" text={APPLICATION_STATE.UN_COMMIT.name}/>\r\n            case APPLICATION_STATE.APPLYING.value:\r\n                return <Badge status=\"processing\" text={APPLICATION_STATE.APPLYING.name}/>\r\n            case APPLICATION_STATE.INTERVIEW_INVITING.value:\r\n                return <Badge status=\"success\" text={APPLICATION_STATE.INTERVIEW_INVITING.name}/>\r\n            case APPLICATION_STATE.UN_INTERVIEW.value:\r\n                return <Badge status=\"processing\" text={APPLICATION_STATE.UN_INTERVIEW.name}/>\r\n            case APPLICATION_STATE.APPLY_REFUSE.value:\r\n                return <Badge status=\"error\" text={APPLICATION_STATE.APPLY_REFUSE.name}/>\r\n            default:\r\n                return <Badge status=\"error\" text=\"状态异常\"/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            marginTop: -20,\r\n        }}>\r\n            {(applicationDetail && userInfo && userIdPhoto) &&\r\n            <>\r\n                <PageHeader onBack={() => history.goBack()} title={'申请表详情'}\r\n                            extra={<Space>\r\n                                {(\r\n                                    applicationDetail.state === APPLICATION_STATE.UN_INTERVIEW.value\r\n                                    || applicationDetail.state === APPLICATION_STATE.INTERVIEW_INVITING.value\r\n                                    || applicationDetail.state === APPLICATION_STATE.REFUSE_INVITING.value\r\n                                ) && <Button type=\"primary\" onClick={() => {\r\n                                    Modal.info({\r\n                                        title: '面试安排',\r\n                                        width: 698,\r\n                                        content: <ViewInterview application={applicationDetail}/>,\r\n                                        onOk: () => {\r\n                                        },\r\n                                        okText: '关闭',\r\n                                    })\r\n                                }}>\r\n                                    查看面试安排\r\n                                </Button>\r\n                                }\r\n                                {(applicationDetail.state === APPLICATION_STATE.APPLY_REFUSE.value)\r\n                                && <Button type=\"primary\" onClick={() => {\r\n                                    Modal.info({\r\n                                        title: '面试安排',\r\n                                        width: 698,\r\n                                        content: '很抱歉，您不符合我们的需求，希望您早日找到合适的社团，祝您大学生活愉快~',\r\n                                        onOk: () => {\r\n                                        },\r\n                                        okText: '关闭',\r\n                                    })\r\n                                }}>\r\n                                    查看申请回复\r\n                                </Button>\r\n                                }\r\n                                {/* ======== 个人简历浏览 ========== */}\r\n                                {/* 从路由身上取得的是number，所以要用== */}\r\n                                {props.match.params.isReview == 1 &&\r\n                                <Button type=\"primary\" onClick={() => {\r\n                                    setVisible(true);\r\n                                }}>\r\n                                    浏览简历\r\n                                </Button>\r\n                                }\r\n                            </Space>}\r\n                />\r\n                {/*====== 基本信息 + 照片 ======*/}\r\n                <div style={{\r\n                    height: '100%-50px',\r\n                    overflowY: 'auto',\r\n                }}>\r\n                    <Row>\r\n                        <Col span={18}>\r\n                            <Descriptions title=\"\" bordered column={6}>\r\n                                <Descriptions.Item label=\"姓名\" span={2}>{applicationDetail.name}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"学号\" span={2}>{applicationDetail.userId}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"性别\" span={2}>{userInfo.gender}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"院系专业班级\"\r\n                                                   span={6}>{userInfo.collegeMajorClass}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"联系方式\" span={3}>{userInfo.phone}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"电子邮箱\" span={3}>{userInfo.email}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"意向部门\"\r\n                                                   span={3}>{applicationDetail.departmentName}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"是否接受调剂\" span={3}>是</Descriptions.Item>\r\n                            </Descriptions>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Image width={208} height={212} src={userIdPhoto?.url}/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* ====== 描述信息 ======  */}\r\n                    <Descriptions title=\"\" bordered column={6} labelStyle={{\r\n                        width: 165,\r\n                    }}>\r\n                        <Descriptions.Item label=\"兴趣爱好\" span={6}>{userInfo.selfLike}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"个人特长及优势\" span={6}>\r\n                            {applicationDetail.selfProfile}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"对社团的看法\" span={6}>\r\n                            {applicationDetail.viewOfAssociation}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"加入社团的目标\" span={6}>\r\n                            {applicationDetail.joinPurpose}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Status\" span={3}>\r\n                            {renderState(applicationDetail.state)}\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </div>\r\n            </>}\r\n\r\n            {/* ============================ 抽屉展示个人简历 ============================ */}\r\n            {userInfo &&\r\n            <Drawer visible={visible} title=\"成员主页\" placement=\"right\" width={900}\r\n                    onClose={() => {\r\n                        setVisible(false);\r\n                    }}>\r\n                <Row>\r\n                    <Col span={18}>\r\n                        <Descriptions column={7} bordered={true} size={'small'}>\r\n                            <Descriptions.Item label=\"姓名\" span={3}> {userInfo.name} </Descriptions.Item>\r\n                            <Descriptions.Item label=\"学号\" span={4}>{userInfo.userId}\r\n                            </Descriptions.Item>\r\n                            <Descriptions.Item label=\"专业班级\"\r\n                                               span={7}>{userInfo.collegeMajorClass} </Descriptions.Item>\r\n                            <Descriptions.Item label=\"联系方式\" span={3}>{userInfo?.phone}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"邮箱\" span={4}>{userInfo.email}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"微信\" span={3}>{userInfo.wechat} </Descriptions.Item>\r\n                            <Descriptions.Item label=\"QQ\" span={3}>{userInfo.qq}</Descriptions.Item>\r\n                        </Descriptions>\r\n                    </Col>\r\n                    {/* == 证件照 == */}\r\n                    <Col span={6}>\r\n                        <Image width={145} height={153} src={userIdPhoto?.url}/>\r\n                    </Col>\r\n                </Row>\r\n                {/* ====== 描述信息 ======  */}\r\n                <Descriptions bordered={true} column={24} size={'small'}>\r\n                    <Descriptions.Item label=\"生日\" span={8}>{userInfo.birthday}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"民族\" span={8}>{userInfo.nation}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"性别\" span={8}>{userInfo.gender} </Descriptions.Item>\r\n                    <Descriptions.Item label=\"兴趣爱好\" span={24}>{userInfo.selfLike}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"自我评价\" span={24}>{userInfo.selfProfile}</Descriptions.Item>\r\n                </Descriptions>\r\n            </Drawer>\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Review\\ApplicationList\\index.js",["436","437","438"],"import React, {useEffect, useRef, useState} from 'react'\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Cascader,\r\n    DatePicker,\r\n    Form,\r\n    Input,\r\n    message,\r\n    Modal,\r\n    Select,\r\n    Space,\r\n    Table,\r\n    TimePicker,\r\n    Tooltip\r\n} from 'antd'\r\nimport {RollbackOutlined} from '@ant-design/icons';\r\nimport {\r\n    getApplicationList,\r\n    updateApplicationInterview,\r\n    updateApplicationState\r\n} from \"../../../../../services/applicationService\";\r\nimport {ICON, OPTION_ICONS} from \"../../../../../constants/icon\";\r\nimport {APPLICATION_STATE} from \"../../../../../constants/state\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport qs from \"querystring\";\r\nimport ApplicationCalendar from \"../../../../components/Calendar\";\r\nimport {getInterviewAddress} from \"../../../../../services/treeService\";\r\nimport {getUserByAssociationId} from \"../../../../../services/userService\";\r\n\r\nconst {confirm} = Modal\r\nconst {Option} = Select\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 20,\r\n    },\r\n};\r\nexport default function ApplicationList() {\r\n\r\n    // localStorage\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    // hooks\r\n    const history = useHistory()\r\n    const [applicationList, setApplicationList] = useState([])\r\n    const arrangeInterviewFormRef = useRef(null)\r\n    const [arrangeInterviewModalVisible, setArrangeInterviewModalVisible] = useState(false)\r\n    // 当前安排面试的申请项\r\n    const [arrangingItem, setArrangingItem] = useState({})\r\n    // 当前选中的面试联系人\r\n    const [arrangingContacterId, setArrangingContacterId] = useState('')\r\n    const [interviewAddress, setInterviewAddress] = useState([])\r\n    const [memberList, setMemberList] = useState([])\r\n\r\n    // constans\r\n\r\n    // life cycle\r\n    useEffect(() => {\r\n        getInterviewAddress().then(res => {\r\n            const {data} = res.data\r\n            // console.log('面试地点data')\r\n            // console.log(data)\r\n            setInterviewAddress(data)\r\n        })\r\n        refresh()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('当前操作项:')\r\n        console.log(arrangingItem)\r\n        if (arrangingItem.associationId) {\r\n            getUserByAssociationId(arrangingItem.associationId).then(res => {\r\n                setMemberList(res.data.data)\r\n            })\r\n        }\r\n\r\n    }, [arrangingItem])\r\n\r\n    // 刷新申请列表\r\n    const refresh = () => {\r\n        getApplicationList(userInfo.manageAssociationKeys).then(res => {\r\n            const {data} = res.data\r\n            console.log('申请list')\r\n            console.log(data)\r\n            setApplicationList(data)\r\n        })\r\n    }\r\n\r\n    const handleApplicationUpdate = (applicationId, state) => {\r\n        updateApplicationState(qs.stringify({applicationId, state})).then(() => {\r\n            refresh()\r\n            message.success('操作成功！')\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '编号',\r\n            dataIndex: 'applicationId',\r\n            render(applicationId) {\r\n                return <b>{applicationId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '申请人',\r\n            dataIndex: 'name',\r\n            render(name, item) {\r\n                return <Tooltip title=\"点击查看详情\">\r\n                    <a href={`#/manage/review/joinAssociation/${item.applicationId}/1`}\r\n                    >{name}</a>\r\n                </Tooltip>;\r\n            }\r\n        },\r\n        {\r\n            title: '意向部门',\r\n            dataIndex: 'departmentName',\r\n            render(departmentName, item) {\r\n                return (item.associationName + ' - ' + departmentName)\r\n            }\r\n        },\r\n        {\r\n            title: '申请时间',\r\n            dataIndex: 'applicationTime',\r\n            render(applicationTime) {\r\n                return (applicationTime)\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case APPLICATION_STATE.UN_COMMIT.value:\r\n                        return <Badge status=\"warning\" text={APPLICATION_STATE.UN_COMMIT.name}/>\r\n                    case APPLICATION_STATE.APPLYING.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.APPLYING.name}/>\r\n                    case APPLICATION_STATE.INTERVIEW_INVITING.value:\r\n                        return <Badge status=\"success\" text={APPLICATION_STATE.INTERVIEW_INVITING.name}/>\r\n                    case APPLICATION_STATE.UN_INTERVIEW.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.UN_INTERVIEW.name}/>\r\n                    case APPLICATION_STATE.INTERVIEW_PASS.value:\r\n                        return <Badge status=\"success\" text={APPLICATION_STATE.INTERVIEW_PASS.name}/>\r\n                    case APPLICATION_STATE.APPLY_REFUSE.value:\r\n                        return <Badge status=\"error\" text={APPLICATION_STATE.APPLY_REFUSE.name}/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => {\r\n                return <Space>\r\n                    {(item.state === APPLICATION_STATE.APPLYING.value) &&\r\n                    <Button size=\"small\" icon={OPTION_ICONS.ARRANGE}\r\n                            onClick={() => {\r\n                                setArrangingItem({...item})\r\n                                setArrangeInterviewModalVisible(true)\r\n                            }}>面试</Button>\r\n                    }\r\n                    {(item.state === APPLICATION_STATE.UN_INTERVIEW.value) &&\r\n                    <Button size=\"small\" type='primary' icon={OPTION_ICONS.ARRANGE}\r\n                            onClick={() => {\r\n                                Modal.confirm({\r\n                                    title: `您确认要录用【${item.name}】为【${item.departmentName}】的一员吗？`,\r\n                                    onOk: () => {\r\n                                        handleApplicationUpdate(item.applicationId, APPLICATION_STATE.INTERVIEW_PASS.value)\r\n                                    }\r\n                                })\r\n                            }}>录用</Button>\r\n                    }\r\n                    {(item.state === APPLICATION_STATE.UN_INTERVIEW.value || item.state === APPLICATION_STATE.APPLYING.value) &&\r\n                    <Button size=\"small\" danger icon={OPTION_ICONS.REFUSE}\r\n                            onClick={() => {\r\n                                Modal.confirm({\r\n                                    title: `您确认要拒绝【${item.name}】的入团申请吗？`,\r\n                                    onOk: () => {\r\n                                        // TODO 回复拒绝申请的理由\r\n                                        handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLY_REFUSE.value)\r\n                                    }\r\n                                })\r\n                            }}>拒绝</Button>\r\n                    }\r\n                    {item.state === APPLICATION_STATE.INTERVIEW_INVITING.value &&\r\n                    <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                            onClick={() => {\r\n                                Modal.confirm({\r\n                                    title: '确认撤销面试邀请吗？',\r\n                                    onOk: () => {\r\n                                        handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLYING.value)\r\n                                    }\r\n                                })\r\n                            }}>撤销</Button>\r\n                    }\r\n                </Space>\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Button type='primary'\r\n                    onClick={() => {\r\n                        Modal.info({\r\n                            title: '面试安排日历',\r\n                            width: 1500,\r\n                            icon: ICON.calendar,\r\n                            content: <ApplicationCalendar/>\r\n                        })\r\n                    }}\r\n            >查看面试安排日历</Button>\r\n            <Table\r\n                dataSource={applicationList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 6\r\n                }}\r\n                rowKey={item => item.applicationId}\r\n            />\r\n\r\n\r\n            {/* === 面试安排模态框 === */}\r\n            {arrangeInterviewModalVisible\r\n            && <Modal title=\"面试安排\" height={350}\r\n                      visible={arrangeInterviewModalVisible}\r\n                      onCancel={() => {\r\n                          setArrangingItem({})\r\n                          setArrangeInterviewModalVisible(false)\r\n                      }}\r\n                      onOk={() => {\r\n                          arrangeInterviewFormRef.current.validateFields()\r\n                              .then(value => {\r\n                                  console.log('面试表单信息：')\r\n                                  const data = {\r\n                                      ...value,\r\n                                      applicationId: arrangingItem.applicationId,\r\n                                      departmentId: arrangingItem.departmentId,\r\n                                      contacterId: arrangingContacterId,\r\n                                      interviewAddress: value.interviewAddress.join('-'),\r\n                                  }\r\n                                  updateApplicationInterview(data).then(() => {\r\n                                      refresh()\r\n                                      setArrangeInterviewModalVisible(false)\r\n                                  })\r\n                              })\r\n                      }}>\r\n                <Form {...layout} name=\"arrangeInterviewModal\" ref={arrangeInterviewFormRef}>\r\n                    <Form.Item name='interviewDate' label=\"面试日期\"\r\n                               rules={[{required: true, message: '请选择面试日期！'}]}\r\n                    >\r\n                        <DatePicker/>\r\n                    </Form.Item>\r\n                    <Form.Item name='interviewTime' label=\"面试时间\"\r\n                               rules={[{required: true, message: '请选择面试时间！'}]}>\r\n                        <TimePicker minuteStep={15} secondStep={10}/>\r\n                    </Form.Item>\r\n                    <Form.Item name='interviewAddress' label=\"面试地点\"\r\n                               rules={[{required: true, message: '请选择面试地点'}]}\r\n                               initialValue={['集大本部', '美岭楼', '美岭201']}\r\n                    >\r\n                        {\r\n                            interviewAddress.length > 0\r\n                            && <Cascader options={interviewAddress}/>\r\n                        }\r\n                    </Form.Item>\r\n                    <Form.Item name='intentionDepartment' label=\"意向部门\"\r\n                               initialValue={arrangingItem.departmentName}>\r\n                        <Input disabled={true}/>\r\n                    </Form.Item>\r\n                    <Form.Item name='contacterName' label=\"联系人\"\r\n                               rules={[{required: true, message: '请选择联系人'}]}>\r\n                        <Select onChange={(value) => {\r\n                            console.log('联系人ID：')\r\n                            console.log(value)\r\n                            setArrangingContacterId(value)\r\n                        }}>\r\n                            {memberList.map(user => {\r\n                                return <Option value={user.userId}>{user.name}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item name='contacterPhone' label=\"联系方式\">\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item name='description' label=\"备注\">\r\n                        <Input.TextArea/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AccountManage\\Resume\\index.jsx",["439","440","441","442","443","444"],"import React, {useEffect, useState} from 'react'\r\nimport {\r\n    Anchor,\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    Cascader,\r\n    Col,\r\n    DatePicker,\r\n    Descriptions,\r\n    Form,\r\n    Image,\r\n    Input, message, Modal,\r\n    Row,\r\n    Select,\r\n    Switch,\r\n    Tooltip, Upload\r\n} from 'antd';\r\nimport {EditOutlined, PlusOutlined, SettingOutlined} from '@ant-design/icons';\r\nimport {getUserById} from \"../../../../../services/db\";\r\nimport {getClassTree} from \"../../../../../services/treeService\";\r\nimport {USER_IMAGE_URL} from \"../../../../../constants/image\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {updateResume} from \"../../../../../services/userService\";\r\nimport {IMAGE_TYPE} from \"../../../../../constants/type\";\r\nimport {deleteImage, getAssociationImageUrl} from \"../../../../../services/imageService\";\r\nimport {OPTION_ICONS} from \"../../../../../constants/icon\";\r\n\r\n// antd组件结构\r\nconst {TextArea} = Input;\r\nconst {Link} = Anchor;\r\nconst {Meta} = Card;\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nexport default function Resume() {\r\n\r\n    const userSession = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const [userInfo, setUserInfo] = useState()\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [classTreeData, setClassTreeData] = useState([])\r\n    const [collegeMajorClass, setCollegeMajorClass] = useState([])\r\n    const [userForm] = Form.useForm()\r\n\r\n    // 图片上传\r\n    const [previewVisible, setPreviewVisible] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState('')\r\n    const [previewTitle, setPreviewTitle] = useState('')\r\n    const [fileList, setFileList] = useState([])\r\n\r\n    const refreshResume = () => {\r\n        const {userId} = userSession\r\n        if (userId) {\r\n            getUserById(userId).then(res => {\r\n                const {data} = res.data\r\n                // console.log('用户信息：')\r\n                // console.log(data)\r\n                setUserInfo(data)\r\n            })\r\n            getAssociationImageUrl(IMAGE_TYPE.USER_ID_PHOTO.value, userId).then(res => {\r\n                const images = res.data.data\r\n                // console.log(\"images:\")\r\n                // console.log(images)\r\n                setFileList(images)\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshResume()\r\n        getClassTree().then(res => {\r\n            setClassTreeData(res.data.data)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const format2Array = (cascaderClass) => {\r\n        const fomattedArr = []\r\n        cascaderClass.split(\"/\").map(item => {\r\n            fomattedArr.push(item)\r\n        })\r\n        // console.log('fomattedArr')\r\n        // console.log(fomattedArr)\r\n        return fomattedArr\r\n    }\r\n\r\n    // 预览图片\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview)\r\n        setPreviewVisible(true)\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n    };\r\n\r\n    // 控制上传change\r\n    const handleChange = ({file, fileList}) => {\r\n        const changeAction = file.status\r\n        setFileList(fileList)\r\n        switch (changeAction) {\r\n            case 'done':\r\n                message.success(\"上传成功！\")\r\n                break\r\n            case 'removed':\r\n                // TODO 删除首页图片\r\n                deleteImage(file.uid).then(() => {\r\n                    message.success(\"删除成功！\")\r\n                })\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Row>\r\n            {/* ============== 简历展示区 ==================== */}\r\n            <Col span={18} style={{\r\n                borderRight: '1px solid #bfbfbf'\r\n            }}>\r\n                {userInfo &&\r\n                <Form form={userForm}>\r\n                    <Row>\r\n                        <Col span={18}>\r\n                            <Descriptions column={7} bordered={true} size={'small'}>\r\n                                <Descriptions.Item label=\"姓名\" span={3}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name='name' rules={[{required: true, message: '请输入姓名！'}]}>\r\n                                            <Input defaultValue={userInfo.name}/>\r\n                                        </Form.Item>\r\n                                        : userInfo.name}\r\n                                </Descriptions.Item>\r\n                                {/*学号不可修改*/}\r\n                                <Descriptions.Item label=\"学号\" span={4}>\r\n                                    {userInfo.userId}\r\n                                </Descriptions.Item>\r\n                                {/*树形选择器。学院、专业、班级*/}\r\n                                <Descriptions.Item label=\"专业班级\" span={7}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name='collegeMajorClass' rules={[{required: true}]}\r\n                                                     initialValue={format2Array(userInfo.collegeMajorClass)}>\r\n                                            <Cascader options={classTreeData} placeholder={\"请选择专业班级\"}\r\n                                                      style={{\r\n                                                          width: '100%',\r\n                                                      }}\r\n                                                      onChange={(value) => {\r\n                                                          // console.log('级联value')\r\n                                                          // console.log(value)\r\n                                                          setCollegeMajorClass(value)\r\n                                                      }}\r\n                                            />\r\n                                        </Form.Item>\r\n                                        : `${userInfo.collegeMajorClass}`\r\n                                    }\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"联系方式\" span={3}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name={'phone'}\r\n                                                     rules={[{required: true}]}>\r\n                                            <Input defaultValue={userInfo?.phone}/>\r\n                                        </Form.Item>\r\n                                        : userInfo?.phone\r\n                                    }\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"邮箱\" span={4}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name={'email'}\r\n                                                     rules={[{required: true}]}>\r\n                                            <Input defaultValue={userInfo?.email}/>\r\n                                        </Form.Item>\r\n                                        : userInfo.email\r\n                                    }\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"微信\" span={3}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name={'wechat'} rules={[{required: true}]}>\r\n                                            <Input defaultValue={userInfo?.wechat}/>\r\n                                        </Form.Item>\r\n                                        : userInfo.wechat}\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"QQ\" span={3}>\r\n                                    {isEdit\r\n                                        ? <Form.Item name={'qq'}>\r\n                                            <Input defaultValue={userInfo?.qq}/>\r\n                                        </Form.Item>\r\n                                        : userInfo.qq}\r\n                                </Descriptions.Item>\r\n                            </Descriptions>\r\n                        </Col>\r\n                        {/* == 证件照 == */}\r\n                        <Col span={6}>\r\n                            {(isEdit || !fileList[0] || !fileList[0].url)\r\n                                ? <Upload listType=\"picture-card\"\r\n                                          action={`/association/uploadImage/${IMAGE_TYPE.USER_ID_PHOTO.value}/${userInfo.userId}`}\r\n                                          name='image'\r\n                                          fileList={fileList}\r\n                                          onPreview={handlePreview}\r\n                                          onChange={handleChange}\r\n                                >\r\n                                    {/* === 只允许上传5张图片 === */}\r\n                                    {fileList.length < 1\r\n                                    && <div>\r\n                                        <PlusOutlined/>\r\n                                        <div style={{marginTop: 8}}>上传图片</div>\r\n                                    </div>}\r\n                                </Upload>\r\n                                : <Image width={145} height={153} src={fileList[0].url}/>}\r\n                        </Col>\r\n                    </Row>\r\n                    {/* ====== 描述信息 ======  */}\r\n                    <Descriptions bordered={true} column={24} size={'small'}>\r\n                        <Descriptions.Item label=\"生日\" span={8}>\r\n                            {isEdit\r\n                                ?\r\n                                <Form.Item name='birthday' initialValue={moment(`${userInfo.birthday}`, 'YYYY-MM-DD')}>\r\n                                    <DatePicker locale bordered={false} placeholder=\"请选择生日\"/>\r\n                                </Form.Item>\r\n                                : `${userInfo.birthday}`}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"民族\" span={8}>\r\n                            {isEdit\r\n                                ? <Form.Item name='nation'>\r\n                                    <Input defaultValue={userInfo.nation}/>\r\n                                </Form.Item>\r\n                                : userInfo.nation}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"性别\" span={8}>\r\n                            {isEdit\r\n                                ? <Form.Item name={'gender'}>\r\n                                    <Input defaultValue={userInfo.gender}/>\r\n                                </Form.Item>\r\n                                : userInfo.gender}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"兴趣爱好\" span={24}>\r\n                            <Form.Item name={'like'} initialValue={userInfo.selfLike}>\r\n                                <TextArea rows={6} disabled={!isEdit} maxLength={150}/>\r\n                            </Form.Item>\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"自我评价\" span={24}>\r\n                            <Form.Item name={'selfProfile'} initialValue={userInfo.selfProfile}>\r\n                                <TextArea rows={6} disabled={!isEdit} maxLength={150}/>\r\n                            </Form.Item>\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </Form>\r\n                }\r\n            </Col>\r\n\r\n            {/* ============================ 右侧区域 ============================*/}\r\n            <Col span={5} style={{\r\n                marginLeft: 10,\r\n            }}>\r\n                <Row>\r\n                    <Card style={{width: 298}}\r\n                          actions={[\r\n                              <Tooltip placement=\"bottom\" title='点击上传头像'>\r\n                                  {OPTION_ICONS.AVATAR}\r\n                              </Tooltip>,\r\n                              <Tooltip placement=\"bottom\" title='点击修改个签'>\r\n                                  <EditOutlined key=\"edit\"/>\r\n                              </Tooltip>,\r\n                          ]}\r\n                    >\r\n                        <Meta avatar={<Avatar src={USER_IMAGE_URL.DEFAULT.url}/>}\r\n                              title={userSession.name}\r\n                              description={userSession.personalSignature || '该用户很懒，没有个性签名~'}\r\n                        />\r\n                    </Card>\r\n                </Row>\r\n                {/* == TODO 锚点效果 === */}\r\n                <Row style={{\r\n                    marginTop: 20,\r\n                }}>\r\n                    <Anchor>\r\n                        <b>简历目录</b>\r\n                        <Link href=\"#components-anchor-demo-basic\" title=\"个人信息\"/>\r\n                        <Link href=\"#components-anchor-demo-static\" title=\"自我评价\">\r\n                            {/*<Link href=\"#Anchor-Props\" title=\"沟通能力\"/>*/}\r\n                            {/*<Link href=\"#Link-Props\" title=\"协作能力\"/>*/}\r\n                            {/*<Link href=\"#Link-Props\" title=\"表达能力\"/>*/}\r\n                            {/*<Link href=\"#Link-Props\" title=\"抗压能力\"/>*/}\r\n                        </Link>\r\n                        <Link href=\"#components-anchor-demo-static\" title=\"个性签名\"/>\r\n                    </Anchor>\r\n                </Row>\r\n                {/* ======= 简历编辑 ======= */}\r\n                <Row align={24} gutter={[0, 15]} style={{marginTop: 30}}>\r\n                    <b>简历编辑</b>\r\n                    {userInfo\r\n                    && <Col span={24}>\r\n                        <Switch defaultChecked={userInfo.canView === 0}\r\n                                unCheckedChildren={'对他人可见'}\r\n                                checkedChildren={'对他人隐藏'}\r\n                                onChange={(value) => {\r\n                                    updateResume({canView: value ? 0 : 1, userId: userInfo.userId}).then(() => {\r\n                                        refreshResume()\r\n                                        message.success(\"操作成功！\")\r\n                                    })\r\n                                }}\r\n                        />\r\n                    </Col>\r\n                    }\r\n                    <Col span={24}>\r\n                        <Switch checked={isEdit}\r\n                                unCheckedChildren={'浏览简历'}\r\n                                checkedChildren={'编辑简历'}\r\n                                onChange={() => {\r\n                                    setIsEdit(!isEdit)\r\n                                }}\r\n                        />\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        {isEdit\r\n                            ? <Button size='small' type='primary'\r\n                                      onClick={() => {\r\n                                          setIsEdit(false)\r\n                                          userForm.validateFields().then(value => {\r\n                                              const formattedData = {\r\n                                                  ...value,\r\n                                                  userId: userInfo.userId,\r\n                                                  className: collegeMajorClass.join(\"/\")\r\n                                              }\r\n                                              // console.log('formattedData：')\r\n                                              // console.log(formattedData)\r\n                                              updateResume(formattedData).then(() => {\r\n                                                  refreshResume()\r\n                                                  message.success(\"更新成功！\")\r\n                                              })\r\n                                          })\r\n                                      }}>\r\n                                确认修改\r\n                            </Button>\r\n                            : <Button size='small'/>}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n        {/* ====== 图片预览 Modal ====== */}\r\n        <Modal title={previewTitle} visible={previewVisible}\r\n               footer={null}\r\n               onCancel={() => {\r\n                   setPreviewVisible(false)\r\n               }}\r\n        >\r\n            <img alt=\"example\" style={{width: '100%'}} src={previewImage}/>\r\n        </Modal>\r\n    </>\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\PickTag\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\ApplicationManage\\index.js",["445","446"],"import React, {useEffect, useState} from 'react'\r\nimport {Badge, Button, message, Modal, Space, Table} from 'antd'\r\nimport {RollbackOutlined} from '@ant-design/icons';\r\nimport {getApplicationByUserId, updateApplicationState} from \"../../../../services/applicationService\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {APPLICATION_STATE} from '../../../../constants/state'\r\nimport qs from \"querystring\";\r\nimport {OPTION_ICONS} from \"../../../../constants/icon\";\r\nimport ViewInterview from \"../../../components/ViewInterview\";\r\n\r\nexport default function ApplicationManage() {\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    const history = useHistory()\r\n    const [applicationList, setApplicationList] = useState([])\r\n\r\n    const refreshApplication = () => {\r\n        getApplicationByUserId(userInfo.userId).then(res => {\r\n            const {data} = res.data\r\n            setApplicationList(data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshApplication()\r\n    }, [])\r\n\r\n    const handleApplicationUpdate = (applicationId, state) => {\r\n        updateApplicationState(qs.stringify({applicationId, state}))\r\n            .then(() => {\r\n                refreshApplication()\r\n                message.success('操作成功！')\r\n            })\r\n    }\r\n\r\n    const renderOptions = (item) => {\r\n        return <Space>\r\n            <Button size=\"small\" icon={OPTION_ICONS.VIEW}\r\n                    onClick={() => {\r\n                        history.push(`/manage/review/joinAssociation/${item.applicationId}/0`)\r\n                    }}\r\n            >\r\n                查看\r\n            </Button>\r\n            {item.state === APPLICATION_STATE.INTERVIEW_PASS.value &&\r\n            <Button size=\"small\" type='primary' icon={OPTION_ICONS.ACCEPT}\r\n                    onClick={() =>\r\n                        Modal.confirm({\r\n                            title: `您确认加入【${item.associationName}-${item.departmentName}】吗？`,\r\n                            onOk: () => {\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.CONFIRM.value)\r\n                            }\r\n                        })\r\n                    }>确认加入</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.APPLYING.value &&\r\n            <Button size=\"small\" danger icon={<RollbackOutlined/>}\r\n                    onClick={() => {\r\n                        Modal.confirm({\r\n                            title: '您确认要撤销申请吗？',\r\n                            onOk: () => {\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.UN_COMMIT.value)\r\n                            }\r\n                        })\r\n                    }}>撤销</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.UN_COMMIT.value &&\r\n            <Button size=\"small\" icon={OPTION_ICONS.COMMIT}\r\n                    onClick={() => handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLYING.value)}>提交</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.INTERVIEW_INVITING.value &&\r\n            <Button size=\"small\" type='primary' icon={OPTION_ICONS.ACCEPT}\r\n                    onClick={() => {\r\n                        Modal.confirm({\r\n                            title: '接受面试',\r\n                            width: 698,\r\n                            content: <ViewInterview application={item}/>,\r\n                            onOk: () => {\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.UN_INTERVIEW.value)\r\n                            },\r\n                            okText: '确认接受',\r\n                            cancelText: '取消操作',\r\n                        })\r\n                    }}>接受</Button>\r\n            }\r\n            {item.state === APPLICATION_STATE.INTERVIEW_INVITING.value &&\r\n            <Button size=\"small\" danger icon={OPTION_ICONS.REFUSE}\r\n                    onClick={() =>\r\n                        Modal.confirm({\r\n                            title: '拒绝面试邀请无法撤销，确认拒绝吗？',\r\n                            onOk: () => {\r\n                                handleApplicationUpdate(item.applicationId, APPLICATION_STATE.REFUSE_INVITING.value)\r\n                            }\r\n                        })\r\n                    }>拒绝</Button>\r\n            }\r\n            {!item.state &&\r\n            <Button size=\"small\" danger icon={OPTION_ICONS.DELETE}\r\n                    onClick={() => handleApplicationUpdate(item.applicationId, APPLICATION_STATE.APPLYING.value)}>删除</Button>\r\n            }\r\n        </Space>\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '编号',\r\n            dataIndex: 'applicationId',\r\n            render(applicationId) {\r\n                return <b>{applicationId}</b>;\r\n            }\r\n        },\r\n        {\r\n            title: '社团及意向部门',\r\n            dataIndex: 'departmentName',\r\n            render(departmentName, item) {\r\n                return (\r\n                    <>\r\n                        <a onClick={() => {\r\n                            history.push(`/user/associationDetail/${item.associationId}`)\r\n                        }}>{item.associationName}</a> —— {departmentName || '未选择部门'}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '申请时间',\r\n            dataIndex: 'applicationTime',\r\n            render(applicationTime) {\r\n                return (applicationTime)\r\n            }\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'state',\r\n            render(state) {\r\n                switch (state) {\r\n                    case APPLICATION_STATE.UN_COMMIT.value:\r\n                        return <Badge status=\"warning\" text={APPLICATION_STATE.UN_COMMIT.name}/>\r\n                    case APPLICATION_STATE.APPLYING.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.APPLYING.name}/>\r\n                    case APPLICATION_STATE.INTERVIEW_INVITING.value:\r\n                        return <Badge status=\"success\" text={APPLICATION_STATE.INTERVIEW_INVITING.name}/>\r\n                    case APPLICATION_STATE.REFUSE_INVITING.value:\r\n                        return <Badge status=\"warning\" text={APPLICATION_STATE.REFUSE_INVITING.name}/>\r\n                    case APPLICATION_STATE.UN_INTERVIEW.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.UN_INTERVIEW.name}/>\r\n                    case APPLICATION_STATE.INTERVIEW_PASS.value:\r\n                        return <Badge status=\"processing\" text={APPLICATION_STATE.INTERVIEW_PASS.name}/>\r\n                    case APPLICATION_STATE.CONFIRM.value:\r\n                        return <Badge status=\"success\" text={APPLICATION_STATE.CONFIRM.name}/>\r\n                    case APPLICATION_STATE.APPLY_REFUSE.value:\r\n                        return <Badge status=\"error\" text={APPLICATION_STATE.APPLY_REFUSE.name}/>\r\n                    default:\r\n                        return <Badge status=\"error\" text=\"状态异常\"/>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => renderOptions(item)\r\n        },\r\n    ]\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={applicationList}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 6\r\n                }}\r\n                rowKey={item => item.shareId}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\icon.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\Calendar\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\index.js",["447","448","449","450"],"import React, {useEffect, useState} from 'react'\r\nimport {Button, Card, Col, Descriptions, message, Modal, PageHeader, Row, Tabs, Upload} from 'antd';\r\nimport Icon, {EditOutlined, PlusCircleOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getAssociationDetail} from \"../../../../../services/db\";\r\nimport {ICON, OPTION_ICONS} from \"../../../../../constants/icon\";\r\nimport {ReactComponent as DeleteIcon} from \"../../../../../icons/delete.svg\";\r\nimport {deleteDepartment} from \"../../../../../services/departmentService\";\r\nimport UserList from \"./UserList\";\r\nimport {IMAGE_TYPE} from \"../../../../../constants/type\";\r\nimport {deleteImage, getAssociationImageUrl} from \"../../../../../services/imageService\";\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nexport default function AssociationDetail(props) {\r\n\r\n    const history = useHistory()\r\n    const [association, setAssociation] = useState()\r\n\r\n    // 预览图片 Modal、图片、标题\r\n    const [previewVisible, setPreviewVisible] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState('')\r\n    const [previewTitle, setPreviewTitle] = useState('')\r\n    const [fileList, setFileList] = useState([])\r\n\r\n    const refreshAssociationData = () => {\r\n        getAssociationDetail(props.match.params.associationId).then(res => {\r\n            // console.log(\"社团详情：\")\r\n            // console.log(res.data.data)\r\n            setAssociation(res.data.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshAssociationData()\r\n        if (association) {\r\n            const type = IMAGE_TYPE.ASSOCIATION_HOMEPAGE.value\r\n            const ownerId = association.associationId + ''\r\n            getAssociationImageUrl(type, ownerId).then(res => {\r\n                const images = res.data.data\r\n                // console.log('images')\r\n                // console.log(images)\r\n                setFileList(images)\r\n            })\r\n        }\r\n    }, [association?.associationId])\r\n\r\n\r\n    // 预览图片\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview)\r\n        setPreviewVisible(true)\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n    };\r\n\r\n    // 控制上传change\r\n    const handleChange = ({file, fileList}) => {\r\n        const changeAction = file.status\r\n        setFileList(fileList)\r\n        switch (changeAction) {\r\n            case 'done':\r\n                message.success(\"上传成功！\")\r\n                break\r\n            case 'removed':\r\n                // TODO 删除首页图片\r\n                deleteImage(file.uid).then(() => {\r\n                    message.success(\"删除成功！\")\r\n                })\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* === 页头 === */}\r\n            {association &&\r\n            <Row>\r\n                <PageHeader ghost={false}\r\n                            title=\"社团详情\"\r\n                            subTitle=\"对社团基本信息进行管理\"\r\n                            onBack={() => history.goBack()}\r\n                            extra={[\r\n                                <Button key=\"3\">Operation</Button>,\r\n                                <Button key=\"2\">Operation</Button>,\r\n                                <Button key=\"1\" type=\"primary\">\r\n                                    Primary\r\n                                </Button>,\r\n                            ]}\r\n                >\r\n                    <Descriptions size=\"small\" column={3}>\r\n                        <Descriptions.Item label=\"社团名称\">{association.associationName}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"隶属单位\">{association.adminUnit}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"创建时间\">{association.createTime}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"社团个签\">{association.info}</Descriptions.Item>\r\n                    </Descriptions>\r\n                </PageHeader>\r\n            </Row>\r\n            }\r\n            <Tabs defaultActiveKey=\"structure\">\r\n                {/* ================= 社团经历分享  ====================-  */}\r\n                <TabPane tab=\"社团组织\" key=\"structure\">\r\n                    <Row gutter={[24, 24]} style={{marginTop: 10}}>\r\n                        {/* =============== 左侧部门列表 =============== */}\r\n                        <Col span={6}>\r\n                            <Row gutter={[0, 24]}>\r\n                                <Col span={24}>\r\n                                    <Card bordered hoverable style={{height: 195}}\r\n                                          onClick={() => {\r\n\r\n                                          }}\r\n                                    >\r\n                                        <div style={{\r\n                                            height: '50%',\r\n                                            marginTop: '20%',\r\n                                            marginLeft: '25%',\r\n                                            fontSize: 20,\r\n                                            color: 'rgb(176,177,185)'\r\n                                        }}>\r\n                                            <PlusCircleOutlined/>\r\n                                            <span style={{marginLeft: 10}}>新增部门</span>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Col>\r\n                                {association?.departments.length > 0 &&\r\n                                association?.departments.map(dpt => {\r\n                                    return <Col span={24}>\r\n                                        {/* ======== TODO 卡片与右侧成员列表联动 ========*/}\r\n                                        <Card title={\r\n                                            <>\r\n                                                {ICON.department}\r\n                                                <span style={{\r\n                                                    marginLeft: 10,\r\n                                                    marginBottom: 5,\r\n                                                    fontSize: 20,\r\n                                                    fontWeight: 1000,\r\n                                                }}\r\n                                                >{dpt.departmentName}</span>\r\n                                            </>\r\n                                        } bordered hoverable\r\n                                              style={{height: 195,}}\r\n                                              actions={[\r\n                                                  <EditOutlined key=\"edit\"/>,\r\n                                                  <Icon component={DeleteIcon} style={{fontSize: 17}}\r\n                                                        onClick={() => {\r\n                                                            Modal.confirm({\r\n                                                                title: `您确认要删除【${dpt.departmentName}】吗？`,\r\n                                                                onOk: () => {\r\n                                                                    deleteDepartment(dpt.departmentId).then(() => {\r\n                                                                        refreshAssociationData()\r\n                                                                        message.success('删除成功！')\r\n                                                                    })\r\n                                                                }\r\n                                                            })\r\n                                                        }}\r\n                                                  />,\r\n                                              ]}>\r\n                                            <div style={{height: 40}}>\r\n                                                主要职责：{dpt.job}\r\n                                            </div>\r\n                                        </Card>\r\n                                    </Col>\r\n                                })\r\n                                }\r\n                            </Row>\r\n                        </Col>\r\n                        {/* =============== 右侧部门列表 =============== */}\r\n                        <Col span={18}>\r\n                            {association\r\n                            && <UserList\r\n                                associationId={association.associationId}\r\n                                departmentId={1}\r\n                            ></UserList>}\r\n                        </Col>\r\n                    </Row>\r\n                </TabPane>\r\n                <TabPane tab=\"使用橘集\" key=\"useUacs\">\r\n                    {/* 上传图片 */}\r\n                    <div style={{\r\n                        fontSize: 17,\r\n                        fontWeight: 900,\r\n                    }}>\r\n                        系统首页社团轮播图\r\n                    </div>\r\n                    <Upload listType=\"picture-card\"\r\n                            action={`/association/uploadImage/${IMAGE_TYPE.ASSOCIATION_HOMEPAGE.value}/${association?.associationId + ''}`}\r\n                            name='image'\r\n                            fileList={fileList}\r\n                            onPreview={handlePreview}\r\n                            onChange={handleChange}\r\n                    >\r\n                        {/* === 只允许上传5张图片 === */}\r\n                        {fileList.length < 5\r\n                        && <div>\r\n                            <PlusOutlined/>\r\n                            <div style={{marginTop: 8}}>上传图片</div>\r\n                        </div>}\r\n                    </Upload>\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            {/* ====== 图片预览 Modal ====== */}\r\n            <Modal title={previewTitle} visible={previewVisible}\r\n                   footer={null}\r\n                   onCancel={() => {\r\n                       setPreviewVisible(false)\r\n                   }}\r\n            >\r\n                <img alt=\"example\" style={{width: '100%'}} src={previewImage}/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\treeService.js",["451"],"import axios from \"axios\";\r\nimport {TREE_NODE_TYPE} from \"../constants/type\";\r\n\r\nexport function getInterviewAddress() {\r\n    return axios.get('/association/getInterviewAddress')\r\n}\r\n\r\n\r\nexport function getClassTree() {\r\n    return axios.get('/association/getClassTree')\r\n}\r\n\r\nexport function addTreeNode(data) {\r\n    return axios.post('/association/addTreeNode', data)\r\n}\r\n\r\nexport function deleteTreeNode(treeId) {\r\n    return axios.delete(`/association/deleteTreeNode/${treeId}`)\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\InterviewAddress\\index.js",["452","453","454"],"import {Table} from 'antd';\r\nimport {useEffect, useState} from \"react\";\r\nimport {getInterviewAddress} from \"../../../../../services/treeService\";\r\n\r\n\r\nexport default function InterviewAddress() {\r\n\r\n    const [interviewAddressData, setInterviewAddressData] = useState([])\r\n\r\n    useEffect(() => {\r\n        getInterviewAddress().then(res => {\r\n            const {data} = res.data\r\n            const formattedData = formatDataSource(data)\r\n            setInterviewAddressData(formattedData)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const formatDataSource = (respData) => {\r\n        respData.map(item1 => {\r\n            if (item1.children.length === 0) {\r\n                item1.children = ''\r\n            } else {\r\n                item1.children.map(item2 => {\r\n                    if (item2.children.length === 0) {\r\n                        item2.children = ''\r\n                    } else {\r\n                        item2.children.map(item3 => {\r\n                            if (item3.children.length === 0) {\r\n                                item3.children = ''\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return respData\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '序号',\r\n            dataIndex: 'treeId',\r\n        },\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'label',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Table columns={columns} dataSource={interviewAddressData}\r\n                   pagination={{\r\n                       pageSize: 7\r\n                   }}\r\n                   rowKey={item => item.treeId}\r\n                   rowSelection={{\r\n                       onChange: (selectedRowKeys, selectedRows) => {\r\n\r\n                       },\r\n                       onSelectAll: (selected, selectedRows, changeRows) => {\r\n\r\n                       },\r\n                   }}\r\n\r\n            />\r\n        </>\r\n    )\r\n}","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\Other\\Contacter\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\departmentService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\AssociationDetail\\UserList\\index.js",["455"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\components\\ViewInterview\\index.js",["456"],"import {Cascader, DatePicker, Form, Input, TimePicker} from 'antd';\r\nimport {forwardRef, useEffect} from \"react\";\r\nimport moment from 'moment';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 20,\r\n    },\r\n};\r\n\r\nconst ViewInterview = forwardRef((props) => {\r\n\r\n    const [interviewDate, interviewTime] = props.application.interviewTime.split(' ')\r\n\r\n    return (\r\n        <>\r\n            <div style={{height: 420,}}>\r\n                <Form {...layout} name=\"arrangeInterviewModal\">\r\n                    <Form.Item name='interviewDate' label=\"面试日期\" initialValue={moment(interviewDate, 'YYYY-MM-DD')}>\r\n                        <DatePicker disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='interviewTime' label=\"面试时间\" initialValue={moment(interviewTime, 'HH:mm:ss')}>\r\n                        <TimePicker disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='interviewAddress' label=\"面试地点\"\r\n                               initialValue={props.application.interviewAddress?.split('-')}>\r\n                        <Cascader disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='intentionDepartment' label=\"意向部门\" initialValue={props.application?.departmentName}>\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='contacterName' label=\"联系人\" initialValue={props.application?.contacterName}>\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='contacterPhone' label=\"联系方式\" initialValue={props.application?.contacterPhone}>\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item name='description' label=\"备注\" initialValue={props.application?.description}>\r\n                        <Input.TextArea disabled/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ViewInterview","D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\index.js",["457","458","459","460","461"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\imageService.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\constants\\image.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\index.jsx",["462"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\BatchImport\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\UserManage\\AddUser\\index.js",["463"],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\BatchAddAssociation\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\pages\\manage\\ManageBox\\AssociationManage\\BatchAddAssociation\\BatchImport\\index.js",[],"D:\\workspace\\mySrc\\workspace_IDEA\\uacs\\uacs_ui\\src\\services\\dataViewService.js",[],{"ruleId":"464","replacedBy":"465"},{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","severity":1,"message":"469","line":1,"column":16,"nodeType":"470","messageId":"471","endLine":1,"endColumn":25},{"ruleId":"468","severity":1,"message":"472","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":24},{"ruleId":"468","severity":1,"message":"473","line":9,"column":9,"nodeType":"470","messageId":"471","endLine":9,"endColumn":20},{"ruleId":"468","severity":1,"message":"474","line":17,"column":11,"nodeType":"470","messageId":"471","endLine":17,"endColumn":19},{"ruleId":"475","severity":1,"message":"476","line":36,"column":1,"nodeType":"477","messageId":"478","endLine":37,"endColumn":2},{"ruleId":"479","severity":1,"message":"480","line":71,"column":45,"nodeType":"481","messageId":"482","endLine":71,"endColumn":46,"suggestions":"483"},{"ruleId":"468","severity":1,"message":"484","line":27,"column":24,"nodeType":"470","messageId":"471","endLine":27,"endColumn":37},{"ruleId":"485","severity":1,"message":"486","line":31,"column":5,"nodeType":"470","endLine":31,"endColumn":14,"suggestions":"487"},{"ruleId":"468","severity":1,"message":"469","line":1,"column":16,"nodeType":"470","messageId":"471","endLine":1,"endColumn":25},{"ruleId":"468","severity":1,"message":"488","line":2,"column":20,"nodeType":"470","messageId":"471","endLine":2,"endColumn":23},{"ruleId":"468","severity":1,"message":"489","line":9,"column":9,"nodeType":"470","messageId":"471","endLine":9,"endColumn":16},{"ruleId":"468","severity":1,"message":"490","line":9,"column":18,"nodeType":"470","messageId":"471","endLine":9,"endColumn":24},{"ruleId":"491","severity":1,"message":"492","line":26,"column":33,"nodeType":"493","endLine":26,"endColumn":45},{"ruleId":"464","replacedBy":"494"},{"ruleId":"466","replacedBy":"495"},{"ruleId":"464","replacedBy":"496"},{"ruleId":"466","replacedBy":"497"},{"ruleId":"468","severity":1,"message":"498","line":2,"column":5,"nodeType":"470","messageId":"471","endLine":2,"endColumn":18},{"ruleId":"468","severity":1,"message":"499","line":3,"column":5,"nodeType":"470","messageId":"471","endLine":3,"endColumn":17},{"ruleId":"468","severity":1,"message":"500","line":4,"column":5,"nodeType":"470","messageId":"471","endLine":4,"endColumn":20},{"ruleId":"468","severity":1,"message":"501","line":5,"column":5,"nodeType":"470","messageId":"471","endLine":5,"endColumn":17},{"ruleId":"468","severity":1,"message":"502","line":6,"column":5,"nodeType":"470","messageId":"471","endLine":6,"endColumn":18},{"ruleId":"468","severity":1,"message":"503","line":7,"column":5,"nodeType":"470","messageId":"471","endLine":7,"endColumn":17},{"ruleId":"468","severity":1,"message":"504","line":8,"column":5,"nodeType":"470","messageId":"471","endLine":8,"endColumn":25},{"ruleId":"468","severity":1,"message":"505","line":10,"column":27,"nodeType":"470","messageId":"471","endLine":10,"endColumn":35},{"ruleId":"468","severity":1,"message":"506","line":11,"column":27,"nodeType":"470","messageId":"471","endLine":11,"endColumn":37},{"ruleId":"468","severity":1,"message":"507","line":12,"column":27,"nodeType":"470","messageId":"471","endLine":12,"endColumn":44},{"ruleId":"468","severity":1,"message":"508","line":13,"column":27,"nodeType":"470","messageId":"471","endLine":13,"endColumn":42},{"ruleId":"468","severity":1,"message":"509","line":14,"column":27,"nodeType":"470","messageId":"471","endLine":14,"endColumn":42},{"ruleId":"468","severity":1,"message":"510","line":15,"column":27,"nodeType":"470","messageId":"471","endLine":15,"endColumn":41},{"ruleId":"468","severity":1,"message":"511","line":16,"column":8,"nodeType":"470","messageId":"471","endLine":16,"endColumn":13},{"ruleId":"512","severity":1,"message":"513","line":172,"column":37,"nodeType":"514","messageId":"515","endLine":172,"endColumn":39},{"ruleId":"512","severity":1,"message":"513","line":202,"column":36,"nodeType":"514","messageId":"515","endLine":202,"endColumn":38},{"ruleId":"516","severity":1,"message":"517","line":118,"column":13,"nodeType":"518","endLine":124,"endColumn":14},{"ruleId":"519","severity":1,"message":"520","line":119,"column":22,"nodeType":"481","messageId":"521","endLine":119,"endColumn":36},{"ruleId":"516","severity":1,"message":"522","line":128,"column":15,"nodeType":"518","endLine":128,"endColumn":18},{"ruleId":"468","severity":1,"message":"523","line":93,"column":21,"nodeType":"470","messageId":"471","endLine":93,"endColumn":31},{"ruleId":"516","severity":1,"message":"522","line":124,"column":25,"nodeType":"518","endLine":124,"endColumn":28},{"ruleId":"468","severity":1,"message":"524","line":3,"column":28,"nodeType":"470","messageId":"471","endLine":3,"endColumn":49},{"ruleId":"485","severity":1,"message":"525","line":20,"column":8,"nodeType":"526","endLine":20,"endColumn":10,"suggestions":"527"},{"ruleId":"528","severity":1,"message":"529","line":17,"column":5,"nodeType":"530","messageId":"531","endLine":17,"endColumn":20},{"ruleId":"528","severity":1,"message":"529","line":16,"column":5,"nodeType":"530","messageId":"531","endLine":16,"endColumn":20},{"ruleId":"485","severity":1,"message":"532","line":32,"column":8,"nodeType":"526","endLine":32,"endColumn":18,"suggestions":"533"},{"ruleId":"516","severity":1,"message":"522","line":127,"column":21,"nodeType":"518","endLine":127,"endColumn":88},{"ruleId":"468","severity":1,"message":"534","line":6,"column":7,"nodeType":"470","messageId":"471","endLine":6,"endColumn":19},{"ruleId":"535","severity":1,"message":"536","line":30,"column":13,"nodeType":"518","endLine":39,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":47,"column":21,"nodeType":"518","endLine":53,"endColumn":23},{"ruleId":"535","severity":1,"message":"536","line":54,"column":21,"nodeType":"518","endLine":60,"endColumn":23},{"ruleId":"535","severity":1,"message":"536","line":61,"column":21,"nodeType":"518","endLine":67,"endColumn":23},{"ruleId":"535","severity":1,"message":"536","line":68,"column":21,"nodeType":"518","endLine":74,"endColumn":23},{"ruleId":"485","severity":1,"message":"537","line":45,"column":8,"nodeType":"526","endLine":45,"endColumn":10,"suggestions":"538"},{"ruleId":"512","severity":1,"message":"513","line":16,"column":36,"nodeType":"514","messageId":"515","endLine":16,"endColumn":38},{"ruleId":"539","severity":1,"message":"540","line":17,"column":31,"nodeType":"541","messageId":"542","endLine":17,"endColumn":33},{"ruleId":"468","severity":1,"message":"469","line":2,"column":16,"nodeType":"470","messageId":"471","endLine":2,"endColumn":25},{"ruleId":"468","severity":1,"message":"472","line":10,"column":17,"nodeType":"470","messageId":"471","endLine":10,"endColumn":24},{"ruleId":"468","severity":1,"message":"543","line":11,"column":9,"nodeType":"470","messageId":"471","endLine":11,"endColumn":19},{"ruleId":"468","severity":1,"message":"544","line":9,"column":9,"nodeType":"470","messageId":"471","endLine":9,"endColumn":24},{"ruleId":"468","severity":1,"message":"545","line":10,"column":8,"nodeType":"470","messageId":"471","endLine":10,"endColumn":13},{"ruleId":"468","severity":1,"message":"546","line":13,"column":8,"nodeType":"470","messageId":"471","endLine":13,"endColumn":15},{"ruleId":"485","severity":1,"message":"547","line":28,"column":8,"nodeType":"526","endLine":28,"endColumn":10,"suggestions":"548"},{"ruleId":"468","severity":1,"message":"549","line":2,"column":31,"nodeType":"470","messageId":"471","endLine":2,"endColumn":38},{"ruleId":"468","severity":1,"message":"550","line":7,"column":8,"nodeType":"470","messageId":"471","endLine":7,"endColumn":18},{"ruleId":"468","severity":1,"message":"545","line":9,"column":8,"nodeType":"470","messageId":"471","endLine":9,"endColumn":13},{"ruleId":"512","severity":1,"message":"551","line":33,"column":30,"nodeType":"514","messageId":"552","endLine":33,"endColumn":32},{"ruleId":"512","severity":1,"message":"513","line":36,"column":17,"nodeType":"530","messageId":"553","endLine":36,"endColumn":23},{"ruleId":"468","severity":1,"message":"554","line":107,"column":11,"nodeType":"470","messageId":"471","endLine":107,"endColumn":24},{"ruleId":"485","severity":1,"message":"525","line":49,"column":8,"nodeType":"526","endLine":49,"endColumn":10,"suggestions":"555"},{"ruleId":"512","severity":1,"message":"513","line":94,"column":54,"nodeType":"514","messageId":"515","endLine":94,"endColumn":56},{"ruleId":"468","severity":1,"message":"545","line":6,"column":8,"nodeType":"470","messageId":"471","endLine":6,"endColumn":13},{"ruleId":"468","severity":1,"message":"556","line":11,"column":12,"nodeType":"470","messageId":"471","endLine":11,"endColumn":29},{"ruleId":"468","severity":1,"message":"557","line":11,"column":31,"nodeType":"470","messageId":"471","endLine":11,"endColumn":51},{"ruleId":"485","severity":1,"message":"558","line":26,"column":8,"nodeType":"526","endLine":26,"endColumn":10,"suggestions":"559"},{"ruleId":"512","severity":1,"message":"513","line":30,"column":28,"nodeType":"514","messageId":"515","endLine":30,"endColumn":30},{"ruleId":"512","severity":1,"message":"513","line":34,"column":42,"nodeType":"514","messageId":"515","endLine":34,"endColumn":44},{"ruleId":"512","severity":1,"message":"513","line":38,"column":50,"nodeType":"514","messageId":"515","endLine":38,"endColumn":52},{"ruleId":"516","severity":1,"message":"522","line":80,"column":24,"nodeType":"518","endLine":80,"endColumn":27},{"ruleId":"468","severity":1,"message":"560","line":18,"column":8,"nodeType":"470","messageId":"471","endLine":18,"endColumn":10},{"ruleId":"468","severity":1,"message":"561","line":54,"column":12,"nodeType":"470","messageId":"471","endLine":54,"endColumn":26},{"ruleId":"468","severity":1,"message":"562","line":54,"column":28,"nodeType":"470","messageId":"471","endLine":54,"endColumn":45},{"ruleId":"485","severity":1,"message":"525","line":74,"column":8,"nodeType":"526","endLine":74,"endColumn":10,"suggestions":"563"},{"ruleId":"512","severity":1,"message":"513","line":137,"column":51,"nodeType":"514","messageId":"515","endLine":137,"endColumn":53},{"ruleId":"512","severity":1,"message":"513","line":165,"column":39,"nodeType":"514","messageId":"515","endLine":165,"endColumn":41},{"ruleId":"512","severity":1,"message":"513","line":192,"column":38,"nodeType":"514","messageId":"515","endLine":192,"endColumn":40},{"ruleId":"512","severity":1,"message":"513","line":208,"column":50,"nodeType":"514","messageId":"515","endLine":208,"endColumn":52},{"ruleId":"485","severity":1,"message":"564","line":30,"column":8,"nodeType":"526","endLine":30,"endColumn":10,"suggestions":"565"},{"ruleId":"468","severity":1,"message":"545","line":4,"column":8,"nodeType":"470","messageId":"471","endLine":4,"endColumn":13},{"ruleId":"485","severity":1,"message":"566","line":36,"column":8,"nodeType":"526","endLine":36,"endColumn":10,"suggestions":"567"},{"ruleId":"468","severity":1,"message":"550","line":10,"column":8,"nodeType":"470","messageId":"471","endLine":10,"endColumn":18},{"ruleId":"468","severity":1,"message":"568","line":19,"column":12,"nodeType":"470","messageId":"471","endLine":19,"endColumn":27},{"ruleId":"485","severity":1,"message":"569","line":21,"column":5,"nodeType":"470","endLine":21,"endColumn":14,"suggestions":"570"},{"ruleId":"512","severity":1,"message":"551","line":32,"column":30,"nodeType":"514","messageId":"552","endLine":32,"endColumn":32},{"ruleId":"512","severity":1,"message":"513","line":35,"column":17,"nodeType":"530","messageId":"553","endLine":35,"endColumn":23},{"ruleId":"468","severity":1,"message":"554","line":106,"column":11,"nodeType":"470","messageId":"471","endLine":106,"endColumn":24},{"ruleId":"464","replacedBy":"571"},{"ruleId":"466","replacedBy":"572"},{"ruleId":"468","severity":1,"message":"549","line":2,"column":31,"nodeType":"470","messageId":"471","endLine":2,"endColumn":38},{"ruleId":"485","severity":1,"message":"573","line":18,"column":5,"nodeType":"470","endLine":18,"endColumn":14,"suggestions":"574"},{"ruleId":"512","severity":1,"message":"551","line":25,"column":30,"nodeType":"514","messageId":"552","endLine":25,"endColumn":32},{"ruleId":"512","severity":1,"message":"513","line":28,"column":17,"nodeType":"530","messageId":"553","endLine":28,"endColumn":23},{"ruleId":"468","severity":1,"message":"554","line":99,"column":11,"nodeType":"470","messageId":"471","endLine":99,"endColumn":24},{"ruleId":"468","severity":1,"message":"546","line":11,"column":8,"nodeType":"470","messageId":"471","endLine":11,"endColumn":15},{"ruleId":"485","severity":1,"message":"575","line":23,"column":8,"nodeType":"526","endLine":23,"endColumn":10,"suggestions":"576"},{"ruleId":"468","severity":1,"message":"577","line":20,"column":11,"nodeType":"470","messageId":"471","endLine":20,"endColumn":22},{"ruleId":"485","severity":1,"message":"578","line":43,"column":8,"nodeType":"526","endLine":43,"endColumn":10,"suggestions":"579"},{"ruleId":"539","severity":1,"message":"540","line":105,"column":62,"nodeType":"541","messageId":"542","endLine":105,"endColumn":64},{"ruleId":"468","severity":1,"message":"546","line":31,"column":8,"nodeType":"470","messageId":"471","endLine":31,"endColumn":15},{"ruleId":"468","severity":1,"message":"580","line":48,"column":11,"nodeType":"470","messageId":"471","endLine":48,"endColumn":18},{"ruleId":"485","severity":1,"message":"581","line":70,"column":8,"nodeType":"526","endLine":70,"endColumn":10,"suggestions":"582"},{"ruleId":"468","severity":1,"message":"583","line":15,"column":5,"nodeType":"470","messageId":"471","endLine":15,"endColumn":11},{"ruleId":"468","severity":1,"message":"584","line":19,"column":37,"nodeType":"470","messageId":"471","endLine":19,"endColumn":52},{"ruleId":"468","severity":1,"message":"545","line":24,"column":8,"nodeType":"470","messageId":"471","endLine":24,"endColumn":13},{"ruleId":"485","severity":1,"message":"585","line":82,"column":8,"nodeType":"526","endLine":82,"endColumn":10,"suggestions":"586"},{"ruleId":"512","severity":1,"message":"513","line":87,"column":43,"nodeType":"514","messageId":"515","endLine":87,"endColumn":45},{"ruleId":"587","severity":1,"message":"588","line":109,"column":9,"nodeType":"589","messageId":"590","endLine":118,"endColumn":10},{"ruleId":"485","severity":1,"message":"591","line":26,"column":8,"nodeType":"526","endLine":26,"endColumn":10,"suggestions":"592"},{"ruleId":"516","severity":1,"message":"522","line":119,"column":25,"nodeType":"518","endLine":121,"endColumn":28},{"ruleId":"468","severity":1,"message":"545","line":4,"column":8,"nodeType":"470","messageId":"471","endLine":4,"endColumn":13},{"ruleId":"468","severity":1,"message":"593","line":7,"column":15,"nodeType":"470","messageId":"471","endLine":7,"endColumn":27},{"ruleId":"485","severity":1,"message":"594","line":56,"column":8,"nodeType":"526","endLine":56,"endColumn":36,"suggestions":"595"},{"ruleId":"587","severity":1,"message":"588","line":73,"column":9,"nodeType":"589","messageId":"590","endLine":82,"endColumn":10},{"ruleId":"468","severity":1,"message":"596","line":2,"column":9,"nodeType":"470","messageId":"471","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"513","line":20,"column":28,"nodeType":"514","messageId":"515","endLine":20,"endColumn":30},{"ruleId":"512","severity":1,"message":"513","line":24,"column":42,"nodeType":"514","messageId":"515","endLine":24,"endColumn":44},{"ruleId":"512","severity":1,"message":"513","line":28,"column":50,"nodeType":"514","messageId":"515","endLine":28,"endColumn":52},{"ruleId":"485","severity":1,"message":"597","line":25,"column":8,"nodeType":"526","endLine":25,"endColumn":29,"suggestions":"598"},{"ruleId":"468","severity":1,"message":"469","line":2,"column":21,"nodeType":"470","messageId":"471","endLine":2,"endColumn":30},{"ruleId":"468","severity":1,"message":"599","line":2,"column":17,"nodeType":"470","messageId":"471","endLine":2,"endColumn":25},{"ruleId":"468","severity":1,"message":"545","line":13,"column":8,"nodeType":"470","messageId":"471","endLine":13,"endColumn":13},{"ruleId":"468","severity":1,"message":"600","line":20,"column":11,"nodeType":"470","messageId":"471","endLine":20,"endColumn":23},{"ruleId":"485","severity":1,"message":"601","line":44,"column":8,"nodeType":"526","endLine":44,"endColumn":10,"suggestions":"602"},{"ruleId":"539","severity":1,"message":"540","line":118,"column":50,"nodeType":"541","messageId":"542","endLine":118,"endColumn":52},{"ruleId":"512","severity":1,"message":"513","line":60,"column":40,"nodeType":"514","messageId":"515","endLine":60,"endColumn":42},{"ruleId":"468","severity":1,"message":"603","line":5,"column":54,"nodeType":"470","messageId":"471","endLine":5,"endColumn":65},"no-native-reassign",["604"],"no-negated-in-lhs",["605"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'getUserInfo' is defined but never used.","'userInfo' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["606","607"],"'setIsUserMenu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMenuArray'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isUserMenu] as a second argument to the useEffect Hook.",["608"],"'Col' is defined but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["604"],["605"],["604"],["605"],"'AuditOutlined' is defined but never used.","'BarsOutlined' is defined but never used.","'ClusterOutlined' is defined but never used.","'FormOutlined' is defined but never used.","'TableOutlined' is defined but never used.","'TeamOutlined' is defined but never used.","'UsergroupAddOutlined' is defined but never used.","'HomeIcon' is defined but never used.","'ResumeIcon' is defined but never used.","'AccountManageIcon' is defined but never used.","'ShareManageIcon' is defined but never used.","'RecruitmentIcon' is defined but never used.","'PermissionIcon' is defined but never used.","'React' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setCloumns' is assigned a value but never used.","'RECRUITMENT_STATE_MAP' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.userId'. Either include it or remove the dependency array.","ArrayExpression",["609"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["610"],"'contentStyle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'associationId' and 'userInfo.userId'. Either include them or remove the dependency array.",["611"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'listRecruitment' is defined but never used.","'axios' is defined but never used.","'confirm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.shareId'. Either include it or remove the dependency array.",["612"],"'Popover' is defined but never used.","'usePublish' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","expectedReturnValue","'confirmDelete' is assigned a value but never used.",["613"],"'addingCollegeName' is assigned a value but never used.","'setAddingCollegeName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshTree'. Either include it or remove the dependency array.",["614"],"'qs' is defined but never used.","'newAssociation' is assigned a value but never used.","'setNewAssociation' is assigned a value but never used.",["615"],"React Hook useEffect has a missing dependency: 'props.associationId'. Either include it or remove the dependency array.",["616"],"React Hook useEffect has missing dependencies: 'props.associationId' and 'props.recruitmentId'. Either include them or remove the dependency array.",["617"],"'applicationList' is assigned a value but never used.","React Hook useEffect contains a call to 'setApplicationList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["618"],["604"],["605"],"React Hook useEffect contains a call to 'setRecruitmentList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [dataSource] as a second argument to the useEffect Hook.",["619"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["620"],"'userSession' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.applicationId'. Either include it or remove the dependency array.",["621"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.",["622"],"'Select' is defined but never used.","'SettingOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshResume'. Either include it or remove the dependency array.",["623"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'refreshApplication'. Either include it or remove the dependency array.",["624"],"'OPTION_ICONS' is defined but never used.","React Hook useEffect has missing dependencies: 'association' and 'refreshAssociationData'. Either include them or remove the dependency array.",["625"],"'TREE_NODE_TYPE' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshUserList'. Either include it or remove the dependency array.",["626"],"'Checkbox' is defined but never used.","'isSuperAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshAssociationList'. Either include it or remove the dependency array.",["627"],"'getUserById' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"628","fix":"629","desc":"630"},{"messageId":"631","fix":"632","desc":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"636","fix":"644"},{"desc":"645","fix":"646"},{"desc":"636","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},"removeEscape",{"range":"672","text":"673"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"674","text":"675"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Add dependencies array: [isUserMenu]",{"range":"676","text":"677"},"Update the dependencies array to be: [userInfo.userId]",{"range":"678","text":"679"},"Update the dependencies array to be: [history, userInfo]",{"range":"680","text":"681"},"Update the dependencies array to be: [associationId, userInfo.userId]",{"range":"682","text":"683"},"Update the dependencies array to be: [props.match.params.shareId]",{"range":"684","text":"685"},{"range":"686","text":"679"},"Update the dependencies array to be: [refreshTree]",{"range":"687","text":"688"},{"range":"689","text":"679"},"Update the dependencies array to be: [props.associationId]",{"range":"690","text":"691"},"Update the dependencies array to be: [props.associationId, props.recruitmentId]",{"range":"692","text":"693"},"Add dependencies array: []",{"range":"694","text":"695"},"Add dependencies array: [dataSource]",{"range":"696","text":"697"},"Update the dependencies array to be: [props.match.params.id]",{"range":"698","text":"699"},"Update the dependencies array to be: [props.match.params.applicationId]",{"range":"700","text":"701"},"Update the dependencies array to be: [refresh]",{"range":"702","text":"703"},"Update the dependencies array to be: [refreshResume]",{"range":"704","text":"705"},"Update the dependencies array to be: [refreshApplication]",{"range":"706","text":"707"},"Update the dependencies array to be: [association, association.associationId, refreshAssociationData]",{"range":"708","text":"709"},"Update the dependencies array to be: [props.associationId, refreshUserList]",{"range":"710","text":"711"},"Update the dependencies array to be: [refreshAssociationList]",{"range":"712","text":"713"},[1971,1972],"",[1971,1971],"\\",[884,884],", [isUserMenu]",[668,670],"[userInfo.userId]",[1288,1298],"[history, userInfo]",[1697,1699],"[associationId, userInfo.userId]",[829,831],"[props.match.params.shareId]",[1478,1480],[953,955],"[refreshTree]",[1993,1995],[1221,1223],"[props.associationId]",[1378,1380],"[props.associationId, props.recruitmentId]",[717,717],", []",[751,751],", [dataSource]",[674,676],"[props.match.params.id]",[1779,1781],"[props.match.params.applicationId]",[2034,2036],"[refresh]",[2638,2640],"[refreshResume]",[1013,1015],"[refreshApplication]",[2233,2261],"[association, association.associationId, refreshAssociationData]",[824,845],"[props.associationId, refreshUserList]",[1422,1424],"[refreshAssociationList]"]