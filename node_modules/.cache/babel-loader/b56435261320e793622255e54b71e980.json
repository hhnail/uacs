{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\mySrc\\\\front\\\\VSCode-workspace\\\\uacs_ui\\\\src\\\\views\\\\SandBox\\\\UserList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { UnorderedListOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport UserForm from '../../../components/user-manage/UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  confirm\n} = _Modal;\nexport default function UserList() {\n  _s();\n\n  const [dataSource, setDataSource] = useState([]);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n  const [associationList, setAssciationList] = useState([]);\n  const [roleList, setRoleList] = useState([]);\n  const addFormRef = useRef(null); // 获取社团列表\n\n  useEffect(() => {\n    axios.get(\"/association/getAllAssociationList\").then(res => {\n      const {\n        data\n      } = res.data; // console.log(\"==52 roleList\", data);\n\n      setAssciationList(data);\n    }).catch(err => {\n      console.log(\"获取社团列表出错！\", err);\n    });\n  }, []); // 获取角色列表\n\n  useEffect(() => {\n    axios.get(\"/association/getRoleList\").then(res => {\n      const {\n        data\n      } = res.data; // console.log(\"==52 roleList\", data);\n\n      setRoleList(data);\n    }).catch(err => {\n      console.log(\"获取角色列表出错！\", err);\n    });\n  }, []); // 获取用户列表\n\n  useEffect(() => {\n    axios.get(\"/association/getAllUsers\").then(res => {\n      const {\n        data\n      } = res.data;\n      console.log(\"==51 userList\", data);\n      setDataSource(data);\n    }).catch(err => {\n      console.log(\"获取用户列表出错！\", err);\n    });\n  }, []); // 表的行列结构\n\n  const columns = [{\n    title: '学号',\n    dataIndex: 'userId',\n    render: userId => {\n      return /*#__PURE__*/_jsxDEV(\"b\", {\n        children: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: '姓名',\n    dataIndex: 'name'\n  }, {\n    title: '角色',\n    dataIndex: 'roleList',\n    filters: [...roleList.map(role => {\n      return {\n        text: role.roleName,\n        value: role.roleName\n      };\n    })],\n    onFilter: (value, item) => {\n      var exist = false;\n      item.map(role => {\n        if (role.roleName === value) {\n          exist = true;\n        }\n      });\n      return exist;\n    },\n    render: (roleList, item) => {\n      return roleList.map(role => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: role.roleName === \"超级管理员\" ? `${role.roleName}` : `${role.roleName} OF ${role.associationName}`\n        }, role.roleId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this);\n      });\n    }\n  }, {\n    title: '成员状态',\n    dataIndex: 'state',\n    render: state => {\n      return /*#__PURE__*/_jsxDEV(_Switch, {\n        checked: state === \"OPEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: '操作',\n    render: item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          shape: \"circle\",\n          icon: /*#__PURE__*/_jsxDEV(UnorderedListOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 31\n          }, this),\n          disabled: item.canDel === 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(_Button, {\n          shape: \"circle\",\n          icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 31\n          }, this),\n          danger: true,\n          disabled: item.canDel === 0,\n          onClick: () => confirmDelete(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 24\n      }, this);\n    }\n  }]; // 删除确认\n\n  const confirmDelete = item => {\n    // console.log(\"delete item\", item)\n    confirm({\n      title: '您确认要删除吗？',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }, this),\n\n      onOk() {\n        // 同步页面\n        // console.log(\"同步前端页面\")\n        const newList = dataSource.filter(data => data.id !== item.id);\n        setDataSource(newList); // 调用后端接口，同步后台数据库\n\n        console.log(\"同步后台数据。。。\");\n        axios.delete(`/association/deleteUserById/${item.userId}`).then(res => {}).catch(err => {});\n      },\n\n      onCancel() {}\n\n    });\n  }; // 弹出模态框\n\n\n  const showAddModal = () => {\n    // console.log(\"==1 弹出模态框\");\n    setIsAddModalVisible(true);\n  }; // 模态框 确认 添加成员\n\n\n  const handelUserAddModalOk = () => {\n    // console.log(\"====3 确定\");\n    addFormRef.current.validateFields().then(value => {\n      setIsAddModalVisible(false); // 关闭模态框\n\n      console.log(\"==4 \", value); // 封装表单信息\n\n      const userObj = {\n        userId: value.user_id,\n        name: value.name,\n        roleName: value.roleName,\n        associationName: value.associationName\n      }; // 清空表单信息\n\n      addFormRef.current.resetFields(); // 同步后端数据库\n\n      axios.post(`/association/addUser`, userObj).then(res => {\n        console.log(\"==10 addUser res\", res);\n\n        if (!res.data.data) {\n          //如果失败了，data是null（失败原因可能是：学号已经存在，数据库插入失败）\n          // 同步前端  根据当前user_id获取user信息\n          axios.get(`/association/getUserById/${userObj.userId}`).then(res => {\n            console.log(\"==11 getUserById res\", res);\n            console.log(\"==11 getUserById res.data.data\", res.data.data);\n            setDataSource([...dataSource, res.data.data]);\n          }).catch(err => {\n            // catch 获取用户信息失败\n            console.log(\"==err3 getUserById err\", err);\n          });\n        }\n      }).catch(err => {\n        // catch 同步后端数据失败\n        console.log(\"==err1 addUser err\", err);\n      });\n    }).catch(err => {\n      // catch 表单验证失败\n      // setIsAddModalVisible(false)\n      console.log(\"==err2 \", err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\" // shape=\"circle\"\n      ,\n      onClick: showAddModal,\n      children: \"\\u65B0\\u589E\\u6210\\u5458\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Table, {\n      dataSource: dataSource,\n      columns: columns,\n      pagination: {\n        pageSize: 4\n      },\n      rowKey: item => item.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n      visible: isAddModalVisible,\n      title: \"\\u521B\\u5EFA\\u65B0\\u6210\\u5458\",\n      okText: \"\\u786E\\u8BA4\",\n      cancelText: \"\\u53D6\\u6D88\",\n      onCancel: () => {\n        setIsAddModalVisible(false);\n        console.log(\"==3 取消\");\n      },\n      onOk: handelUserAddModalOk,\n      children: /*#__PURE__*/_jsxDEV(UserForm, {\n        associationList: associationList,\n        roleList: roleList,\n        ref: addFormRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserList, \"ja56+DYiH04iyu19rvnHPjdPxQk=\");\n\n_c = UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["D:/workspace/mySrc/front/VSCode-workspace/uacs_ui/src/views/SandBox/UserList/index.jsx"],"names":["React","useState","useEffect","useRef","UnorderedListOutlined","DeleteOutlined","ExclamationCircleOutlined","axios","UserForm","confirm","UserList","dataSource","setDataSource","isAddModalVisible","setIsAddModalVisible","associationList","setAssciationList","roleList","setRoleList","addFormRef","get","then","res","data","catch","err","console","log","columns","title","dataIndex","render","userId","filters","map","role","text","roleName","value","onFilter","item","exist","associationName","roleId","state","canDel","confirmDelete","icon","onOk","newList","filter","id","delete","onCancel","showAddModal","handelUserAddModalOk","current","validateFields","userObj","user_id","name","resetFields","post","pageSize"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Switch,\r\n} from 'antd'\r\n\r\nimport {\r\n    UnorderedListOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport axios from 'axios'\r\nimport UserForm from '../../../components/user-manage/UserForm';\r\n\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function UserList() {\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [isAddModalVisible, setIsAddModalVisible] = useState(false)\r\n\r\n    const [associationList, setAssciationList] = useState([])\r\n    const [roleList, setRoleList] = useState([])\r\n\r\n    const addFormRef = useRef(null)\r\n\r\n    // 获取社团列表\r\n    useEffect(() => {\r\n        axios.get(\"/association/getAllAssociationList\")\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"==52 roleList\", data);\r\n                setAssciationList(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"获取社团列表出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n    // 获取角色列表\r\n    useEffect(() => {\r\n        axios.get(\"/association/getRoleList\")\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"==52 roleList\", data);\r\n                setRoleList(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"获取角色列表出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n    // 获取用户列表\r\n    useEffect(() => {\r\n        axios.get(\"/association/getAllUsers\")\r\n            .then(res => {\r\n                const {data} = res.data\r\n                console.log(\"==51 userList\", data);\r\n                setDataSource(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"获取用户列表出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n    // 表的行列结构\r\n    const columns = [\r\n        {\r\n            title: '学号',\r\n            dataIndex: 'userId',\r\n            render: (userId) => {\r\n                return <b>{userId}</b>\r\n            }\r\n        },\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '角色',\r\n            dataIndex: 'roleList',\r\n            filters: [\r\n                ...roleList.map((role) => {\r\n                    return {\r\n                        text: role.roleName,\r\n                        value: role.roleName,\r\n                    }\r\n                })\r\n            ],\r\n            onFilter:(value,item)=>{\r\n                var exist = false\r\n                item.map(role=>{\r\n                    if(role.roleName === value){\r\n                        exist = true\r\n                    }\r\n                })\r\n                return exist\r\n\r\n            },\r\n            render: (roleList, item) => {\r\n                return roleList.map((role) => {\r\n                    return (\r\n                        <div key={role.roleId}>\r\n                            {\r\n                                role.roleName === \"超级管理员\" ?\r\n                                    `${role.roleName}`\r\n                                    : `${role.roleName} OF ${role.associationName}`\r\n                            }\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        },\r\n        {\r\n            title: '成员状态',\r\n            dataIndex: 'state',\r\n            render: ((state) => {\r\n                return <Switch\r\n                    checked={state === \"OPEN\"}\r\n                >\r\n                </Switch>\r\n            })\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => {\r\n                return <div>\r\n                    <Button\r\n                        shape={\"circle\"}\r\n                        icon={<UnorderedListOutlined/>}\r\n                        disabled={item.canDel === 0}\r\n                    >\r\n                    </Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button\r\n                        shape={\"circle\"}\r\n                        icon={<DeleteOutlined/>}\r\n                        danger\r\n                        disabled={item.canDel === 0}\r\n                        onClick={() => confirmDelete(item)}\r\n                    >\r\n                    </Button>\r\n                </div>\r\n            }\r\n        },\r\n    ]\r\n\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        // console.log(\"delete item\", item)\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                // console.log(\"同步前端页面\")\r\n                const newList = dataSource.filter(data => data.id !== item.id)\r\n                setDataSource(newList)\r\n                // 调用后端接口，同步后台数据库\r\n                console.log(\"同步后台数据。。。\")\r\n                axios.delete(`/association/deleteUserById/${item.userId}`)\r\n                    .then((res) => {\r\n\r\n                    })\r\n                    .catch((err) => {\r\n\r\n                    })\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 弹出模态框\r\n    const showAddModal = () => {\r\n        // console.log(\"==1 弹出模态框\");\r\n        setIsAddModalVisible(true)\r\n    }\r\n\r\n\r\n    // 模态框 确认 添加成员\r\n    const handelUserAddModalOk = () => {\r\n        // console.log(\"====3 确定\");\r\n        addFormRef.current.validateFields().then(value => {\r\n            setIsAddModalVisible(false)// 关闭模态框\r\n            console.log(\"==4 \", value);\r\n\r\n            // 封装表单信息\r\n            const userObj = {\r\n                userId: value.user_id,\r\n                name: value.name,\r\n                roleName: value.roleName,\r\n                associationName: value.associationName\r\n            }\r\n\r\n            // 清空表单信息\r\n            addFormRef.current.resetFields()\r\n\r\n            // 同步后端数据库\r\n            axios.post(`/association/addUser`, userObj).then((res) => {\r\n                console.log(\"==10 addUser res\", res)\r\n                if (!res.data.data) { //如果失败了，data是null（失败原因可能是：学号已经存在，数据库插入失败）\r\n                    // 同步前端  根据当前user_id获取user信息\r\n                    axios.get(`/association/getUserById/${userObj.userId}`).then(res => {\r\n                        console.log(\"==11 getUserById res\", res)\r\n                        console.log(\"==11 getUserById res.data.data\", res.data.data)\r\n                        setDataSource([...dataSource, res.data.data])\r\n                    }).catch(err => { // catch 获取用户信息失败\r\n                        console.log(\"==err3 getUserById err\", err)\r\n                    })\r\n                }\r\n            }).catch((err) => { // catch 同步后端数据失败\r\n                console.log(\"==err1 addUser err\", err)\r\n            })\r\n        }).catch(err => { // catch 表单验证失败\r\n            // setIsAddModalVisible(false)\r\n            console.log(\"==err2 \", err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                type=\"primary\"\r\n                // shape=\"circle\"\r\n                onClick={showAddModal}\r\n            >\r\n                新增成员\r\n            </Button>\r\n            <Table\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 4\r\n                }}\r\n                rowKey={item => item.id}\r\n            />\r\n            <Modal\r\n                visible={isAddModalVisible}\r\n                title=\"创建新成员\"\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onCancel={() => {\r\n                    setIsAddModalVisible(false)\r\n                    console.log(\"==3 取消\");\r\n                }}\r\n                onOk={handelUserAddModalOk}\r\n            >\r\n                <UserForm\r\n                    associationList={associationList}\r\n                    roleList={roleList}\r\n                    ref={addFormRef}\r\n                ></UserForm>\r\n            </Modal>\r\n        </div>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}