{"ast":null,"code":"import \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"D:\\\\workspace\\\\mySrc\\\\front\\\\VSCode-workspace\\\\uacs_ui\\\\src\\\\components\\\\UserHeader\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { DashboardTwoTone } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header\n} = _Layout; //空菜单\n\nconst nullArray = new Array(5).fill(null); //“广场”菜单\n\nconst partMenuArray = [{\n  id: 1,\n  value: '纳新广场'\n}, {\n  id: 2,\n  value: '活动广场'\n}, {\n  id: 3,\n  value: '赛事广场'\n}]; //用户菜单\n\nconst userMenuArray = [{\n  id: 1,\n  value: '首页'\n}, {\n  id: 2,\n  value: '个人中心'\n}];\nexport default class UserHeader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //是否是用户菜单\n      isUserMenu: this.props.isUserMenu,\n      //展示的菜单Array\n      menuArray: nullArray\n    };\n\n    this.componentWillMount = () => {\n      //判断是否为用户菜单，展示props传递过来的相对应的菜单\n      this.state.isUserMenu ? this.setState({\n        menuArray: userMenuArray\n      }) : this.setState({\n        menuArray: partMenuArray\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Menu, {\n        theme: \"light\",\n        mode: \"horizontal\",\n        defaultSelectedKeys: ['0'],\n        children: this.state.menuArray.map((item, id) => {\n          return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n            children: item.value\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/workspace/mySrc/front/VSCode-workspace/uacs_ui/src/components/UserHeader/index.jsx"],"names":["React","Component","DashboardTwoTone","Header","nullArray","Array","fill","partMenuArray","id","value","userMenuArray","UserHeader","state","isUserMenu","props","menuArray","componentWillMount","setState","render","map","item"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SACIC,gBADJ,QAEO,mBAFP;;AAKA,MAAM;AAAEC,EAAAA;AAAF,WAAN,C,CAEA;;AACA,MAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAAlB,C,CACA;;AACA,MAAMC,aAAa,GAAG,CAClB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADkB,EAElB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFkB,EAGlB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAHkB,CAAtB,C,CAKA;;AACA,MAAMC,aAAa,GAAG,CAClB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADkB,EAElB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFkB,CAAtB;AAOA,eAAe,MAAME,UAAN,SAAyBV,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAG9CW,KAH8C,GAGtC;AACJ;AACAC,MAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWD,UAFnB;AAGJ;AACAE,MAAAA,SAAS,EAAEX;AAJP,KAHsC;;AAAA,SAU9CY,kBAV8C,GAUzB,MAAM;AACvB;AACA,WAAKJ,KAAL,CAAWC,UAAX,GAAwB,KAAKI,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEL;AAAb,OAAd,CAAxB,GAAsE,KAAKO,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAER;AAAb,OAAd,CAAtE;AACH,KAb6C;AAAA;;AAe9CW,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,YAAzB;AAAsC,QAAA,mBAAmB,EAAE,CAAC,GAAD,CAA3D;AAAA,kBACK,KAAKN,KAAL,CAAWG,SAAX,CAAqBI,GAArB,CAAyB,CAACC,IAAD,EAAOZ,EAAP,KAAc;AACpC,8BAAO,cAAM,IAAN;AAAA,sBAAqBY,IAAI,CAACX;AAA1B,aAAgBD,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA3B6C","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Menu, Layout } from 'antd';\r\nimport {\r\n    DashboardTwoTone,\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Header } = Layout;\r\n\r\n//空菜单\r\nconst nullArray = new Array(5).fill(null);\r\n//“广场”菜单\r\nconst partMenuArray = [\r\n    { id: 1, value: '纳新广场' },\r\n    { id: 2, value: '活动广场' },\r\n    { id: 3, value: '赛事广场' }\r\n];\r\n//用户菜单\r\nconst userMenuArray = [\r\n    { id: 1, value: '首页' },\r\n    { id: 2, value: '个人中心' }\r\n];\r\n\r\n\r\n\r\nexport default class UserHeader extends Component {\r\n\r\n    //状态\r\n    state = {\r\n        //是否是用户菜单\r\n        isUserMenu: this.props.isUserMenu,\r\n        //展示的菜单Array\r\n        menuArray: nullArray\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        //判断是否为用户菜单，展示props传递过来的相对应的菜单\r\n        this.state.isUserMenu ? this.setState({ menuArray: userMenuArray }) : this.setState({ menuArray: partMenuArray });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header>\r\n                {/* <DashboardTwoTone /> */}\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['0']}>\r\n                    {this.state.menuArray.map((item, id) => {\r\n                        return <Menu.Item key={id}>{item.value}</Menu.Item>;\r\n                    })}\r\n                </Menu>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}