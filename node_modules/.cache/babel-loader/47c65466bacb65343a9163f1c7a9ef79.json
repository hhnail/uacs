{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\mySrc\\\\front\\\\VSCode-workspace\\\\uacs_ui\\\\src\\\\views\\\\SandBox\\\\UserList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { UnorderedListOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport UserForm from '../../../components/user-manage/UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  confirm\n} = _Modal;\nexport default function UserList() {\n  _s();\n\n  const [dataSource, setDataSource] = useState([]);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n  const [associationList, setAssciationList] = useState([]);\n  const [roleList, setRoleList] = useState([]);\n  const addFormRef = useRef(null); // 获取社团列表\n\n  useEffect(() => {\n    axios.get(\"/association/getAllAssociationList\").then(res => {\n      const {\n        data\n      } = res.data; // console.log(\"==52 roleList\", data);\n\n      setAssciationList(data);\n    }).catch(err => {\n      console.log(\"获取社团列表出错！\", err);\n    });\n  }, []); // 获取角色列表\n\n  useEffect(() => {\n    axios.get(\"/association/getRoleList\").then(res => {\n      const {\n        data\n      } = res.data; // console.log(\"==52 roleList\", data);\n\n      setRoleList(data);\n    }).catch(err => {\n      console.log(\"获取角色列表出错！\", err);\n    });\n  }, []); // 获取用户列表\n\n  useEffect(() => {\n    axios.get(\"/association/getAllUsers\").then(res => {\n      const {\n        data\n      } = res.data; // console.log(\"==51 userList\", data);\n\n      setDataSource(data);\n    }).catch(err => {\n      console.log(\"获取用户列表出错！\", err);\n    });\n  }, []); // 表的行列结构\n\n  const columns = [{\n    title: '学号',\n    dataIndex: 'userId',\n    render: userId => {\n      return /*#__PURE__*/_jsxDEV(\"b\", {\n        children: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: '姓名',\n    dataIndex: 'name'\n  }, {\n    title: '角色',\n    dataIndex: 'roleList',\n    render: roleList => {\n      return roleList.map(role => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: role.roleName === \"超级管理员\" ? `${role.roleName}` : `${role.roleName} OF ${role.associationName}`\n        }, role.roleId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this);\n      });\n    }\n  }, {\n    title: '成员状态',\n    dataIndex: 'state',\n    render: state => {\n      return /*#__PURE__*/_jsxDEV(_Switch, {\n        checked: state === \"OPEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: '操作',\n    render: item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          shape: \"circle\",\n          icon: /*#__PURE__*/_jsxDEV(UnorderedListOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 31\n          }, this),\n          disabled: item.canDel === 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(_Button, {\n          shape: \"circle\",\n          icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 31\n          }, this),\n          danger: true,\n          disabled: item.canDel === 0,\n          onClick: confirmDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 24\n      }, this);\n    }\n  }]; // 删除确认\n\n  const confirmDelete = item => {\n    const {\n      roleList\n    } = this.state;\n    const thisPoint = this;\n    confirm({\n      title: '您确认要删除吗？',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }, this),\n\n      onOk() {\n        // 同步页面\n        // console.log(\"==1 dataSource\", roleList);\n        const newList = roleList.filter(data => data.roleId !== item.roleId);\n        thisPoint.setState({\n          roleList: newList\n        }); // 调用后端接口，同步后台数据库\n        // axios.get(`/association/deleteRoleById/${item.roleId}`)\n      },\n\n      onCancel() {}\n\n    });\n  }; // 弹出模态框\n\n\n  const showAddModal = () => {\n    console.log(\"==1 弹出模态框\");\n    setIsAddModalVisible(true);\n  }; // 模态框 确认 添加成员\n\n\n  const handelUserAddModalOk = () => {\n    console.log(\"====3 确定\");\n    addFormRef.current.validateFields().then(value => {\n      setIsAddModalVisible(false); // 关闭模态框\n\n      console.log(\"==4 \", value); // 封装表单信息\n\n      const userObj = {\n        userId: value.user_id,\n        name: value.name,\n        roleName: value.roleName,\n        associationName: value.associationName\n      }; // 清空表单信息\n\n      addFormRef.current.resetFields(); // 同步后端数据库\n\n      axios.post(`/association/addUser`, userObj).then(res => {\n        console.log(\"==10 addUser res\", res);\n\n        if (!res.data.data) {\n          //如果失败了，data是null（失败原因可能是：学号已经存在，数据库插入失败）\n          // 同步前端  根据当前user_id获取user信息\n          axios.get(`/association/getUserById/${userObj.userId}`).then(res => {\n            console.log(\"==11 getUserById res\", res);\n            console.log(\"==11 getUserById res.data.data\", res.data.data);\n            setDataSource([...dataSource, res.data.data]);\n          }).catch(err => {\n            // catch 获取用户信息失败\n            console.log(\"==err3 getUserById err\", err);\n          });\n        }\n      }).catch(err => {\n        // catch 同步后端数据失败\n        console.log(\"==err1 addUser err\", err);\n      });\n    }).catch(err => {\n      // catch 表单验证失败\n      // setIsAddModalVisible(false)\n      console.log(\"==err2 \", err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\" // shape=\"circle\"\n      ,\n      onClick: showAddModal,\n      children: \"\\u65B0\\u589E\\u6210\\u5458\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Table, {\n      dataSource: dataSource,\n      columns: columns,\n      pagination: {\n        pageSize: 4\n      },\n      rowKey: item => item.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n      visible: isAddModalVisible,\n      title: \"\\u521B\\u5EFA\\u65B0\\u6210\\u5458\",\n      okText: \"\\u786E\\u8BA4\",\n      cancelText: \"\\u53D6\\u6D88\",\n      onCancel: () => {\n        setIsAddModalVisible(false);\n        console.log(\"==3 取消\");\n      },\n      onOk: handelUserAddModalOk,\n      children: /*#__PURE__*/_jsxDEV(UserForm, {\n        associationList: associationList,\n        roleList: roleList,\n        ref: addFormRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserList, \"ja56+DYiH04iyu19rvnHPjdPxQk=\");\n\n_c = UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["D:/workspace/mySrc/front/VSCode-workspace/uacs_ui/src/views/SandBox/UserList/index.jsx"],"names":["React","useState","useEffect","useRef","UnorderedListOutlined","DeleteOutlined","ExclamationCircleOutlined","axios","UserForm","confirm","UserList","dataSource","setDataSource","isAddModalVisible","setIsAddModalVisible","associationList","setAssciationList","roleList","setRoleList","addFormRef","get","then","res","data","catch","err","console","log","columns","title","dataIndex","render","userId","map","role","roleName","associationName","roleId","state","item","canDel","confirmDelete","thisPoint","icon","onOk","newList","filter","setState","onCancel","showAddModal","handelUserAddModalOk","current","validateFields","value","userObj","user_id","name","resetFields","post","pageSize","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Switch,\r\n} from 'antd'\r\n\r\nimport {\r\n    UnorderedListOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport axios from 'axios'\r\nimport UserForm from '../../../components/user-manage/UserForm';\r\n\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default function UserList() {\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [isAddModalVisible, setIsAddModalVisible] = useState(false)\r\n\r\n    const [associationList, setAssciationList] = useState([])\r\n    const [roleList, setRoleList] = useState([])\r\n\r\n    const addFormRef = useRef(null)\r\n\r\n    // 获取社团列表\r\n    useEffect(() => {\r\n        axios.get(\"/association/getAllAssociationList\")\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"==52 roleList\", data);\r\n                setAssciationList(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"获取社团列表出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n    // 获取角色列表\r\n    useEffect(() => {\r\n        axios.get(\"/association/getRoleList\")\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"==52 roleList\", data);\r\n                setRoleList(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"获取角色列表出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n    // 获取用户列表\r\n    useEffect(() => {\r\n        axios.get(\"/association/getAllUsers\")\r\n            .then(res => {\r\n                const {data} = res.data\r\n                // console.log(\"==51 userList\", data);\r\n                setDataSource(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"获取用户列表出错！\", err);\r\n            })\r\n    }, [])\r\n\r\n    // 表的行列结构\r\n    const columns = [\r\n        {\r\n            title: '学号',\r\n            dataIndex: 'userId',\r\n            render: (userId) => {\r\n                return <b>{userId}</b>\r\n            }\r\n        },\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '角色',\r\n            dataIndex: 'roleList',\r\n            render: (roleList) => {\r\n                return roleList.map((role) => {\r\n                    return (\r\n                        <div key={role.roleId}>\r\n                            {\r\n                                role.roleName === \"超级管理员\" ?\r\n                                    `${role.roleName}`\r\n                                    : `${role.roleName} OF ${role.associationName}`\r\n                            }\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        },\r\n        {\r\n            title: '成员状态',\r\n            dataIndex: 'state',\r\n            render: ((state) => {\r\n                return <Switch\r\n                    checked={state === \"OPEN\"}\r\n                >\r\n                </Switch>\r\n            })\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (item) => {\r\n                return <div>\r\n                    <Button\r\n                        shape={\"circle\"}\r\n                        icon={<UnorderedListOutlined/>}\r\n                        disabled={item.canDel === 0}\r\n                    >\r\n                    </Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button\r\n                        shape={\"circle\"}\r\n                        icon={<DeleteOutlined/>}\r\n                        danger\r\n                        disabled={item.canDel === 0}\r\n                        onClick={confirmDelete}\r\n                    >\r\n                    </Button>\r\n                </div>\r\n            }\r\n        },\r\n    ]\r\n\r\n\r\n    // 删除确认\r\n    const confirmDelete = (item) => {\r\n        const {roleList} = this.state\r\n        const thisPoint = this\r\n        confirm({\r\n            title: '您确认要删除吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            onOk() {\r\n                // 同步页面\r\n                // console.log(\"==1 dataSource\", roleList);\r\n                const newList = roleList.filter(data => data.roleId !== item.roleId)\r\n                thisPoint.setState({roleList: newList})\r\n                // 调用后端接口，同步后台数据库\r\n                // axios.get(`/association/deleteRoleById/${item.roleId}`)\r\n            },\r\n            onCancel() {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    // 弹出模态框\r\n    const showAddModal = () => {\r\n        console.log(\"==1 弹出模态框\");\r\n        setIsAddModalVisible(true)\r\n    }\r\n\r\n\r\n    // 模态框 确认 添加成员\r\n    const handelUserAddModalOk = () => {\r\n        console.log(\"====3 确定\");\r\n        addFormRef.current.validateFields().then(value => {\r\n            setIsAddModalVisible(false)// 关闭模态框\r\n            console.log(\"==4 \", value);\r\n\r\n            // 封装表单信息\r\n            const userObj = {\r\n                userId: value.user_id,\r\n                name: value.name,\r\n                roleName: value.roleName,\r\n                associationName: value.associationName\r\n            }\r\n\r\n            // 清空表单信息\r\n            addFormRef.current.resetFields()\r\n\r\n            // 同步后端数据库\r\n            axios.post(`/association/addUser`, userObj).then((res) => {\r\n                console.log(\"==10 addUser res\", res)\r\n                if (!res.data.data) { //如果失败了，data是null（失败原因可能是：学号已经存在，数据库插入失败）\r\n                    // 同步前端  根据当前user_id获取user信息\r\n                    axios.get(`/association/getUserById/${userObj.userId}`).then(res => {\r\n                        console.log(\"==11 getUserById res\", res)\r\n                        console.log(\"==11 getUserById res.data.data\", res.data.data)\r\n                        setDataSource([...dataSource, res.data.data])\r\n                    }).catch(err => { // catch 获取用户信息失败\r\n                        console.log(\"==err3 getUserById err\", err)\r\n                    })\r\n                }\r\n            }).catch((err) => { // catch 同步后端数据失败\r\n                console.log(\"==err1 addUser err\", err)\r\n            })\r\n        }).catch(err => { // catch 表单验证失败\r\n            // setIsAddModalVisible(false)\r\n            console.log(\"==err2 \", err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                type=\"primary\"\r\n                // shape=\"circle\"\r\n                onClick={showAddModal}\r\n            >\r\n                新增成员\r\n            </Button>\r\n            <Table\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                pagination={{\r\n                    pageSize: 4\r\n                }}\r\n                rowKey={item => item.id}\r\n            />\r\n            <Modal\r\n                visible={isAddModalVisible}\r\n                title=\"创建新成员\"\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onCancel={() => {\r\n                    setIsAddModalVisible(false)\r\n                    console.log(\"==3 取消\");\r\n                }}\r\n                onOk={handelUserAddModalOk}\r\n            >\r\n                <UserForm\r\n                    associationList={associationList}\r\n                    roleList={roleList}\r\n                    ref={addFormRef}\r\n                ></UserForm>\r\n            </Modal>\r\n        </div>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}